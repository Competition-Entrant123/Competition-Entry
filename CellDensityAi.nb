(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    645983,      12215]
NotebookOptionsPosition[    636911,      11931]
NotebookOutlinePosition[    637747,      11960]
CellTagsIndexPosition[    637634,      11954]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["INITIALIZATION", "Chapter",
 CellChangeTimes->{{3.694971584915861*^9, 3.694971587651017*^9}},
 ExpressionUUID -> "466673d1-870f-4914-844f-82782791841f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec8pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
8 2016\\\\**.tif\>\"", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dec8files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
   3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
   3.694348923686077*^9}, 3.6943490544205856`*^9, 3.6958560891328125`*^9, {
   3.7131099846767416`*^9, 3.7131099848492427`*^9}, {3.7131107036557302`*^9, 
   3.7131107056432376`*^9}},
 ExpressionUUID -> "f2d31521-b678-4feb-ae2d-d7488245b76d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec9pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
9 2016\\\\**.tif\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dec9files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
  3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
  3.694348923686077*^9}, {3.6943490544205856`*^9, 3.69434907423839*^9}, {
  3.6943497435836706`*^9, 3.694349772504115*^9}},
 ExpressionUUID -> "c4adcd20-7d28-42fa-82fc-f9e802c4791a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec10pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
10 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dec10files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
10 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
  3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
  3.694348923686077*^9}, {3.6943490544205856`*^9, 3.6943490975962486`*^9}, {
  3.694349795926975*^9, 3.6943498284574747`*^9}},
 ExpressionUUID -> "2fcaf80f-ca59-424f-ad30-7c3df64d5d3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec12pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
12 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dec12files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
12 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
   3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
   3.694348923686077*^9}, {3.6943490544205856`*^9, 3.6943491225416317`*^9}, {
   3.6943498927784624`*^9, 3.6943499063636713`*^9}, {3.713056798565584*^9, 
   3.7130568018937745`*^9}, 3.7135577189292316`*^9},
 ExpressionUUID -> "ca92ff60-f563-4dc9-bc30-f8662408deeb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec13pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
13 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dec13files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
13 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
  3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
  3.694348923686077*^9}, {3.6943490544205856`*^9, 3.694349136809351*^9}, {
  3.694349952001872*^9, 3.694349979969802*^9}, {3.713056815559556*^9, 
  3.7130568170516415`*^9}},
 ExpressionUUID -> "5162b58e-9fd7-41b4-9910-2124a5a3f0bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dec14pics", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
14 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dec14files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
14 2016\\\\**\\\\**\\\\**.tif\>\"", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694347188045752*^9, 3.6943472177787085`*^9}, {
  3.69434732982043*^9, 3.694347346900692*^9}, {3.6943489235635757`*^9, 
  3.694348923686077*^9}, {3.6943490544205856`*^9, 3.694349136809351*^9}, {
  3.694349513000129*^9, 3.6943495230677834`*^9}, {3.6943499840848646`*^9, 
  3.6943500296330643`*^9}},
 ExpressionUUID -> "2e141cb6-90fc-46af-974d-9d0b1bf9cafc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GGroupDec14", "=", 
   RowBox[{"Import", "/@", 
    RowBox[{
    "FileNames", "[", 
     "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
14 2016\\\\Girls Group\\\\**\\\\**.tif\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGroupDec14files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December \
14 2016\\\\Girls Group\\\\**\\\\**.tif\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GGroupDec14adj", "=", 
   RowBox[{"ImageAdjust", "/@", 
    RowBox[{"GGroupDec14", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69494925331481*^9, 3.694949260266207*^9}, {
  3.6949492939321327`*^9, 3.694949301521567*^9}, {3.694949357536771*^9, 
  3.6949493838062735`*^9}, {3.6949494314719996`*^9, 3.694949457654497*^9}, {
  3.694949490327366*^9, 3.694949531538723*^9}},
 ExpressionUUID -> "2675b235-1c17-49e1-97be-a004107e8875"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allpics", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
        "dec8pics"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
        "dec9pics"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
        "dec10pics"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
        "dec12pics"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
        "dec14pics"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6943495362179856`*^9, 3.694349565485935*^9}, 
   3.6943497100781565`*^9, {3.6943500424607615`*^9, 3.694350059353521*^9}, {
   3.6943502019257107`*^9, 3.694350234366209*^9}, 3.6943503922211337`*^9, {
   3.6943506966272783`*^9, 3.694350715231343*^9}, {3.6943527183479147`*^9, 
   3.6943528202907453`*^9}, {3.6945244679105363`*^9, 
   3.6945244811676617`*^9}, {3.694524717180602*^9, 3.6945247318398294`*^9}, {
   3.6948672857889676`*^9, 3.6948672861446686`*^9}, {3.694867464362921*^9, 
   3.6948675163030243`*^9}, 3.694867563969213*^9, {3.6948676632821035`*^9, 
   3.694867727128127*^9}},
 ExpressionUUID -> "159e775e-f950-4054-9b22-71c49e68ec3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allpicsadj", "=", 
   RowBox[{"ImageAdjust", "/@", "allpics"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.694945440146804*^9, 3.694945474119747*^9}},
 ExpressionUUID -> "c48f0919-bd53-4931-99d3-b117e167d354"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allfiles", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{
      "dec8files", ",", "dec9files", ",", "dec10files", ",", "dec12files", 
       ",", "dec14files"}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6943502132708855`*^9, 3.6943502408713093`*^9}, {
  3.6943503888810825`*^9, 3.694350395556185*^9}},
 ExpressionUUID -> "40b18a04-4fcd-4a5c-8a15-2299b2f0b3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binarize by Mean, Median ", "Chapter",
 CellChangeTimes->{{3.7134633905212045`*^9, 3.7134634212128277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"allpics", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", 
    RowBox[{"ColorNegate", "@", 
     RowBox[{"Binarize", "[", 
      RowBox[{"img", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Cluster\>\""}]}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "allpicsadj", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6949454766658926`*^9, 3.6949455186252923`*^9}, {
  3.694957246618965*^9, 3.694957252070277*^9}, {3.7134634270136724`*^9, 
  3.7134634718966165`*^9}, {3.713463522853511*^9, 3.713463556935842*^9}, {
  3.713463790840945*^9, 3.7134638311526227`*^9}, {3.7134667261542835`*^9, 
  3.7134667624983463`*^9}, {3.713466853483901*^9, 3.713466854347903*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 97, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 165, 1}}, Typeset`size$$ = {363., {3., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$31044$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$31044$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`img = 
        Part[$CellContext`allpics, $CellContext`i$$]; ColorNegate[
         Binarize[$CellContext`img, Method -> "Cluster"]]), 
      "Specifications" :> {{$CellContext`i$$, 1, 165, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{414., {51., 58.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.713463472416646*^9, {3.7134635284128284`*^9, 3.7134635572478423`*^9}, 
   3.713463796610275*^9, 3.713463876103694*^9, {3.713466729106435*^9, 
   3.7134667629583726`*^9}, 3.7134668546755033`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,1,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713743793354581*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,2,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71374379352159*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,3,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713743793556592*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\[Rule]\
\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a valid \
image, a color directive, or a list of such objects.\"",2,1,4,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437935965943`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,1,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7141726530548534`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,2,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7141726533200536`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,3,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7141726534292536`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\[Rule]\
\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a valid \
image, a color directive, or a list of such objects.\"",2,1,4,
   22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714172653540954*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,60,29,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7143068704330597`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,60,30,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7143068706780615`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\[Rule]\
\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a valid \
image, a color directive, or a list of such objects.\"",2,60,31,
   22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714306870800562*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,1,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882716092046*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"97\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,2,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827162170534`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,3,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882716267056*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"97\\\", \\\
\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\[Rule]\
\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a valid \
image, a color directive, or a list of such objects.\"",2,1,4,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882716309058*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"img", "=", 
     RowBox[{"allpics", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", 
    RowBox[{"ColorNegate", "@", 
     RowBox[{"Binarize", "[", 
      RowBox[{"img", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<MinimumError\>\""}]}], "]"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "allpicsadj", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6949454766658926`*^9, 3.6949455186252923`*^9}, {
  3.694957246618965*^9, 3.694957252070277*^9}, {3.7134634270136724`*^9, 
  3.7134634718966165`*^9}, {3.713463522853511*^9, 3.713463556935842*^9}, {
  3.713463790840945*^9, 3.7134638311526227`*^9}, {3.7134667261542835`*^9, 
  3.7134667624983463`*^9}, {3.713466853483901*^9, 3.713466854347903*^9}, {
  3.713475298077156*^9, 3.7134753151350145`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 135, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 165, 1}}, Typeset`size$$ = {405., {3., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$36168$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$36168$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`img = 
        Part[$CellContext`allpics, $CellContext`i$$]; ColorNegate[
         Binarize[$CellContext`img, Method -> "MinimumError"]]), 
      "Specifications" :> {{$CellContext`i$$, 1, 165, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{456., {51., 58.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7134753040043774`*^9, 3.7134753156500435`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"135\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,5,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713743793811607*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,6,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437939206133`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"MinimumError\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should \
be a valid image, a color directive, or a list of such objects.\"",2,1,7,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437939586153`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"135\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,5,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714172653735055*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,6,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714172653926056*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"MinimumError\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should \
be a valid image, a color directive, or a list of such objects.\"",2,1,7,
   22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7141726540352554`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"135\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,60,32,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714306871720566*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,60,33,22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7143068718830676`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"MinimumError\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should \
be a valid image, a color directive, or a list of such objects.\"",2,60,34,
   22630675469972906476,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714306871963068*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"135\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,5,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71488271686909*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,6,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717000098*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"135\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"MinimumError\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should \
be a valid image, a color directive, or a list of such objects.\"",2,1,7,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827170401*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cellDensityNew", "[", "pic_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", "z"}], "}"}], ",", 
    RowBox[{
     RowBox[{"k", "=", 
      RowBox[{"EdgeDetect", "[", 
       RowBox[{"pic", ",", 
        RowBox[{"Method", "\[Rule]", "\"\<ShenCastan\>\""}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{"z", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"ImageData", "[", "k", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"z", ",", "0"}], "]"}], "/", 
       RowBox[{"Length", "[", "z", "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.694349586681261*^9, 3.694349626096866*^9}, {
  3.694350289844561*^9, 3.6943503288001595`*^9}, {3.694352679474691*^9, 
  3.694352689927289*^9}, {3.6948822337726436`*^9, 3.694882236034648*^9}, {
  3.7134771787614594`*^9, 3.713477180814577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cells", "=", 
   RowBox[{"SelectComponents", "[", 
    RowBox[{
     RowBox[{"i", "=", 
      RowBox[{"ColorNegate", "@", 
       RowBox[{"Binarize", "[", 
        RowBox[{
         RowBox[{"allpics", "[", 
          RowBox[{"[", "103", "]"}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<Cluster\>\""}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Area\>\"", ",", "\"\<Holes\>\"", ",", "\"\<Circularity\>\""}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"50", "<", "#1", "<", "750"}], "&&", 
        RowBox[{"#2", ">", "0"}]}], "||", 
       RowBox[{
        RowBox[{"#2", ">", "1"}], "&&", 
        RowBox[{".1", "<", "#3", "<", "100"}]}]}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"circles", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{"cells", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Centroid\>\"", ",", "\"\<EquivalentDiskRadius\>\""}], 
       "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"i", ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Circle", "@@", "#"}], "&"}], "/@", "circles"}]}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.69549873015372*^9, 3.6954987346112347`*^9}, {
  3.695498790638908*^9, 3.6954987908364086`*^9}, {3.695498837500554*^9, 
  3.6954988883137283`*^9}, {3.695498981531037*^9, 3.695499042165219*^9}, {
  3.6954992164557905`*^9, 3.695499295054531*^9}, {3.6954995180127354`*^9, 
  3.6954995212827435`*^9}, {3.6954996867912517`*^9, 3.695499718648851*^9}, {
  3.695500123868079*^9, 3.695500136125617*^9}, {3.7134772385406404`*^9, 
  3.713477282725751*^9}, {3.7134773132802763`*^9, 3.713477332444233*^9}, {
  3.7134773666528845`*^9, 3.7134774206062603`*^9}, {3.713477456685395*^9, 
  3.7134774720197744`*^9}, {3.713477546368392*^9, 3.713477626914734*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1: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

    "], {{0, 0}, {800, 600}}, {0, 1},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], Thickness[Large], 
    CircleBox[{736.5571428571428, 569.0904761904762}, 5.781222885281108], 
    CircleBox[{370.0975609756098, 527.2926829268292}, 5.108953969950291], 
    CircleBox[{315.75373134328356, 506.14179104477614}, 4.61809077155419], 
    CircleBox[{729.2, 490.36}, 3.989422804014327], 
    CircleBox[{689.3685714285714, 479.31142857142856}, 7.463526651802308], 
    CircleBox[{629.7836879432624, 403.83333333333337}, 6.699380116989518], 
    CircleBox[{616.0321100917431, 390.93119266055044}, 5.890312181373173], 
    CircleBox[{772.535294117647, 367.1}, 5.201570947860099], 
    CircleBox[{789.8411764705883, 363.4764705882353}, 5.201570947860099], 
    CircleBox[{451.8829787234043, 337.01063829787233}, 5.4700209598571305], 
    CircleBox[{434.2945205479452, 315.6917808219178}, 4.820437914901168], 
    CircleBox[{546.4172413793103, 281.67931034482757}, 6.793742230659745], 
    CircleBox[{233.42156862745097, 284.1078431372549}, 4.029119531035698], 
    CircleBox[{529.2619047619048, 203.52721088435374}, 6.840435166640879], 
    CircleBox[{485.8006993006993, 191.65384615384613}, 6.746726148605861], 
    CircleBox[{599.6788617886178, 192.33739837398372}, 6.257165172872317], 
    CircleBox[{477.5331125827815, 170.40728476821192}, 6.932877671916071], 
    CircleBox[{575.6147540983607, 172.12295081967216}, 4.406461512053774], 
    CircleBox[{688.572072072072, 162.75225225225228}, 5.944106103225343], 
    CircleBox[{661.6076923076923, 145.43846153846152}, 4.54864184146723], 
    CircleBox[{739.4181818181818, 125.25454545454545}, 5.917270272703198], 
    CircleBox[{631., 119.90909090909093}, 2.6462837142006137], 
    CircleBox[{749.6666666666666, 113.}, 4.370193722368317], 
    CircleBox[{724.3666666666667, 114.03333333333336}, 3.7846987830302403], 
    CircleBox[{792.6038961038961, 35.4480519480519}, 4.950743503369154], 
    CircleBox[{734.6590909090909, 6.738636363636374}, 5.292567428401227]}},
  ImageSize->{800, 600},
  PlotRange->{{0, 800}, {0, 600}}]], "Output",
 CellChangeTimes->{{3.713477255324931*^9, 3.7134772870429983`*^9}, {
   3.7134773196266394`*^9, 3.7134774727423763`*^9}, {3.7134775504532804`*^9, 
   3.7134775930116167`*^9}, 3.7134776361879835`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cells", "=", 
     RowBox[{"SelectComponents", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"ColorNegate", "@", 
         RowBox[{"Binarize", "[", 
          RowBox[{
           RowBox[{"allpics", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<Cluster\>\""}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Area\>\"", ",", "\"\<Circularity\>\""}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"20", "<", "#1", "<", "750"}], "&&", 
         RowBox[{".1", "<", "#2", "<", "100"}]}], "&"}]}], "]"}]}], ";", "\n", 
    RowBox[{"circles", "=", 
     RowBox[{
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{"cells", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Centroid\>\"", ",", "\"\<EquivalentDiskRadius\>\""}], 
         "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"i", ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Circle", "@@", "#"}], "&"}], "/@", "circles"}]}], "}"}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", 
     RowBox[{"Length", "@", "allpics"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69549873015372*^9, 3.6954987346112347`*^9}, {
  3.695498790638908*^9, 3.6954987908364086`*^9}, {3.695498837500554*^9, 
  3.6954988883137283`*^9}, {3.695498981531037*^9, 3.695499042165219*^9}, {
  3.6954992164557905`*^9, 3.695499295054531*^9}, {3.6954995180127354`*^9, 
  3.6954995212827435`*^9}, {3.6954996867912517`*^9, 3.695499718648851*^9}, {
  3.695500123868079*^9, 3.695500136125617*^9}, {3.7134772385406404`*^9, 
  3.713477282725751*^9}, {3.7134773132802763`*^9, 3.713477332444233*^9}, {
  3.7134773666528845`*^9, 3.7134774206062603`*^9}, {3.713477456685395*^9, 
  3.7134774720197744`*^9}, {3.713477546368392*^9, 3.713477694392356*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`j$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`j$$], 1, 165, 1}}, Typeset`size$$ = {
    501., {42., 48.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`j$2311822$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`j$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`j$$, $CellContext`j$2311822$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`cells = 
        SelectComponents[$CellContext`i = ColorNegate[
            Binarize[
             Part[$CellContext`allpics, $CellContext`j$$], Method -> 
             "Cluster"]], {"Area", "Circularity"}, And[
          20 < # < 750, 0.1 < #2 < 100]& ]; $CellContext`circles = Part[
          
          ComponentMeasurements[$CellContext`cells, {
           "Centroid", "EquivalentDiskRadius"}], All, 2]; Show[$CellContext`i, 
         Graphics[{Red, Thick, 
           Map[Apply[Circle, #]& , $CellContext`circles]}]]), 
      "Specifications" :> {{$CellContext`j$$, 1, 165, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{552., {88., 95.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.713477697756548*^9, 3.713477743024331*^9, 
  3.713486083614659*^9, 3.7134861752662377`*^9, 3.71348623581664*^9, 
  3.7134863286634808`*^9, 3.713486389786541*^9, 3.713487597416355*^9, 
  3.713489185216444*^9, 3.713489295741166*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,8,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437940366197`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \\\
\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,9,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437940666213`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a \
valid image, a color directive, or a list of such objects.\"",2,1,10,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437940966234`*^9}],

Cell[BoxData[
 TemplateBox[{
  "SelectComponents","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"Binarize\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,1,11,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437941396255`*^9}],

Cell[BoxData[
 TemplateBox[{
  "SelectComponents","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"Binarize\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,1,12,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713743794181628*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"SelectComponents\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"20\\\", \\\"<\\\", \\\"#1\\\", \\\"<\\\", \\\"750\
\\\"}], \\\"&&\\\", RowBox[{\\\"0.1`\\\", \\\"<\\\", \\\"#2\\\", \\\"<\\\", \
\\\"100\\\"}]}], \\\"&\\\"}]}], \\\"]\\\"}]\\).\"",2,1,13,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437942226305`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"}\\\"}]\\).\"",2,1,14,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437942646327`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"Circle\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"]\\\"}]\\).\"",2,1,15,
   22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437943036346`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ComponentMeasurements\\\
\", \\\"::\\\", \\\"invarg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,16,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437943456373`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", GraphicsBox[List[RGBColor[1, 0, 0], \
Thickness[Large], ComponentMeasurements[Circle[\\\"Area\\\", \
\\\"Circularity\\\"], \\\"EquivalentDiskRadius\\\"]]]}], \\\"]\\\"}]\\).\"",2,
   1,17,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437943876395`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", GraphicsBox[List[RGBColor[1, 0, 0], \
Thickness[Large], ComponentMeasurements[Circle[\\\"Area\\\", \
\\\"Circularity\\\"], \\\"EquivalentDiskRadius\\\"]]]}], \\\"]\\\"}]\\).\"",2,
   1,18,22627851058317303300,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7137437944286423`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,8,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717197109*^9}],

Cell[BoxData[
 TemplateBox[{
  "Binarize","imginv",
   "\"Expecting an image or graphics instead of \
\\!\\(\\*RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \\\
\"\[RightDoubleBracket]\\\"}]\\).\"",2,1,9,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827172831144`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ColorNegate","imginv",
   "\"\\!\\(\\*RowBox[{\\\"Binarize\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \\\"5\\\", \
\\\"\[RightDoubleBracket]\\\"}], \\\",\\\", RowBox[{\\\"Method\\\", \\\"\
\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}]\\) should be a \
valid image, a color directive, or a list of such objects.\"",2,1,10,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717334117*^9}],

Cell[BoxData[
 TemplateBox[{
  "SelectComponents","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"Binarize\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,1,11,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.71488271738212*^9}],

Cell[BoxData[
 TemplateBox[{
  "SelectComponents","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"ColorNegate\\\", \\\"[\\\", \
RowBox[{\\\"Binarize\\\", \\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\).\"",2,1,12,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717436123*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"SelectComponents\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"20\\\", \\\"<\\\", \\\"#1\\\", \\\"<\\\", \\\"750\
\\\"}], \\\"&&\\\", RowBox[{\\\"0.1`\\\", \\\"<\\\", \\\"#2\\\", \\\"<\\\", \
\\\"100\\\"}]}], \\\"&\\\"}]}], \\\"]\\\"}]\\).\"",2,1,13,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827174761252`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"}\\\"}]\\).\"",2,1,14,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717526128*^9}],

Cell[BoxData[
 TemplateBox[{
  "ComponentMeasurements","invarg1",
   "\"Expecting a valid label matrix, an image, or a list of an image and a \
label matrix instead of \\!\\(\\*RowBox[{\\\"Circle\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Circularity\\\\\\\"\\\"}], \\\"]\\\"}]\\).\"",2,1,15,
   22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827175801315`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ComponentMeasurements\\\
\", \\\"::\\\", \\\"invarg1\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,16,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7148827176201334`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", GraphicsBox[List[RGBColor[1, 0, 0], \
Thickness[Large], ComponentMeasurements[Circle[\\\"Area\\\", \
\\\"Circularity\\\"], \\\"EquivalentDiskRadius\\\"]]]}], \\\"]\\\"}]\\).\"",2,
   1,17,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717663136*^9}],

Cell[BoxData[
 TemplateBox[{
  "Show","gcomb",
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ColorNegate\\\", \\\"[\\\", RowBox[{\\\"Binarize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"allpics\\\", \\\"\[LeftDoubleBracket]\\\", \
\\\"5\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\", \
RowBox[{\\\"Method\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"Cluster\\\\\\\"\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", GraphicsBox[List[RGBColor[1, 0, 0], \
Thickness[Large], ComponentMeasurements[Circle[\\\"Area\\\", \
\\\"Circularity\\\"], \\\"EquivalentDiskRadius\\\"]]]}], \\\"]\\\"}]\\).\"",2,
   1,18,22635329030750106803,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.714882717705138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cells", "=", 
   RowBox[{"SelectComponents", "[", 
    RowBox[{
     RowBox[{"i", "=", 
      RowBox[{"ColorNegate", "@", 
       RowBox[{"Binarize", "[", 
        RowBox[{
         RowBox[{"allpics", "[", 
          RowBox[{"[", "119", "]"}], "]"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<Cluster\>\""}]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Area\>\"", ",", "\"\<Circularity\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"20", "<", "#1", "<", "750"}], "&&", 
       RowBox[{".1", "<", "#2", "<", "100"}]}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"circles", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{"cells", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Centroid\>\"", ",", "\"\<EquivalentDiskRadius\>\""}], 
       "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boxes", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{"cells", ",", 
      RowBox[{"{", "\"\<BoundingBox\>\"", "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"i", ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Thick", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Circle", "@@", "#"}], "&"}], "/@", "circles"}]}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.69549873015372*^9, 3.6954987346112347`*^9}, {
  3.695498790638908*^9, 3.6954987908364086`*^9}, {3.695498837500554*^9, 
  3.6954988883137283`*^9}, {3.695498981531037*^9, 3.695499042165219*^9}, {
  3.6954992164557905`*^9, 3.695499295054531*^9}, {3.6954995180127354`*^9, 
  3.6954995212827435`*^9}, {3.6954996867912517`*^9, 3.695499718648851*^9}, {
  3.695500123868079*^9, 3.695500136125617*^9}, {3.7134772385406404`*^9, 
  3.713477282725751*^9}, {3.7134773132802763`*^9, 3.713477332444233*^9}, {
  3.7134773666528845`*^9, 3.7134774206062603`*^9}, {3.713477456685395*^9, 
  3.7134774720197744`*^9}, {3.713477546368392*^9, 3.713477694392356*^9}, {
  3.713477798493832*^9, 3.7134778048421955`*^9}, {3.713477881959963*^9, 
  3.713477964094843*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJztnU3v9LyS1h3YsOQjwLdgy5LtICS2M+IwYnOQziAhvj1z7o7tqnI5cRK/
lO3rp+f5393ptF0u1+W3OOn/+E//+x/+579xzv3Lv/vXP//wj//3P//tb//4
//7rv//XN//tr//yv/75r3/5H//lr//nL//8l7/9p3/6+2n//V///Id/69zR
G6eQO+noYF5iimpXztD1+FPGtIKU6vrujVjB79Jy8oVqvB5t5L2s18vQbE7M
OG/BtXoaWKOEA620feTxB8UjLWrEp+SOb2LjJmkGKwLhb5L0YhT0587Hehma
WUJ9QXLeWB9pcDVqU+skxnqAaPF9T8IDjaQWQsJklUe7GlRJkpOS/i8gjiCR
7eVx+qORG9zL7oN2Gn5oRcdNhQJJgiC8sVnnTMwusb56Vknq1HH0/QbwfpuF
UTheO8tPCTqRQKy63wclChFBwMr7xbZGnOZFC5vFZ/CLD4s/f6NC2TCvfvYG
SSavqT6U079l+TWR2JCxGnWxU3kmkPDSaJWf8kj00aBjJ07xmbGxLDnLqLMq
IyZ+aeTwqKnjlW+J8Opx1MgglRcCMSuPg06UqT5a5MTT1cW4kTwChfqoFENf
F68cHQKcb1k10oLcK4SW+FvBmhAKccQGqk2I+obCj6sO4kl+kkU/NUGZ+IXy
M6+MME5D1FcqAnoSn7ST72b0YbHeRfnY4RZZHWGqcx4SYtxKH9o6hVL81h4p
T1yoQxtMHXzljX6QyiMeblCsKpwG+66SfdBsFev3z0HcxeeqLbI1iWiR8vpo
ly85WPZFX1talJMScH3E+o4VnvuKKcL0wxGv6csndTJTVMjnoDsJhJQ1GcX7
z1865PorzxJUu3cuDSGXg5TL+bF7PP9IFWW23kNpooGhgW+SHfFD4he7bmpE
DLf8bOzWIdrnl99Ju6jLr2j1owS3FuunHkj5aPM7gT5iBUX7yPpJrVyUd76h
iQ7fTR+iWTrkMPdd2Dx235MvOBYvl5xJU63EKp9GH3QWwPqPmsNBbXRJHR3e
23VTA2gjK46zlZ9bfxTNHKq1d6zeqJHpvkoy8TiYPjLqqmJfZXIGVjWXDqnC
K587ya+DmyzWAreJNljpfvDniYd/36YkrfMv5JAwWMxq0c9waXeoy8NgzRw5
gVQ1V0nM8U9UzzbBaCXQ1yTejpoG51K6nqskB7Q5hDqpCGdf9RndKv41ebOr
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

    "], {{0, 0}, {800, 600}}, {0, 1},
    ColorFunction->GrayLevel], 
   {RGBColor[1, 0, 0], Thickness[Large], 
    CircleBox[{551.0044247787611, 591.9247787610619}, 5.997417539138688], 
    CircleBox[{115.08620689655173, 555.3965517241379}, 3.0382538898732494], 
    CircleBox[{555.1842105263158, 458.92105263157896}, 2.4592453796829674], 
    CircleBox[{577.3064516129032, 453.7258064516129}, 3.141274657157109], 
    CircleBox[{576.6621621621622, 435.5810810810811}, 3.431831258788849], 
    CircleBox[{317.02542372881356, 399.8220338983051}, 4.3336224206596095], 
    CircleBox[{213.7753623188406, 381.02173913043475}, 4.686510657907603], 
    CircleBox[{211.028, 356.44399999999996}, 6.307831305050401], 
    CircleBox[{452.37179487179486, 360.78205128205127}, 3.523362819972964], 
    CircleBox[{793.0858585858585, 353.1262626262626}, 5.613615477764332], 
    CircleBox[{173.59375, 343.46875}, 5.527906391541368], 
    CircleBox[{170.68367346938774, 329.07142857142856}, 3.949327084834294], 
    CircleBox[{212.35365853658536, 322.3048780487805}, 3.6125759969217834], 
    CircleBox[{183.38, 322.955}, 7.978845608028654], 
    CircleBox[{783.7307692307693, 235.52797202797206}, 6.746726148605861], 
    CircleBox[{465.5980392156863, 182.00980392156862}, 4.029119531035698], 
    CircleBox[{441.34615384615387, 176.34615384615387}, 2.876813695875796], 
    CircleBox[{452.5, 172.42000000000002}, 3.989422804014327], 
    CircleBox[{165.72727272727272, 149.}, 2.6462837142006137], 
    CircleBox[{795.6851851851852, 137.57407407407408}, 2.9316150714175198], 
    CircleBox[{541.8611111111111, 135.22222222222223}, 3.385137501286538], 
    CircleBox[{788.2, 133.60000000000002}, 2.5231325220201604], 
    CircleBox[{192.36666666666667, 121.42000000000002}, 4.886025119029199], 
    CircleBox[{558.9444444444445, 118.90740740740739}, 4.145929793656026], 
    CircleBox[{438.72222222222223, 113.07777777777778}, 3.7846987830302403], 
    CircleBox[{778.60101010101, 99.99494949494948}, 5.613615477764332], 
    CircleBox[{776.4677419354839, 88.66129032258067}, 3.141274657157109], 
    CircleBox[{390.7307692307692, 76.38461538461536}, 4.982787485166879], 
    CircleBox[{175.635593220339, 53.194915254237344}, 4.3336224206596095], 
    CircleBox[{411.7857142857143, 48.785714285714334}, 2.5854414729132054], 
    CircleBox[{615.0645161290323, 47.16129032258061}, 4.442433223290478], 
    CircleBox[{413.04918032786884, 34.50819672131149}, 6.231677632421503], 
    CircleBox[{401.11538461538464, 36.82307692307688}, 4.54864184146723], 
    CircleBox[{164.87142857142857, 24.614285714285757}, 3.3377905890622728], 
    CircleBox[{796.5769230769231, 20.307692307692264}, 2.876813695875796], 
    CircleBox[{759.375, 17.875}, 2.763953195770684], 
    CircleBox[{752.2547169811321, 12.820754716981128}, 4.1073621666150775], 
    CircleBox[{165.9516129032258, 12.38172043010752}, 5.440847306724618], 
    CircleBox[{763.4615384615385, 12.692307692307736}, 2.876813695875796], 
    CircleBox[{775.1923076923077, 12.230769230769283}, 2.876813695875796], 
    CircleBox[{796.1829268292682, 6.378048780487802}, 3.6125759969217834], 
    CircleBox[{734.2073170731708, 6.2073170731707705}, 3.6125759969217834], 
    CircleBox[{781.3846153846154, 3.1153846153846416}, 4.982787485166879]}},
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{653., 490.},
  PlotRange->{{0., 800.}, {0., 600.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{{3.713477885624172*^9, 3.713477907879641*^9}, 
   3.713477965084046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"boxes", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"boxes", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"boxes", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"boxes", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.71347797491*^9, 3.7134779773831415`*^9}, {
   3.7134781560057592`*^9, 3.713478162954923*^9}, 3.7134783409718204`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"542.`", ",", "584.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"560.`", ",", "598.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7134779776651573`*^9, {3.7134781563801603`*^9, 3.7134781635789585`*^9}, 
   3.7134783415198517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"boxes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      "10"}], ",", 
     RowBox[{
      RowBox[{"boxes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}], "+", 
      "500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"boxes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], "-", 
      "500"}], ",", 
     RowBox[{
      RowBox[{"boxes", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], "+", 
      "500"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.71347844728883*^9, 3.7134784533496456`*^9}, {
  3.71347862463949*^9, 3.7134786247798905`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"42.`", ",", "1084.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60.`", ",", "1098.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.713478453835246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageTrim", "[", 
  RowBox[{",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.713478461432073*^9, 3.7134785008481007`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[{{0.}}, {{0, 1}, {1, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1, 1},
  PlotRange->{{0, 1}, {0, 1}}]], "Output",
 CellChangeTimes->{3.7134784745664616`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RandomForest this btch", "Title",
 CellChangeTimes->{{3.7134923417809086`*^9, 3.713492346131158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"deadcells", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ImageTrim", "[", 
       RowBox[{
        RowBox[{"allpics", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], "-",
              "20"}], ",", 
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}], "-",
              "20"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], "+",
              "20"}], ",", 
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], "+",
              "20"}]}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
         "97", ",", "103", ",", "115", ",", "117", ",", "118", ",", "119", 
          ",", "120"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "42"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713477984762563*^9, 3.7134781019394383`*^9}, {
   3.713478290525404*^9, 3.7134784259950485`*^9}, {3.7134786268162956`*^9, 
   3.713478650702013*^9}, {3.713480641853247*^9, 3.713480645643464*^9}, {
   3.7134859761699357`*^9, 3.7134860150567904`*^9}, {3.7134860600023017`*^9, 
   3.7134860606543045`*^9}, {3.7134861337143736`*^9, 
   3.7134861340751743`*^9}, {3.713486549337571*^9, 3.7134865496745906`*^9}, {
   3.713489402580584*^9, 3.7134894034933863`*^9}, {3.7134894410486393`*^9, 
   3.7134894443602457`*^9}, 3.713489497096568*^9, {3.7134895339579806`*^9, 
   3.7134895386912513`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"livecells", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ImageTrim", "[", 
       RowBox[{
        RowBox[{"allpics", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], "-",
              "20"}], ",", 
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}], "-",
              "20"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], "+",
              "20"}], ",", 
            RowBox[{
             RowBox[{"boxes", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], "+",
              "20"}]}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "42"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7134895401603355`*^9, 3.7134895434305224`*^9}, {
  3.7134898797118998`*^9, 3.7134898962666807`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSdeadcells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"deadcells", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "\"\<Dead\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "deadcells"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7134912027160063`*^9, 3.7134912511887503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSlivecells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"livecells", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "\"\<Live\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "livecells"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7134912027160063`*^9, 3.713491264404703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ransamp", "=", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"aSdeadcells", ",", "aSlivecells"}], "]"}]}]}], ";", 
  RowBox[{"trainSet", "=", 
   RowBox[{"ransamp", "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"Floor", "@", 
       RowBox[{"(", 
        RowBox[{".8", "*", 
         RowBox[{"Length", "@", "ransamp"}]}], ")"}]}]}], "]"}], "]"}]}], ";", 
  RowBox[{"testSet", "=", 
   RowBox[{"ransamp", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Ceiling", "@", 
       RowBox[{"(", 
        RowBox[{".8", "*", 
         RowBox[{"Length", "@", "ransamp"}]}], ")"}]}], ";;"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713491268424514*^9, 3.713491374515196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7134911922871313`*^9, 3.7134911951821365`*^9}, {
  3.713491376913*^9, 3.71349138589316*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Feature type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Image\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["403", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.713491411524768*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"c", ",", "testSet"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.713491387488251*^9, 3.7134913970818*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["101", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["101", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.801980198019802`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.713491411945792*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713491400454993*^9, 3.713491412817842*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9062645280681122, 0.7600889095834565, 
   0.40274454497886913`}, {0.8690376041604166, 0.5972909061187154, 
   0.08259195298213745}}, {{1., 0.42, 0.}, {0.9335973832138965, 
   0.867525970335336, 0.6628084303860853}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["55", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "55", "\" examples of \"", "\"Dead\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9016393442622951`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7971014492753623`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.8461538461538463`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{55, " examples of ", "Dead", " correctly classified"}], 
         Row[{"Precision = ", 0.9016393442622951}], 
         Row[{"Recall = ", 0.7971014492753623}], 
         Row[{"FScore = ", 0.8461538461538463}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"Live\"", "\" misclassified as \"", 
             "\"Dead\""}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.35`"}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.2028985507246377`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", "Live", " misclassified as ", "Dead"}], 
         Row[{"Row fraction = ", 0.35}], 
         Row[{"Column fraction = ", 0.2028985507246377}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "6", "\" examples of \"", "\"Dead\"", "\" misclassified as \"", 
             "\"Live\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.09836065573770492`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.1875`"}, "RowDefault"]}},
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{6, " examples of ", "Dead", " misclassified as ", "Live"}], 
         Row[{"Row fraction = ", 0.09836065573770492}], 
         Row[{"Column fraction = ", 0.1875}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["26", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "26", "\" examples of \"", "\"Live\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.65`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.8125`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7222222222222223`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{26, " examples of ", "Live", " correctly classified"}], 
         Row[{"Precision = ", 0.65}], 
         Row[{"Recall = ", 0.8125}], 
         Row[{"FScore = ", 0.7222222222222223}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "61", "\" example\"", "\"s\"", "\" of class \"", "\"Dead\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9016393442622951`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{61, " example", "s", " of class ", "Dead"}], 
        Row[{"Precision = ", 0.9016393442622951}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "40", "\" example\"", "\"s\"", "\" of class \"", "\"Live\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.65`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{40, " example", "s", " of class ", "Live"}], 
        Row[{"Precision = ", 0.65}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "69", "\" example\"", "\"s\"", "\" classified as \"", "\"Dead\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7971014492753623`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{69, " example", "s", " classified as ", "Dead"}], 
        Row[{"Recall = ", 0.7971014492753623}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "32", "\" example\"", "\"s\"", "\" classified as \"", "\"Live\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.8125`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{32, " example", "s", " classified as ", "Live"}], 
        Row[{"Recall = ", 0.8125}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"Dead\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"Live\"", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["61", TraditionalForm]}, {0.5, 
       FormBox["40", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["69", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"Dead\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"Live\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.713491413433877*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CONVALUTIONAL NEURAL NET BBY", "Title",
 CellChangeTimes->{{3.7134923156538396`*^9, 3.71349233028874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"imgd", "=", 
   RowBox[{"ImageDimensions", "/@", "deadcells"}]}], ";", 
  RowBox[{"N", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"imgd", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Mean", "[", 
      RowBox[{"imgd", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.713492066055747*^9, 3.7134922063287544`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50.166666666666664`", ",", "49.80952380952381`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7134921175182557`*^9, 3.713492151499175*^9, {3.713492201845542*^9, 
   3.713492206533555*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reSdeadcells", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"ImageTrim", "[", 
         RowBox[{
          RowBox[{"allpics", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], 
               "-", "20"}], ",", 
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}], 
               "-", "20"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], 
               "+", "20"}], ",", 
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], 
               "+", "20"}]}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
         "97", ",", "103", ",", "115", ",", "117", ",", "118", ",", "119", 
          ",", "120"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "42"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713477984762563*^9, 3.7134781019394383`*^9}, {
   3.713478290525404*^9, 3.7134784259950485`*^9}, {3.7134786268162956`*^9, 
   3.713478650702013*^9}, {3.713480641853247*^9, 3.713480645643464*^9}, {
   3.7134859761699357`*^9, 3.7134860150567904`*^9}, {3.7134860600023017`*^9, 
   3.7134860606543045`*^9}, {3.7134861337143736`*^9, 
   3.7134861340751743`*^9}, {3.713486549337571*^9, 3.7134865496745906`*^9}, {
   3.713489402580584*^9, 3.7134894034933863`*^9}, {3.7134894410486393`*^9, 
   3.7134894443602457`*^9}, 3.713489497096568*^9, {3.7134895339579806`*^9, 
   3.7134895386912513`*^9}, {3.713492006207019*^9, 3.713492011033044*^9}, {
   3.7134920613469353`*^9, 3.7134920639881425`*^9}, {3.71349225328592*^9, 
   3.7134922847768955`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reSlivecells", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"ImageTrim", "[", 
         RowBox[{
          RowBox[{"allpics", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "1", ",", "1"}], "]"}], "]"}], 
               "-", "20"}], ",", 
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "1", ",", "2"}], "]"}], "]"}], 
               "-", "20"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "2", ",", "1"}], "]"}], "]"}], 
               "+", "20"}], ",", 
              RowBox[{
               RowBox[{"boxes", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1", ",", "2", ",", "2"}], "]"}], "]"}], 
               "+", "20"}]}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"50", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "42"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7134895401603355`*^9, 3.7134895434305224`*^9}, {
  3.7134898797118998`*^9, 3.7134898962666807`*^9}, {3.713492012128106*^9, 
  3.7134920125541306`*^9}, {3.7134922910382533`*^9, 3.7134923007094517`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSrdeadcells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reSdeadcells", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "\"\<Dead\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "deadcells"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7134912027160063`*^9, 3.7134912511887503`*^9}, {
  3.7134920170943904`*^9, 3.7134920315840464`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSrlivecells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reSlivecells", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "\"\<Live\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "livecells"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7134912027160063`*^9, 3.713491264404703*^9}, {
  3.7134920199635544`*^9, 3.713492037539058*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ransampR", "=", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"aSrdeadcells", ",", "aSrlivecells"}], "]"}]}]}], ";", 
  RowBox[{"trainSet", "=", 
   RowBox[{"ransampR", "[", 
    RowBox[{"[", 
     RowBox[{";;", 
      RowBox[{"Floor", "@", 
       RowBox[{"(", 
        RowBox[{".8", "*", 
         RowBox[{"Length", "@", "ransamp"}]}], ")"}]}]}], "]"}], "]"}]}], ";", 
  RowBox[{"testSet", "=", 
   RowBox[{"ransampR", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Ceiling", "@", 
       RowBox[{"(", 
        RowBox[{".8", "*", 
         RowBox[{"Length", "@", "ransamp"}]}], ")"}]}], ";;"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713491268424514*^9, 3.713491374515196*^9}, {
  3.7134920414842663`*^9, 3.7134920507724867`*^9}}],

Cell[CellGroupData[{

Cell[" Encoders and Decoders", "Section",
 CellChangeTimes->{{3.6998830024624643`*^9, 3.6998830076422806`*^9}, 
   3.702731993157959*^9, {3.7027322568613825`*^9, 3.702732263774187*^9}, 
   3.7134928734846973`*^9},
 ExpressionUUID -> "47153ba8-2dea-413f-9fa2-6c3ba1f9c61d"],

Cell[CellGroupData[{

Cell["Image encoder", "Subsection",
 CellChangeTimes->{{3.7027322193566027`*^9, 3.702732231939995*^9}, 
   3.7033534409491425`*^9},
 ExpressionUUID -> "ae5f3f56-05cf-4dc5-996a-1d28beda62f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"enc", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "50"}], "}"}], ",", 
     RowBox[{"ColorSpace", "\[Rule]", "\"\<Grayscale\>\""}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69970579123143*^9, 3.6997058333173566`*^9}, 
   3.703428444854782*^9, 3.7034284793248496`*^9, {3.713492922461871*^9, 
   3.713492941283368*^9}},
 CellTags->{"ImageDimensions", "ColorSpace"},
 ExpressionUUID -> "3713fd67-8c2b-4bba-9369-a24488e0d269"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["\"Image\"", "SummaryItem", StripOnInput -> False],
                   "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ImageSize\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   RowBox[{"{", 
                    RowBox[{"50", ",", "50"}], "}"}], "SummaryItem", 
                   StripOnInput -> False], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ColorSpace\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                  "\"Grayscale\"", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ColorChannels\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["1", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Parallelize\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["False", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"MeanImage\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["None", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["\"Image\"", "SummaryItem", StripOnInput -> False],
                   "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ImageSize\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   RowBox[{"{", 
                    RowBox[{"50", ",", "50"}], "}"}], "SummaryItem", 
                   StripOnInput -> False], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ColorSpace\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                  "\"Grayscale\"", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"ColorChannels\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["1", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Parallelize\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["False", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"MeanImage\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["None", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("None"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7098504610337515`*^9, 3.713492941533969*^9, 
  3.7138271023274736`*^9, 3.714321499258565*^9},
 CellTags->{"ImageDimensions", "ColorSpace"},
 ExpressionUUID -> "38c10f85-69ff-4ab4-a08e-9519d51398a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dec", "=", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Dead\>\"", ",", "\"\<Live\>\""}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713493003717263*^9, 3.7134930160039005`*^9}},
 ExpressionUUID -> "7493bcf3-f904-46d6-915c-1080af01b550"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["\"Class\"", "SummaryItem", StripOnInput -> False],
                   "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Dead\"", ",", "\"Live\""}], "}"}], 
                    Short[#, 0.5]& ], "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["2", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["\"Class\"", "SummaryItem", StripOnInput -> False],
                   "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Dead\"", ",", "\"Live\""}], "}"}], 
                    Short[#, 0.5]& ], "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation", StripOnInput -> False], 
                  "SummaryItem"], 
                 TagBox[
                  StyleBox["2", "SummaryItem", StripOnInput -> False], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("None"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7134930163335013`*^9, 3.713827106769882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", "100",
       ",", "Ramp", ",", "2", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "dec"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "enc"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6809417713514547`*^9, 3.680941793410994*^9}, {
  3.7134930295941157`*^9, 3.713493056058446*^9}},
 CellID->948101753,
 ExpressionUUID -> "31842e9b-ca3f-498f-ab9a-0dd26d4fc39e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"Specification \
\\!\\(\\*TagBox[RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"enc\\\"}], Function[Short[Slot[1], 5]]]\\) should describe \
\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\
\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"a \
rank\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)-\\\\\\\\!\\\\\
\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\"}]\\\\\\\\) tensor\\\\\
\\\"\\\", StringForm[\\\"``-`` ``\\\", StringForm[\\\"a ``\\\", \
\\\"rank\\\"], 3, \\\"tensor\\\"], Rule[Editable, False]]\\).\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetChain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"Specification \
\\!\\(\\*TagBox[RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"enc\\\"}], Function[Short[Slot[1], 5]]]\\) should describe \
\\!\\(\\*InterpretationBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\
\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"a \
rank\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}]\\\\\\\\)-\\\\\\\\!\\\\\
\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"3\\\\\\\\\\\\\\\"}]\\\\\\\\) tensor\\\\\
\\\"\\\", StringForm[\\\"``-`` ``\\\", StringForm[\\\"a ``\\\", \
\\\"rank\\\"], 3, \\\"tensor\\\"], Rule[Editable, False]]\\).\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetChain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  Failure[NetChain, 
   Association[
   "MessageTemplate" :> MessageName[NetChain, "netinvportshape"], 
    "MessageParameters" :> {"Input" -> $CellContext`enc, 
      StringForm["``-`` ``", 
       StringForm["a ``", "rank"], 3, "tensor"]}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.71349302827604*^9, 3.713493056562647*^9}, 
   3.714172600803445*^9, 3.714172870976986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "trainSet", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.713493073874219*^9, 3.7134931010783544`*^9}, {
  3.713497091296465*^9, 3.713497095062188*^9}, {3.7134973854269676`*^9, 
  3.7134973857701683`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"First argument to NetTrain should be a fully \
specified net.\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetTrain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         FrameBox[
          StyleBox["\<\"\[WarningSign]\"\>", "Message",
           StripOnInput->False,
           FontSize->35],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          StripOnInput->False], GridBox[{
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Message: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                
                TagBox["\<\"First argument to NetTrain should be a fully \
specified net.\"\>",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]},
           {
            TagBox[GridBox[{
               {
                TagBox["\<\"Tag: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["NetTrain",
                 "SummaryItem"]}
              },
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxItemSize->{"Columns" -> {6.5, All}},
              GridBoxSpacings->{"Columns" -> {{0}}}],
             "SummaryItem"]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  Failure[NetTrain, 
   Association[
   "MessageTemplate" :> MessageName[NetTrain, "invnet"], 
    "MessageParameters" :> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.713493150852582*^9, 3.713497031716812*^9, 
  3.7134971618511257`*^9, 3.7134974751306953`*^9, 3.7141725835982714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7137415557658215`*^9, 3.713741565760975*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\"\>"], "Output",
 CellChangeTimes->{3.7137415661884813`*^9, 3.713826975859893*^9, 
  3.714172742401019*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SIEMENSLiveDead.wlnet\>\"", ",", "trainedNet"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.713741571038556*^9, 3.713741640802128*^9}}],

Cell[BoxData["\<\"SIEMENSLiveDead.wlnet\"\>"], "Output",
 CellChangeTimes->{{3.7137416319819922`*^9, 3.71374164680472*^9}, 
   3.7141726702171288`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"Import", "[", "\"\<SIEMENSLiveDead.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7138270340743227`*^9, 3.7138270562833743`*^9}, 
   3.713827089295745*^9, {3.7141725782953444`*^9, 3.7141725804248624`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`NetChain`PackagePrivate`grid$$ = 
        Grid[{{
           MouseAppearance[
            Annotation["", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Input", {"Inputs", "Input"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"encoded", " ", 
               Row[{"tensor", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"1", "50", "50"}, "\[Times]"], "\[VeryThinSpace]", 
                   ")"}, BaseStyle -> GrayLevel[0.5]]}]}], {
             "Inputs", "Input"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["1", 
              GrayLevel[0.5]], {"Layers", "1"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "1"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "46", "46"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "1"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["2", 
              GrayLevel[0.5]], {"Layers", "2"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "2"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "46", "46"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "2"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["3", 
              GrayLevel[0.5]], {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "3"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"20", "23", "23"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "3"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["4", 
              GrayLevel[0.5]], {"Layers", "4"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ConvolutionLayer, {"Layers", "4"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "19", "19"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "4"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["5", 
              GrayLevel[0.5]], {"Layers", "5"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "5"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "19", "19"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "5"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["6", 
              GrayLevel[0.5]], {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[PoolingLayer, {"Layers", "6"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"tensor", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"50", "10", "10"}, "\[Times]"], "\[VeryThinSpace]", 
                 ")"}, BaseStyle -> GrayLevel[0.5]]}], {"Layers", "6"}, 
             "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["7", 
              GrayLevel[0.5]], {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[FlattenLayer, {"Layers", "7"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"5000"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "7"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["8", 
              GrayLevel[0.5]], {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "8"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "8"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["9", 
              GrayLevel[0.5]], {"Layers", "9"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "9"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "9"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["10", 
              GrayLevel[0.5]], {"Layers", "10"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "10"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"100"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "10"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["11", 
              GrayLevel[0.5]], {"Layers", "11"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[ElementwiseLayer, {"Layers", "11"}, "Mouse"], 
            "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"100"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                BaseStyle -> GrayLevel[0.5]]}], {"Layers", "11"}, "Mouse"], 
            "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["12", 
              GrayLevel[0.5]], {"Layers", "12"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[DotPlusLayer, {"Layers", "12"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "12"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation[
             Style["13", 
              GrayLevel[0.5]], {"Layers", "13"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[SoftmaxLayer, {"Layers", "13"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"vector", " ", 
               Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                 Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, BaseStyle -> 
                GrayLevel[0.5]]}], {"Layers", "13"}, "Mouse"], "LinkHand"]}, {
           MouseAppearance[
            Annotation["", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation["Output", {"Outputs", "Output"}, "Mouse"], "LinkHand"], 
           MouseAppearance[
            Annotation[
             Row[{"decoded", " ", 
               Row[{"vector", " ", 
                 Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                   Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}, 
                  BaseStyle -> GrayLevel[0.5]]}]}], {"Outputs", "Output"}, 
             "Mouse"], "LinkHand"]}}, Alignment -> Left, Spacings -> 1.1], 
        NeuralNetworks`NetChain`PackagePrivate`assoc$$ = Association[
        "Type" -> "Chain", "Layers" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[4, {20, 1, 5, 5}], "Biases" -> 
               NeuralNetworks`TensorT[1, {20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 1, "$GroupNumber" -> 
               1, "$InputSize" -> {50, 50}, "$OutputSize" -> {46, 46}], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[1, 
                 NeuralNetworks`TensorT[2, {50, 50}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {46, 46}]]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {20, 46, 46}, "$Rank" -> 
               3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {46, 46}]]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[3, {20, 46, 46}]]], "3" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 20, 
               "$InputSize" -> {46, 46}, "$OutputSize" -> {23, 23}], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[3, {20, 46, 46}]], 
             "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {23, 23}]]]], "4" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[4, {50, 20, 5, 5}], 
               "Biases" -> NeuralNetworks`TensorT[1, {50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "InputChannels" -> 20, "$GroupNumber" -> 
               1, "$InputSize" -> {23, 23}, "$OutputSize" -> {19, 19}], 
             "Inputs" -> Association["Input" -> NeuralNetworks`ChannelT[20, 
                 NeuralNetworks`TensorT[2, {23, 23}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {19, 19}]]]], "5" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {50, 19, 19}, "$Rank" -> 
               3], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {19, 19}]]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[3, {50, 19, 19}]]], "6" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Channels" -> 50, 
               "$InputSize" -> {19, 19}, "$OutputSize" -> {10, 10}], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[3, {50, 19, 19}]], 
             "Outputs" -> Association["Output" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {10, 10}]]]], "7" -> 
           Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Dimensions" -> {50, 10, 10}, "$Rank" -> 3, "$OutputSize" -> 
               5000], "Inputs" -> 
             Association["Input" -> NeuralNetworks`ChannelT[50, 
                 NeuralNetworks`TensorT[2, {10, 10}]]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {5000}]]], "8" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {500, 5000}], "Biases" -> 
               NeuralNetworks`TensorT[1, {500}]], "Parameters" -> 
             Association["Size" -> 500, "$InputSize" -> 5000], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {5000}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {500}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {500}]]], "10" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {100, 500}], "Biases" -> 
               NeuralNetworks`TensorT[1, {100}]], "Parameters" -> 
             Association["Size" -> 100, "$InputSize" -> 500], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {500}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "11" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> Ramp, "$Dimensions" -> {100}, "$Rank" -> 1], 
             "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {100}]]], "12" -> 
           Association[
            "Type" -> "DotPlus", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`TensorT[2, {2, 100}], "Biases" -> 
               NeuralNetworks`TensorT[1, {2}]], "Parameters" -> 
             Association["Size" -> 2, "$InputSize" -> 100], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {100}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]], "13" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association["Size" -> 2], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[1, {2}]], 
             "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[1, {2}]]]], 
         "Connections" -> {
          NetPort["Layers", "1", "Inputs", "Input"] -> 
           NetPort["Inputs", "Input"], 
           NetPort["Layers", "2", "Inputs", "Input"] -> 
           NetPort["Layers", "1", "Outputs", "Output"], 
           NetPort["Layers", "3", "Inputs", "Input"] -> 
           NetPort["Layers", "2", "Outputs", "Output"], 
           NetPort["Layers", "4", "Inputs", "Input"] -> 
           NetPort["Layers", "3", "Outputs", "Output"], 
           NetPort["Layers", "5", "Inputs", "Input"] -> 
           NetPort["Layers", "4", "Outputs", "Output"], 
           NetPort["Layers", "6", "Inputs", "Input"] -> 
           NetPort["Layers", "5", "Outputs", "Output"], 
           NetPort["Layers", "7", "Inputs", "Input"] -> 
           NetPort["Layers", "6", "Outputs", "Output"], 
           NetPort["Layers", "8", "Inputs", "Input"] -> 
           NetPort["Layers", "7", "Outputs", "Output"], 
           NetPort["Layers", "9", "Inputs", "Input"] -> 
           NetPort["Layers", "8", "Outputs", "Output"], 
           NetPort["Layers", "10", "Inputs", "Input"] -> 
           NetPort["Layers", "9", "Outputs", "Output"], 
           NetPort["Layers", "11", "Inputs", "Input"] -> 
           NetPort["Layers", "10", "Outputs", "Output"], 
           NetPort["Layers", "12", "Inputs", "Input"] -> 
           NetPort["Layers", "11", "Outputs", "Output"], 
           NetPort["Layers", "13", "Inputs", "Input"] -> 
           NetPort["Layers", "12", "Outputs", "Output"], 
           NetPort["Outputs", "Output"] -> 
           NetPort["Layers", "13", "Outputs", "Output"]}, "Inputs" -> 
         Association["Input" -> NeuralNetworks`EncodedType[
             NetEncoder["Image", 
              Association[
              "Parameters" -> 
               Association[
                "ImageSize" -> {50, 50}, "ColorSpace" -> "Grayscale", 
                 "ColorChannels" -> 1, "$AugmentationFunction" -> None, 
                 "Parallelize" -> False, "MeanImage" -> None], "Output" -> 
               NeuralNetworks`ChannelT[1, 
                 NeuralNetworks`TensorT[2, {50, 50}]]]], 
             NeuralNetworks`ChannelT[1, 
              NeuralNetworks`TensorT[2, {50, 50}]]]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`DecodedType[
             NetDecoder["Class", 
              Association[
              "Parameters" -> 
               Association["Labels" -> {"Dead", "Live"}, "Dimensions" -> 2], 
               "Input" -> NeuralNetworks`TensorT[1, {2}]]], 
             NeuralNetworks`TensorT[1, {2}]]]], 
        NeuralNetworks`NetChain`PackagePrivate`opart$$, 
        NeuralNetworks`NetChain`PackagePrivate`part$$ = Null, 
        NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null}, 
        DynamicBox[ToBoxes[
          Column[{
            EventHandler[
            NeuralNetworks`NetChain`PackagePrivate`grid$$, "MouseClicked" :> 
             If[
               ListQ[
               NeuralNetworks`NetChain`PackagePrivate`part$$ = 
                MouseAnnotation[]], 
               If[NeuralNetworks`NetChain`PackagePrivate`opart$$ === 
                 NeuralNetworks`NetChain`PackagePrivate`part$$, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = Null; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = Null, 
                 NeuralNetworks`NetChain`PackagePrivate`selected$$ = 
                  Part[NeuralNetworks`NetChain`PackagePrivate`assoc$$, 
                    Apply[
                    Sequence, NeuralNetworks`NetChain`PackagePrivate`part$$]]; 
                 NeuralNetworks`NetChain`PackagePrivate`opart$$ = 
                  NeuralNetworks`NetChain`PackagePrivate`part$$; Null]; 
               Null]], 
            NeuralNetworks`NetChain`PackagePrivate`fmtSelected[
            NeuralNetworks`NetChain`PackagePrivate`selected$$, 
             NeuralNetworks`NetChain`PackagePrivate`part$$]}, Spacings -> 1], 
          StandardForm],
         ImageSizeCache->{302., {123., 128.}},
         TrackedSymbols:>{NeuralNetworks`NetChain`PackagePrivate`selected$$}],
        DynamicModuleValues:>{}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.7141727342256813`*^9, 3.714172745672736*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmNet", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedNet", ",", "testSet"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7134931535457363`*^9, 3.713493167662077*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["101", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["101", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.9801980198019802`", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.713493171319686*^9, 3.71349703255286*^9, 
  3.713497167092739*^9, 3.7134974783408785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmNet", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713493180088627*^9, 3.713493196262552*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9341607063135838, 0.8696546234424248, 0.6683452406211003}, {
   0.868676874715216, 0.5504530063353666, 0.006538210975302189}}, {{1., 0.42, 
   0.}, {0.9341607063135838, 0.8696546234424248, 0.6683452406211003}}}, {{0, 
   0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["58", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "58", "\" examples of \"", "\"Dead\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9830508474576272`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9830508474576272`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9830508474576272`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{58, " examples of ", "Dead", " correctly classified"}], 
         Row[{"Precision = ", 0.9830508474576272}], 
         Row[{"Recall = ", 0.9830508474576272}], 
         Row[{"FScore = ", 0.9830508474576272}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"Live\"", "\" misclassified as \"", 
             "\"Dead\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.023809523809523808`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.01694915254237288`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "Live", " misclassified as ", "Dead"}], 
         Row[{"Row fraction = ", 0.023809523809523808`}], 
         Row[{"Column fraction = ", 0.01694915254237288}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"Dead\"", "\" misclassified as \"", 
             "\"Live\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.01694915254237288`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.023809523809523808`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1, " example of ", "Dead", " misclassified as ", "Live"}], 
         Row[{"Row fraction = ", 0.01694915254237288}], 
         Row[{"Column fraction = ", 0.023809523809523808`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["41", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "41", "\" examples of \"", "\"Live\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9761904761904762`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9761904761904762`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9761904761904762`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{41, " examples of ", "Live", " correctly classified"}], 
         Row[{"Precision = ", 0.9761904761904762}], 
         Row[{"Recall = ", 0.9761904761904762}], 
         Row[{"FScore = ", 0.9761904761904762}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "59", "\" example\"", "\"s\"", "\" of class \"", "\"Dead\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9830508474576272`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{59, " example", "s", " of class ", "Dead"}], 
        Row[{"Precision = ", 0.9830508474576272}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "42", "\" example\"", "\"s\"", "\" of class \"", "\"Live\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.9761904761904762`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{42, " example", "s", " of class ", "Live"}], 
        Row[{"Precision = ", 0.9761904761904762}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "59", "\" example\"", "\"s\"", "\" classified as \"", "\"Dead\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9830508474576272`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{59, " example", "s", " classified as ", "Dead"}], 
        Row[{"Recall = ", 0.9830508474576272}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "42", "\" example\"", "\"s\"", "\" classified as \"", "\"Live\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9761904761904762`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{42, " example", "s", " classified as ", "Live"}], 
        Row[{"Recall = ", 0.9761904761904762}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["\"Dead\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"Live\"", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["59", TraditionalForm]}, {0.5, 
       FormBox["42", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["59", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["42", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"Dead\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"Live\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.713493196803583*^9, 3.7134970327758727`*^9, 
  3.7134971697567444`*^9, 3.7134974801739836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.714882858222932*^9, 3.714882878786108*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\"\>"], "Output",
 CellChangeTimes->{3.7148828800141783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<confmatplot.png\>\"", ",", 
   GraphicsBox[
    RasterBox[{{{0.9341607063135838, 0.8696546234424248, 
     0.6683452406211003}, {0.868676874715216, 0.5504530063353666, 
     0.006538210975302189}}, {{1., 0.42, 0.}, {0.9341607063135838, 
     0.8696546234424248, 0.6683452406211003}}}, {{0, 0}, {2, 2}}, {0, 1}],
    Epilog->{{
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["58", TraditionalForm], {0.5, 0.5}], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "58", "\" examples of \"", "\"Dead\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Precision = \"", "0.9830508474576272`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"Recall = \"", "0.9830508474576272`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"FScore = \"", "0.9830508474576272`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{58, " examples of ", "Dead", " correctly classified"}], 
           Row[{"Precision = ", 0.9830508474576272}], 
           Row[{"Recall = ", 0.9830508474576272}], 
           Row[{"FScore = ", 0.9830508474576272}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["1", TraditionalForm], {0.5, 0.5}], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             TemplateBox[{
              "1", "\" example of \"", "\"Live\"", "\" misclassified as \"", 
               "\"Dead\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Row fraction = \"", "0.023809523809523808`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"Column fraction = \"", "0.01694915254237288`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{1, " example of ", "Live", " misclassified as ", "Dead"}], 
           Row[{"Row fraction = ", 0.023809523809523808`}], 
           Row[{"Column fraction = ", 0.01694915254237288}]}], 
         "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["1", TraditionalForm], {0.5, 0.5}], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "1", "\" example of \"", "\"Dead\"", "\" misclassified as \"", 
               "\"Live\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Row fraction = \"", "0.01694915254237288`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"Column fraction = \"", "0.023809523809523808`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{1, " example of ", "Dead", " misclassified as ", "Live"}], 
           Row[{"Row fraction = ", 0.01694915254237288}], 
           Row[{"Column fraction = ", 0.023809523809523808`}]}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["41", TraditionalForm], {0.5, 0.5}], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "41", "\" examples of \"", "\"Live\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             
             TemplateBox[{"\"Precision = \"", "0.9761904761904762`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"Recall = \"", "0.9761904761904762`"}, 
              "RowDefault"]}, {
             
             TemplateBox[{"\"FScore = \"", "0.9761904761904762`"}, 
              "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{41, " examples of ", "Live", " correctly classified"}], 
           Row[{"Precision = ", 0.9761904761904762}], 
           Row[{"Recall = ", 0.9761904761904762}], 
           Row[{"FScore = ", 0.9761904761904762}]}], "Tooltip"]& ]}, 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "59", "\" example\"", "\"s\"", "\" of class \"", "\"Dead\""}, 
             "RowDefault"]}, {
            
            TemplateBox[{"\"Precision = \"", "0.9830508474576272`"}, 
             "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{59, " example", "s", " of class ", "Dead"}], 
          Row[{"Precision = ", 0.9830508474576272}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "42", "\" example\"", "\"s\"", "\" of class \"", "\"Live\""}, 
             "RowDefault"]}, {
            
            TemplateBox[{"\"Precision = \"", "0.9761904761904762`"}, 
             "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{42, " example", "s", " of class ", "Live"}], 
          Row[{"Precision = ", 0.9761904761904762}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "59", "\" example\"", "\"s\"", "\" classified as \"", 
              "\"Dead\""}, "RowDefault"]}, {
            
            TemplateBox[{"\"Recall = \"", "0.9830508474576272`"}, 
             "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{59, " example", "s", " classified as ", "Dead"}], 
          Row[{"Recall = ", 0.9830508474576272}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "42", "\" example\"", "\"s\"", "\" classified as \"", 
              "\"Live\""}, "RowDefault"]}, {
            
            TemplateBox[{"\"Recall = \"", "0.9761904761904762`"}, 
             "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{42, " example", "s", " classified as ", "Live"}], 
          Row[{"Recall = ", 0.9761904761904762}]}], "Tooltip"]& ]},
    Frame->True,
    FrameLabel->{
      FormBox["\"predicted class\"", TraditionalForm], 
      FormBox["\"actual class\"", TraditionalForm]},
    FrameTicks->{{{{1.5, 
         FormBox[
          RotationBox["\"Dead\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
         FormBox[
          RotationBox["\"Live\"", BoxRotation -> 0.], TraditionalForm]}}, {{
        1.5, 
         FormBox["59", TraditionalForm]}, {0.5, 
         FormBox["42", TraditionalForm]}}}, {{{0.5, 
         FormBox[
          RotationBox["59", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["42", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, {{0.5, 
         FormBox[
          RotationBox["\"Dead\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["\"Live\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}}},
    FrameTicksStyle->12,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7148827469618115`*^9, 3.7148827619466686`*^9}, {
  3.7148828444251423`*^9, 3.7148828491794147`*^9}}],

Cell[BoxData["\<\"confmatplot.png\"\>"], "Output",
 CellChangeTimes->{{3.7148828575688944`*^9, 3.714882884370427*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cmNet", "[", "\"\<Precision\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7137217059409766`*^9, 3.713721721989806*^9}, {
  3.7137217574581747`*^9, 3.7137217606499805`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Dead\"\>", "\[Rule]", "0.9830508474576272`"}], ",", 
   RowBox[{"\<\"Live\"\>", "\[Rule]", "0.9761904761904762`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.713721761258382*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "[", 
  RowBox[{"ransampR", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713496606692997*^9, 3.713496638796404*^9}, {
  3.713497883015584*^9, 3.7134978895464*^9}}],

Cell[BoxData["\<\"Dead\"\>"], "Output",
 CellChangeTimes->{{3.713496629964046*^9, 3.7134966390714197`*^9}, {
  3.713497879716577*^9, 3.713497889828201*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ransampR", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713496641291547*^9, 3.7134966461888266`*^9}, {
  3.7134978914702044`*^9, 3.713497891582404*^9}, {3.713620572744217*^9, 
  3.713620574387311*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwtlsuOJFcVRVuMGPIL/AIjpgyZGvEBtmgsJo3UdmMQ2LirMiPivu+578hX
l5tqG4wswYQRH8e6KVJVKWXEifPYZ+9946ef/P6j3/7oxYsXn/2Yr48+/uIX
r19//Kdf/YQfv3712e8+ffXyN7989fnLT1++/vknM+xn///P7en5b7fbeW99
1BJiTqm2UKNI8fE09t5Ka72XKvE8et77+fbd8z8+9P16vV1PLbUcYoop5Nhq
DKWkWksavcaW8rmGUvc2vv3h2+dLbbWPvY5TT15KToFHpNQsI5faRm+9lnHa
XRv73vfbPiQYY0OqvVXZU+rehVxSJqyOMVqU2vfWTq23E/0Fa/RhUYdlC6nw
iTQcJIQktDjSnso+Uiu5t5ZL6TJ2Y9btQWm9qmV1KcjenXifY3I9jUqTrebc
GEdKaXup/aqV21LNKUbzeNBeYuEBBum1AldJqfRR4sxO0bED1sHZWi/fffj7
VWu36VKypBisSMhdQqGfJhmkWmV8/vtYrFx20rz//kncQUefcjS5AnKPSZi5
kiTXlDNBZZAipKf35su3Xz4+/7tqpdQEyQUvKfggMfsM2lwitMde26X3HD48
Pf7hzZs39b/fHJS1bCtECrAVMMsN0AVYmT3TVp8PqMv1qz9+9cXnl//clFaE
lhQiy0v5EgkLrWeRU2ujtlzbPpo+pif99s9/0T/8s06UIsstLdL6CGNCWmbi
xofVt9KLrH9VtW2P+vt/tWB9lDYgU+opjA42szl20UefVOl11Nwfvv56UTFd
P5xiVKGezuQhstbzHmFIbwl+5bGfJ0F6riWvD4vz9qBcimy67mcSzj747JQr
1NzvzwPJLFnH8nZxLRyOsQNOu5zO19EoXgYLhol9ZOkxT0JC0w6pi9XOu8Nh
AwvZL6wLHs2W2znB116hCSQWJustwKCUq4/ZmC29u86svaCdFvttpyv2Vr2A
MFuctErpDmG/luBj228XyDIL1SmvQngUh04kVasFESSA9DCVXc4e+riSnxsJ
Ic3F1ZBhiaCVKDB6UtNDb99OMCxTSwQHSOQIIXgnNRgnSD6Y4P3mg4ViYgMU
TZAxOe7QWCUp0caCc3BhC9Y5FY2dkcwwhWnxjJoJCFpmrNfWrotGxsoY77Xh
EiW8c77CcYgsJqZMNu/XzRinl0UpntissYr4zRAfrdN4GKvNIUSLLYW4bjbo
w7YeV7Md7abt6oL2VLLRG6e0wSJQJQAXh+mBhkET2+GwLo9HZZ3llzPe0ozP
EyuGlLmTaYrAS42yPSzrdjwu23HbNssom4HDZvZgiIhIseUJNk+CgSt+I96o
bf4ZpZ0lvUW0JSgcmHCXoBleBeYk8fjAdlBq2/S2Gm+sz86CcQYXLNuFAAtj
hL65USNqZ0JOtKMXNV1rITYSioUkCJfhCfuU0pJnzfAH88rZBnXQ4GMcq5UY
YUKCT/u9I79xhWeS1OnNad8bTJZ1Maub0EymcTtiv4QnM3cqRVyuudwpVPop
1y5p6mOShFaKTMeJUUdRDlb4aVcRkBvXi0g+IcSzmBUCxRmIWqDPPD9cYDWh
zqlkdo/t3vvTDn9PlunY7pRDvMMJDcHX+HmwcVyV+YV/44zZ4PRtACGrAkt6
ygiBxNzl/CBTTXsNDWpExgjLg9p8PdVuvMbXZglHLqHDWrDzmSNi6o2dNwGk
vByNXiZfYNz9UJpuy3XvOA/a3T0gB7KaisPjij5gIbgivXmnNfSJ3iaEnTry
xTkKC4j00wr+woELZjAE2CXo5K1erUPI7Ipm8A6ckIXkae4FyGSeoJXmAqBX
Clh33LRB0xHswlza/fhM9wDO0smb6TA1eCyVU8ZopS0c0ekuHOEkKJH+YvEJ
C5kspB2Oyun8gL9s67pNzTnLErGfOiVRxBbkCnmUpQCvEJmOmaVIU6tZlaO8
jnPf2F33OlrBSyAJ7OEFgAlwOpka8KVoZnBwlxL84s2BMazBL1gQ249ThzxV
C8DBmXR+p/TqFSNOqzHTAeEIHVrCownryvrZH5jdWRSv724OdWNrBhuSuceA
n7ipVqemBiYHJAhvA3FqXNo374hG3gv0NlsQXlKsCiv+sGl8D1edWnAZQaGT
iPO/fzaLMysGcvc/55UCAd5QlEXFbhJimhpsaQjZcUBfbv8D8jOVEg==
    "], {{0, 50}, {50, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Primary image", "ImageWidth" -> 800, 
        "ImageLength" -> 600, "BitsPerSample" -> 8, "Compression" -> 
        "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
        "StripOffsets" -> {8, 16008, 32008, 48008, 64008, 80008, 96008, 
         112008, 128008, 144008, 160008, 176008, 192008, 208008, 224008, 
         240008, 256008, 272008, 288008, 304008, 320008, 336008, 352008, 
         368008, 384008, 400008, 416008, 432008, 448008, 464008}, 
        "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 1, "RowsPerStrip" -> 20, 
        "StripByteCounts" -> {16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 
         16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000}, "PlanarConfiguration" -> 1, "Software" -> 
        "SPOT 4.1", "DateTime" -> DateObject[{2016, 12, 12}, 
          TimeObject[{16, 38, 13.}, TimeZone -> -5.], TimeZone -> -5.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{50, 50},
  PlotRange->{{0, 50}, {0, 50}}]], "Output",
 CellChangeTimes->{
  3.713496646464843*^9, {3.71349788104398*^9, 3.713497891863205*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reSlivecells", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136205767744474`*^9, 3.713620601170843*^9}, {
  3.713620636055838*^9, 3.7136206915050097`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 50}, {50, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Primary image", "ImageWidth" -> 800, 
        "ImageLength" -> 600, "BitsPerSample" -> 8, "Compression" -> 
        "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
        "StripOffsets" -> {8, 16008, 32008, 48008, 64008, 80008, 96008, 
         112008, 128008, 144008, 160008, 176008, 192008, 208008, 224008, 
         240008, 256008, 272008, 288008, 304008, 320008, 336008, 352008, 
         368008, 384008, 400008, 416008, 432008, 448008, 464008}, 
        "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 1, "RowsPerStrip" -> 20, 
        "StripByteCounts" -> {16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 
         16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000}, "PlanarConfiguration" -> 1, "Software" -> 
        "SPOT 4.1", "DateTime" -> DateObject[{2016, 12, 8}, 
          TimeObject[{18, 13, 12.}, TimeZone -> -5.], TimeZone -> -5.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{50, 50},
  PlotRange->{{0, 50}, {0, 50}}]], "Output",
 CellChangeTimes->{
  3.71362058451689*^9, {3.7136206366318707`*^9, 3.7136206917540236`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"ImageDimensions", "/@", "allpics"}], "]"}]], "Input",
 CellChangeTimes->{{3.7134989688542075`*^9, 3.713498995600317*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"800", ",", "600"}], "}"}], ",", "165"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.713498977684713*^9, 3.7134989958573313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Length", "@", "ransampR"}]}]], "Input",
 CellChangeTimes->{
  3.713550995810828*^9, {3.7136211564486027`*^9, 3.713621162136928*^9}}],

Cell[BoxData["504"], "Output",
 CellChangeTimes->{3.713621162928973*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run to calculate the CellDensity of each pic", "Chapter",
 CellChangeTimes->{{3.7135510701470356`*^9, 3.7135510809426594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"cellDensities", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "@", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"trainedNet", "/@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"ImagePartition", "[", 
              RowBox[{
               RowBox[{"allpics", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "50"}], "}"}]}], "]"}]}]}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Live\>\"", "\[Rule]", "1"}], ",", 
            RowBox[{"\"\<Dead\>\"", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "/",
        "192"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "@", "allpics"}]}], "}"}]}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7135510829539385`*^9, 3.713551088436252*^9}, {
  3.713551184323651*^9, 3.7135512356197257`*^9}, {3.713551501020117*^9, 
  3.7135515283449965`*^9}, {3.7135515652611213`*^9, 3.7135516630925093`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"250.77575899206596`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.713551216427264*^9, 3.7135512394409447`*^9}, {
   3.7135515586892977`*^9, 3.713551586602668*^9}, 3.713551654814494*^9, 
   3.7135519143343163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cellDensities", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713553181862629*^9, 3.71355318651505*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9947916666666666`", ",", "0.9895833333333333`", ",", 
   "0.9895833333333333`", ",", "1.`", ",", "1.`", ",", "0.9947916666666666`", 
   ",", "0.7604166666666666`", ",", "0.984375`", ",", "0.8333333333333333`", 
   ",", "0.7760416666666666`"}], "}"}]], "Output",
 CellChangeTimes->{3.71355318679685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 A VC picture 1.tif\>\"", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713554019694173*^9, 3.7135540730074925`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJw8vdmSY1mSJNZCvvCRn0D+BV/5yNehjAgppAw7M3zBvl0AF7j7vl9cOOAA
fEV4RHjsmRmZWVVdWctMV3GG3SUctvQ0W/g/NNWDKI8IDzgAhzuAo8dMzdT0
/PffDv/NxX/1N3/zN9p/I5/+zTf6/ziZfLP8n/9b+eLfDrT25eD87H8aTM8v
zyf/w7e42/8in/67//pv/ubi8uLy8vzyotVutS9al+2LdrvT7rQ6HfksV6lL
7Z5c7nbk8yXu1+62u93+4MW//d8Gw558dLq9fr/X7Xd78qknf4aDwXAo1w1H
w+Fw0B+NhqMRLvbHw0HvRV+baOMRrxkPh6PBaDTA/cet3mIxGk+nk/FkrGm4
03Q8GY21yWQ8HmnT+VSbTrXZXJ9ps9l0Ih9yl+lMvprO5zN9PpWbdF1unk7n
s9lcPuSh5Mv5YrGQb5ZbpnJvuXK+XMz1pWnYru+NupquxcFsLD/XDl79+fnw
6dV1vdtss8BzXT9w0tg0lsuoeXizjtyFYVn2tN8bmvlmbY1tQx6212u3znr9
2WI587Jyu11f379+dftwlRXBXPfWdZoG9u7D+/cfPrw/BvL8DNczF7Nxbzia
edXTm+3V8fXj8fWxiG/evNoHi+Lp7fHxw/vPv/7tb373yw837748395sPfmB
2erqsM58XV5Lcz7RrXrlzg078D0nTWP5COMwCEO5kKZJKB8RrguiOEniQP7F
SV7Vza4JvCJLk6zI07QoiqrIyiKVf0VZ5jnvViRpnBVpLvdK4ySTR0uTOMtx
VZoXableFXlRrZpmVTVVHKVplhVlVRV5ntVFVZWrarVq5Av5MfLAZZni+/K8
zoscP7aQh4oT+W1S+TLN61q+NYvDTB4mSwp5qDTL5fGrIpWPDN+U4vfB98R5
Kt+RxVkSR2GcpFki3xKniTzHKIrCMPD9AM9cbpWv5amkcej5foRvxRVyryAO
5MMxbcexPVdestCXj8CX/wPXs13Hl9fT83wvcB3Hcx3bPj+/uBCEXF62Ly9b
lxcCgFanK38AjrZcbrW78q/XvhR0CGQ6LfkQdLS7/f75v/umPwQw5O49gUgP
n3mh3x8M+t3BaDgY9QUePeCkL99BtFwOZHGPcJUgQxBC5AwFaS/+j8FiNJyM
R+OhWv2CE/l/rI0ncu10JkARYAAJU02b8baJYEbwAcAAHVP5OxPQaAKYuTae
z5Zyg+AD95ErZgDdRJvpAqCladqe7467huEcyiWwZ3g3v7pff/50vL7e3T3U
WZ7GgROEgWuXn37++P27cKLNJ8NRtzdxk/1hFS0MY6obw2nr4kWvNRp3tKUR
ZU2zvb2/2d8d726vyySuVlkeR5sffvrpy5efn+NZq9MfDEfy+kz18UAPtvfH
p+fj/eNDU232zVWe3737+Orx4fk7wcevvntc109P11eHlaWv6uT65vEqdabj
8XAeZOXmUDn6fOH5skQLeevlnRc0RIRFEuKyLBJ534GPJIz9IMrSsmzi0VIW
viwqWV5YklEgazcrM3ykudxZQCJrMMONAjtZjHJvgRxxIss0z2XllrJ+5f+y
LnN5JMFZXRfyiABFmZUCmwKowT9BGQCRF4JAQZvAMM+AN4EAQFPkZSPXVEWE
nyi/VlkkcnsuIMGd5EIOjMr3x3EQp7yPPFdsB3ye8ttl/CL0BR2uYANPXL6U
lwFbhax5n/sEr5F7RV4UeJ5r25bteqG8Zr4AwxfsCCzkvq7nebblCFB82RwF
Ha4r8eNC4sYlYHKBOCIAkQXflqsABokmHYWQQbfbaqvb5QYJGr32xWVPUNDB
v67cLkBp9wQbgo+B/Ov0BoIeLAdZ8L1BT/AiO+9wIDFBwkUfV0tcGMrfgUBi
MOid/21nRryMh+PxBGFkNsZ9JNYACSNtMke8EAAgusxGghm5iJgynargoQtw
pjPGGV0+ScyYawvEjelgNMO18jAz+Sf3lsVteW4kwJj763ghkNVmTnZYN2/e
Pe6vt81ud3d8OFytmus6Sd/8/Onu8eNWG/Tb7ZG2sOLbl1dJOJ16gr+5Pu6P
Jn3ZWybT4dRKg3xzvbva73ebdZPVqefLm1p8+t3vf/nTH+/8Wasrz1ye7FTe
H31olo9vn18enx63WWyFcfX0/Pn98enp6c3rh6c396sozu+P2/1VsrSb9ebx
9YdjaU8k2k6stFpXnmnpfoVFKbFAloCH1RHFcjFkNJEFge00RnSRm2SVI7S4
aYZbEvmQrV12blmwsmJlDWPhyvLjOpUPgRU3bXxgp89lpUuUSLHWM0GULG4J
BvI9WV0iBjFMpBKRJAgAcHIvRIxEgkJeStyQCylgwVCGX1muFpBVVV2Xtfzw
iDAEDgFMoFp+ICCKOIc4IY/OXydK1BPEneRuoXraEkjlKj9ADJU1D1REXiDh
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
+4f/9MuvryMvfvjh0+Pdl3/43ZdPX778+PPLd1t7OZ0tnXR3ePv89HgTm/nh
7vj+c4XsOSwR0nbravP8cnPVMCln8JBV4OOz7IkCFEQLpBgJ+ewJJ4FHRori
DrN31IYEGShQpap+JRRZZfYR/sRhin0YBITLV+4uaz2vc6ZCJZJIZFoZsyFZ
zyU5BqhJucoBDcQVpFkSTvJM8QfEO5YDygrEJEkjXwfrIXKIxBRBJMZdUvxO
iFmo0UUp4CpRTehEECYoXMkvKJlSAFSQZsse4WKb8IWJIKmSS6QYEkPcKPI8
2REV7ZCLAIVsIC4LWMJJbPnaJs93AS0EEOHxAg75OLtQ1PtcEHEOyn553gZy
ED7aCiJg6gwf8v8lvmwxZPR7Ko3iJUIE1J2wIUQYPYiTPitYwsRHA8QMlLSQ
ZSGdwnrCZ03Qg518AoCQp8iiJzrAn6dIrRAuhEKoAjDYhsYa7pQRAHfR5wgQ
2hTZlakvl8aCINLwR8NneYD5dLG0DdP2Pa0zevjjc74ctoZ+aOuGG1ey/NaF
bEGxpF5Xu8Pd4fY6k3W12hdLyzJMJ9ncNd58ZtryAvvuQjeNyWhmLrtnA6Fm
nbPlcognN9FRMYiDpeUJRZlZEkJCX+t0h73WUP4NJv2Rrnlv/sMf//Cxjq5e
v76O4+1v/uX//f2n737z8w+f1rZhLfVl1OzvPr55uiv8ZL2/f3vjmo4TVdfb
u5evn5/3h1c326ZkeUp20ihkNo3l4PuKa4S4AALB7TbGrortEcUd+VqWXsZl
iQ2+KKoyZqVKxQ1BjIoeAjKsWnD7TOVkAogaSY/s7KBYJRZ+hsgANAhE8KEq
WgjBJA6gLwWWuqq6yjUokuUFPggn+VUkdWK9IEaeBo4OqqLiifxM1hYkq2It
GwlkRCwpKh7E/qluJzs/AgeIehixgiXXYM0H5Cao/QpYgAxhG6xZCSsXRCDn
AmLkcQVUEpE8pFm2MFSJFBeXZ+dnWPISMM5YzxKaLiGF4UMQ0hHCDjR0UfJF
5BBG0r4AZnqEhWIbwwFBgVJvp49SFeIFECGpFe6AyyjwjuUa8HMGjgkSLpRk
kFuNNEmnEAeIlyF4CSnKBCnRlMVdoR8MIKhT4b5Ttj4WaGuM8YVs8LrkVxrz
K6RWQj+WCC9zgGM8RaaFqpduLE3Hss35sDfZfbmvlsPebGnEmSmZfVoeDus8
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
6aKD3utisrAFWjIY4Os+pqPQOkfBaoRgAvbRH0gswHA5VrzqBo6FPSyXhmlY
5lKfom3OWakB/EvATajRok0D4g68fWAAdDL4gShxzsbglCO3EOySmmOodjHX
AA46jjKizCS2gLDMocaCwSgmYM25KRE2ba4O9/vrV8+lrHNheLL8dj//8mHn
Tfv99qW+3ee+7OZL3SuqbdOUUXklPKEqg3j/+Q///o+//OE3N1m8ff7h3fPx
+HBdrvZFGPtGEAp+jsdd+eYvf/m7522WNsdf/umXuPn4x1eOBLbFVELX/d1G
MvZYpQPePIyVxQLaWg7nExzLclzMUjONoLUffTg8Zb4BPzSWNuneJNAJwpNt
IlMNlj0DUlzWSRM2LeKUNiV5XkNUWMMzVBVLlaSDcquUGQ4HygtIdCvlDVcw
v8LEBuXqVAzSw4ceoIIHQiPN1WouyhpLWrABHTsGQZQtY8bhLKWmh+tCqZxL
adaYp+4yYM+EVeNTRY0q+YR2KXDl4jNKlLorSQgEkA8fT15ih4vXAoPFbBb6
kU93LDU26MJaFIpdCzTDB49zUOmgVNe2loCNOZoIMExUeW2WgBktULjqQKOI
9OobCSid04AgRLug6JwaRImXYx9oAKI72GvDfLejAkqPHlkDuDV0qdslPWde
NewMqTKZcGoQcQJ2u+DYCwsqe8uEApfeJWNlf4UkSnmbsLjLNIp8XenWhYsv
Zl9l69PJXCMUwL1R95JUS9NnimrA60cxD1J2DItMqTBZSF4kr0iQFPXV/u7m
8GrvWrHpyEa+MHY/PsXTfk8Qunp1VfiuJSjz3Kr287R82FfNdZr58eu//OPv
fvntH3776083h+Obj+/vbw/b3Ro83nGirN7eHjbNVfXx//mXv/zuy6cf/q9/
+vNB6PnnRDYH3VjaVvbmdgNzhcBdun4oAQbUEslTjFIL/GZQlHIBAlAIdMhp
uIEPJMa26ynbjpDz0xIJhatghC6IVIdQFpGiLWpBcUlmHINI4IOL8T3VplPO
oTENQxIlxIpV2gPpVVkmJUpe3OUVgyArxkTuaZ8v1HJWM+fwQ0kLdE5Iz2lI
irGnMlOa+DSjrAvBI8+VHBhxiW1KYRY0rqOUBAWtRAlHaHgi30kVLnRnHP9A
eRezLrgOz9pT2jMMdYSKmShCRqU7slFYkzgudxcHLzXMTbgZIWBbhsHWueS2
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
3Z1TFKYrYLtM10p6pT89P30wqNCVIpKTWwyM0xG+XqQons/pLZen6/WWai/U
8E9PHz+/XFajQf7EafJKfL05wiMYa8X8NWkR4z3YI5M38WVKtWDNJMOVedRs
uSyRJV7FkUk7Qc+j9GROh5/vJg8//PG+MUmPi91mjWJuXVBw7efj4udfbptB
epbf17qdCXj2BzM9ALhLaq+EdBfCjy6QasRxBpVdxa7XBrtAaNTCEqMn1w8l
As4sm5ZVlXG2bW0f7a6tOMuSKLLackbJOuiUEc/cIN1eR0cHPvFAjLZ7papw
3A8HOv9BT0hlxEqQ5bn9ySi6+OGozER3xlX+R3w7EvaY/fZtZsreZMBES7QL
9RK+p9HYtKdweIyN3BzLvJ/KiOM4zSMcdapjmfnvzCfRpNubB3nXIPpM/u7K
+ngRyVEzoT8GDfKFXDvQR3WlrmRufBpzq7ADAS1ZR+yxwvZSHhWOj4O+PidF
6eHNwInBENkEwesxtCPyQBDr4mmw8kc0iKXpcjmh14WjrmXD1A9C1sJCyKYc
9sJBLMIucqh4j4IxE/STiyvI4/nD09PlggFxt1PSwqpdN2J6cdOlp188khuS
3vHD7Xh7/vDh+ePXb7/8dJsPR/nT5w/X88F/k+4PSsky0bYo7VAlSxEbgOJ2
phquXucanRUdruEh4T1w6aHuTfMasYNOD6fa+XfnTefd+7ePtc6KRSkl8bI4
3T79/O0wHW6+/fNvX5bDev2x1qi1H+5Mv2FIVQntbtV4KGZWj/ehxooANXxQ
zHK7jWodj0c9MNWgS2xO6q3SVcuevN15aPXbdRtv34qUlyMgaJRmI7XpBIT0
yh25xHZWHf5EoWHfyLR0kvsdX/2D8TR8Hcx7sYz0qJrS6zvdP2p6Zej21SLS
d3BfjJhxDRVTYaxFZphpU1cLPwhf7kjP7SiEJYanTNIvKM2V+D0RY8zYyxGX
6EQKrKVWQf630DMiTzTVZYN6K+C7c8lZIrFWemeZuasXlYu1KNlxq9INyIlw
v24koSpFoU8x0n31DPHyU/EXcLejiihkS6Zw6EXSWC6a/agnttiHYHF3tBfA
ZrGPFiL1z4d9eDGYJsVFErUWg6jXRd9BVxQEUCWP+eGYnuTr6FhALhx2kWNw
krgAZTRUWifmXcxzyZ5KVVXq59PPntLF8eXl29efvv/5zz/f5oP+9uXl4y09
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
zdzok6w6UB9Y39FnbTRJZxIdC6jkUB2O3jmSgyZUhEaojNjFrzfnB6M+du7S
cSzyVQrRQ5oHuk48dCbLedzuREe373/88O79/TcfbzcXV1enJ0enr78eBTeP
nUq1G1cfaJ6V3b/O034kp9NPT2/effPN/dd3r5+dTxfDdjP246EfDQCrSdNx
Mlsfn2RmpWEbXVfKsa8/3p+vJedLYwT5u1bTcJo1uXqk6rC6DU0Dg0g60E6j
g+Vy1wXRxjSUryBs7BwvJMTNIWJXYdpp9+Vw2EgTVSB3CTkFLpVKThoXvpTQ
BEBVydXgxtMdsm8xlqQVbhACSR/sUf9qn05phCMq+49ixLunMCcF+AShQZOP
OmJEjrMUV3UF0lK2UDAEqVKboY4vVxhF0QqtJTVZUwmxQw2Ox59AxYZCaNUg
jFWjrTM+CFzaDjceGvaFElUgkCM6Wsqbk4DFDk2h5GgH0SRZ5aldL+1st+ra
YBB5vU6ptvOg3DTaLT82ylrQLlWaLqQ4fHL6QRVRSjzorg3eNbTThG6igyGV
EomhMxfyt6mDYGOSGWIqMxzc9vTTxvA2JErODrkTx47DYwRhah/wzCsxuMhT
fTiZ5qHyLIA+oEe0e0gwL33O2YBQMDRyYrnzx31F1mMHAti5Ig9CqSRNIIFI
bOYYG0LMm5AvqCY9jCmsqIxzUG1N0mx99vAoGcADHO5sE0kgaNJT6UOG/WSZ
Q+Bt3HPj5OjJ2/NsMnv8/tXzNzePri9PDx9OvexqUG7qXXPnsz3LP/n+TZ6G
rt6WW6OfP3x59+5eguTVFdAh46iXZP1h2JOvNupJ/3/y7CyoW4E7mJ1evbz/
+T6dSmvz5PXt7fliaMqLvrUjZUOj4Wb9cDK0rH7WkzBot2FW1LFQU8nxj0J6
Dvk2RUzQAnoorWiLYyljHAWwNpQ6DdAmrqOoIVDCtLpKjZmmFiZl+lU4Ablo
ksbOpTxgwpbhKfsbonJLNDeoKK8okjsq+wRfEc3LpoTL8oqSSUSO2JI7mfmj
kIPj2hysjxqNzymuCDJHp8lkCaoHlIE4pKI5bZstSJNsc5z7VqPAk0jIdEDS
bUuxyI0InM916PugAEMrIpEE2Aqx/EE4TNdHw06r8tVnVaeXJbOxZ7q10vZe
/ybumK58o06rbs/lqhvEPhMGSGWwDeQqnFcLqB8IAJvWUDY3fiDiEB6CR2/y
poE8oiHBobcMuqEFpOg43AW6BewqwniXODo6gQGYDvqTTw1R1zERCWoZrDJF
pIos0KXgRsHpML0pCScJWz7htmDQsrCiIDWgSdQTGXKNh2EWBrhYcScTDGwT
1W1g7kvzNBpBY0I1mR2cX2TxcLEYeRKDk2F2lM+nSTIFPj6bzyW+5LLPTx5u
VrOBLzeSHSc3v/345tnFahDPNy9PrbImr9TWVknzz357m5PiT3PGweHV7Tf3
799//frJWT6fJQOp2wbS2UsY9ifSgVye99rdOJ4eS3z85pfz3vLp63evX7+5
+/rF1UCH+BnaTD8/PX34+DJfHJwuJcH1QtfyrKbmMPO6JBDi5mL74XJ9DqMP
pXpM+oFHz05SaUn8wHbD8lzVlMBFTG5GuXwh42QqCzaTB4mWISa+ok+0tSSS
cL+0S0MDxQQEyn2vzESCPFKC9U2Z9jegoYOAXlM0qAo7h9b+fiFnxR1htbBx
xhi4BLEfghShbcUNYAuGB1x7dNpMFK1Gm/CseosWB4r8AW2gZot2nXWKJyJ7
YKylFK+4OoSuD1clZiGVK/3uaBLWdvdKD7aru+a4p3e6ni4dfOv231/Uai6I
6R0nP8kTuaxJb+qSmIxFB5sHapKYNHGGMjUgVgbuETx4llw+BoD0RTcNpX2l
NS15hH7AusqiViLFduFEAMUegk/gLeEpgIgHtRKgeL1uW4kO+MqzuKBGRRQr
CZW0u3IcBNWjDzKSknMDVIrms5PhGORaUmwxtRqh+ppwlTcZpgkhh9KfD2CP
Sbme/pjkphG3HJP54vDhxdiws8zTB4ii5OBols3mU5rZjrH/WK6PH16//e64
121C18LoWJu7dw+Hdvj457/7adrhlLHeMq3g5pfn856tNxrdZkde7DDNH96+
vnvz5u7Fo7M8Q1qSKOkl03E8kM4oP0ksQzLm8uz85U9fx252/f7+7s3r2zf3
H5+MmJy1jv1YQvH2+eOLg8OjOXR8pf6CA54Nl1I0eZKuDd1RQ0BacWECAowP
jetCegxSBE6RoKgkQAxvFxI/Gl0udCyFpTq3sSkmzsTscgCjEHQKIQfVJThH
SZkOxw9gqQqah8K145TvwwpkrxhilUo1MM0h1wPUoZz73V0qXdVoKijNSZ0c
qaryIazUm0AotpXpeaNwOW+oQS5UeoizArxXVVRNeqpBZ1E+DuqITRJA0Giw
3NLk98okhCae8i6deAK50OHyUdoCQbhU2W04nao2mJu1Vjs+vAlKXQvgFH25
Wc/H/RCwaPp7UMCC0q1OMT3HzrBrQpkX1SrFEj3OQOjjzGmvSbyuB/Emk6rS
BMIDwR6Q9AmjWjZ43GNhrUtYIXGHEXflLnG8wGcFCjnC/ThiihUWTWFChVak
r+yAEL0BNUUGJCvBx6ZPLUWYl00SoA1ZNs0kOqhsBRKMlFRQbmPbElFrdMT5
1WgyWx9dnceNvaberEfjLBkOV/l6ofp6+WeSTRfr/Pjx0ze/u4o6HT8O7U7b
9Ad9uzt8/P0v/3gftFxPTpMX2Vby8Y+PpoEuqdzSdAsCf166PLy4vnnz9vbJ
5fFisV7lR9lEysOBpLkkyfPY7fthvjnZrOx6O3n+7ft3797cvnn79mblGviu
h+MnP3375ubZzdVRnme4FPB9xb7nxVCdlJTvyA2DcQpmf1BX1uDpDLtgG2gu
cKWUcLK8QNiimwpsShA26gPOrCDiD+4QlM10i5IcmA/L1UcteIk/aFdLzQuh
RKYL5Ir9HQRBubrHqS5W43uFt+DeLuR496vYFUqA1OSEduFHU9op11uQYZCj
T5Ur7EMqFPSRfMIJFVblkMdCKqmpIMEEqk3jzTZkqVF3kf7ULsQT1dy33uZA
CyUWFyNd5BACfrFql/83KDctxY48NCnGqg3TRANS2mt3y9H5iZzI/Lu4VWv3
ui15HONNMkmHoW/TMIdXla50krif4JrDhkl6l/i2LrTcHc8sKM20s5PPocIJ
Egv2tMCOmgV4BKLHwImgtMJg3i48v9Br0BsNVB/4r3qFYA1xVjFFQ3vKKimk
rjg8bikOFyqj8SEEbvtU2BlQjAEi1BAwGQxiQqPQcMPUqZ9NDSOjpggxuBDD
wrwL9mcDGnOyAZfDOj99tLHKe/s7+zsNU1rp4eokl/jAkCmbcX2+yB/evPj4
u02s271Y7gf5q2Uny+zqw8cPf3UinVjfdyNpuKL8j3/YjJ1axwttTbP8yO20
rGi0XB6dP7q5vrq+utgcnh0j8LJRLB1IMl+Co5hdnmdhu7pbGdz88PHb+3fv
7h4fbo774+zoYHW8mm0eX13fPJMCK5N7oDfJZvnxyVJ6+D7lGUzJFaYUE1ZI
PxCb4grQunQp3gAVAUx/HcKHCAjCzFfXiNO2ulThwCgLoAnNhJiHo9gMWC16
gD7a1u6+Q3qP5+PU03yzIlVWWQWLGluV4NxcqYEyWNrHGh0fVPlk8tyRCkT6
gVal1NQaytMJrlHVwjGHRRdUrNtNghcrNWXS2WTPToUGSi5wZd5sNyqkecj1
0+RECzjHuhJ1RyDK04AIXJv6Jh1ojUJRtN3qkgKLuqdTqtjx9HBka/W9B188
qHWyy9uriTM817p2MJGzOj48mQZDsCcN2M/CkraDq4N4KUggkbJsm106R1nq
yao5LzK3kh7TyfW31bqVguBE1xOgQEKCQ1YU1DVQGeM1c1BfcfuNqa28GSBE
TvDZpVBbF8nF496Q9HMq7zJ0CqYsFuYopoYUnSIrg7bKsDPPsjSdLqS5Hsaj
xC3bU/BmsUefUM9K8kyEQRfRvsORdO3QxVodXZ7opWZDq+5sV9xZNllvckkb
KRoPtPfTbL15+urVzz8fRHooTyTK5ln+9Yfbs8ffvn7xJGpUWnJYJ6EdTW7/
/d2sp3Vc15TOwXM68jDaljWIeuP5yfHx6fnl1dnxwUKKpPmUKHr58mNJTteb
uFOvblfdJz9+uL+7vVwPF9c3p/KH5NPVQrKfZLjTZdrvSYrtp/nh2cX11UE6
HtpYuEKPx+y2OjqY/Q6NOaERG/L5s9cAIMsxWhoF941/UVXGT0q1H2ZSHeqa
S5Wl7kZuFtnaS63c3dnVFWTRw3pvD6sO2Ebto5QqQxIOGgzch6iRFhNMrVwr
YfMh9U9HoxuP6xp7ey1gbhWRFnYgkMgCtgSIRWz90JlDghTiPrBlrnLjVy/w
7Qre3qztblFvgeBdavtWa2w0sP6QahcGBZ22DgeQhqYmXNBsgFquEuCp7reG
86PTTBqNFnSK7LObx8cTw2i3kkk/GF29ePkyky6zD9QzkjO91nSDaDY8E7bT
cguxNOXW0DDV/MO0upC5gGJrtyi6lEUqQItOYbWNIi3gehGQOd9vGkGxLPQ8
MmlVhxH3AKXEwMujKuknljlFmOEyDFRisTFUpRfajp6yMOspN6ex2hBCNH0o
rbgUH3Lnz6WEGfWGVieWYkuaENLEofoDBcIeYiqCYm8qRZfE1HR9cH5sVLrp
vFvaLTV7w9n5CdAks1RiTX6Vr3lw+eLu/fdPp6FH+4Pp4uTb96/fXF09v7rK
WrX9pnyDgzAenfz8+4up3zUDvdHWTQ+A6sDRNNvw/Eja/Vm+uTo/kj5C2v90
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
rUyTZ4yAsUxHEJXZrtSqDaSOrrRGhYw0RBPbGgkg7W6bmF00VPgF76TsOhi7
/C1lRbn4MS2tul/X7diTEjh2qrsVSQ3trufprQdlS6t13dEEvd2/IP5JmQU3
n6bANtTEONo1FJEQnBnJDwWKDRL4JPjTeshTOER5e6dW10C2DQgEwmYQHpws
XQ1uFxVut+dVSt6Axx1ZQqHdcfXFfXX/kZVOj3OqMSh3VQyt+rTdwCeC69SL
xwPVS2RZOl3PFodT6dLkRmsOV/NZChY6hBSoAkcrcmzSx8OEmj2gk0OOR6os
6VvydX56fnl+9eTR0fpMfpzk8+ksTcahIzeC66jSo6VFwzB79G9/fv/jj0/P
81TiIw2Hj95/e3/z8Oz84aOb5483m6NVAhM4uL31or4nf+Ns3BvlB/N8lk7n
+emTZ08fLuIwWcxnkuRmR9ePnv34da/aaW3XRrHVgjtanN388z8dtjsV24fp
3Gwzb9e9g+v3P3z4zW82ozBGALQabf9gs0on4OZ7HbmAtC5mZqBryD1n86JE
Z4E6iaGC40QutNxTHrdYgPhaHMzg4JD1Q+aHfAoPGQKqJTe1Qy9oCs/uUZqa
BCkFS1RaoxBrl/O+90ktEclDSqhSHYvu0q//u3/zF//qf/izz77atbsdmDUD
0avMQOpVhXOvc6deo5Ai396okh5C6gecpyos16THkCrScoMebABcWBGAXA6N
duX10YF6AtUSNVpwaoXorlIw0bDM0CnNje+y0ZQ/tWW1zVp533FL5Wpbah5j
t9TBNmkyjuTi58QWQWCjLvNsObhS8RgSOS7hvIUHEWgJVIih1Ro4ZzqVXV2o
wzkEMNAsuNI0YAWJSWNALWVXLQdp2KJkmtBfxH1rz7KjIdeBMQWcsA/sEXEV
oipT9uY9lmBh0bGAG0i5XQkQTK+gU8J1+CSbp3aYLRcHedipb+9ul41skc1S
ABIpc8Vin4gUgBcHQ+AVIbAL/8yR9C3Zcro4ODndnFycHq5XJ5vNQTLoA5Tv
WV3XD7Su059mckl7saSxR//hp4+//PWjw6WkHukfzp6/ubl68vVv/+bnu7OL
Zy9vzk4OsgnXl5LfoOQgeW2xOZsenh8fnF5e3Tx5tFn1zGiAqE6Xhxspgh8f
DuVi1+Ke07Z9Rzf6+W//871VqbXq7ajXG1+/WbarDS15+/tf/v3vDnpWxwz6
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
FGDC4IoEcrptBjTIk98S3EvjozBWfCdSNmPl6QyeoCq3WLnTdxOtd580QG4D
4doE9hQgiuNxOgRoRHmhUaQnkUs/W+b5WjrzabY6yBfHB7P5dJ5NIccO9bhJ
fwTIrMK9S2WFQEnH2SxLsS1ZzmdSdcm7xkfnc3e4GM7PLx89fnH7/M39h7u7
j999//1Pv7l+8td//N37zfnV8dCPw1GaHwzj1en5On9+lL+9OzlYnN+9uHz7
8kxCTf7oVX6cyzUHyiPszVt6s9yobdfksokGejuc53lsesnZ3fN8sXn5dD12
zW6tLom8//wfPg47ttPY+bJiaPHTu8dz1+g0LVNKFWf1+lw+y+m2Wm4w3JzM
s6RbpnZut2M4RkOKipYWDHu0HALvHGplEisA5RJ2SHAVINsB0VnocCFBY3bZ
zSu1LDkOuIqh6s9JMMnVNvvzDulRpd1PktS71N+FBcgOBHlJGZR/pIPgTgS8
DzCX5MZGpQaWTJXphRuQBskdiAPINKg3Q3OxxgBj70LJxAYl4WDk2bGDXjoM
upW9Bw9292qh652cr+cZejBALun+0W0pxSv0Hp2m1vkEesdYGCkRCaWDaZ5L
JsVwslz2RussNtv1mib5q+uG8njiYSzXR1cJMnT5IOnIiabbajZcpQ1Tb3gE
J5DnRKkrXf9Uk2GEi2fscbEB4iyo5Og7SOenhyTfAvYA5C4RGayfgkFfWach
gfS5NA+5D8R8VyIBiiTxkEs08GhphTlQECt6l2N1MaaHJoZRYyj/D+lpIKdS
8sZysZLwWM7y5WCWr6aZ5BfYC0qISFyMpPFIER1YjmOAJeExW67mi2WagrM+
7ieHM7s9yeeT+dXt3Xc/fPuHP/7+3fPvfvfz7375/bNnv/2r3z0+PsqTXjKN
kvnRzWZ9df76x8uLuZM/e/bq+vH9mwsgbaf4mw0nVDnsmqHtBN16w+i2qvtb
JT32nHgAIwFtv6r3Nx/uHz3+w9/85pePx7FcLKYWHP3N97O2GYaNr76o6Xp8
95sf38w9aOdrnUbVe/5xM/SdrubG8eTwYDoftxuGpGaDZQUNKetaLM+XpE9Y
pQUORJiUICxm9JT+sSkkU4hUG4oVBdwizXQ+2T0TIKEktKCPgjdrhcVNiSCT
/V0yzfHz9s7O/o4ESqWK4a6USKVSZQ9jXhrT0nK5S1fmBuZUZU6tqsAiNuj/
VFN8qbKiFdbINgSuXQ44NusUUGw0O9CTdCr7e199/vmXD3arnt2YbubycvZD
uQz0tiquWkwY8i8+t6169hZGDTSvlY+SDINvzVUWp+Eyl6t4Ou+bdc+z/VBO
u6FDMcfH+q9LULzkVMURxF3D33Bqrpf3UcbieQYBvW6Ah+aThLkEYocZBpKW
Nt3TIOETwaTDj9Wklo4elAzFKh3AxCiggbjyNqClYAyUL4IZ7lDYcsi/UZ9m
ZpxP9Xoj5d7B/nwI7cNkNOmPFXwKPrTQtkLXPcmy+WKxWs9X8+Wi396zpWrK
spSyDH226KOxlENSW6VTaSakNJtPM8yXoH81jntBS3fTtXTAyeHBcnX66qdf
/vLu59/fLhZPfvzTn355f3315ru3B0u56ofrudNfXd3eXN4821zl6Rzru8fP
7v7y3c3tm+eb6UAaJXhhuQ4MzORllcdcw2yqXG5ISu1PV4nXbTWb3Xh5c//q
h3/4+bu//6+/vFyNBq47+v4/nukddzDUvvqypnXGv/3DTz+8SgDscSyt2Z3d
fXtzmsRyf4yn+XwBAo/nUkuh0zItuTvl1jVg+qZQP6husc21lWUteW8w8KR3
fYEkgWWxMr1Xkk4EohaLQlyZFr+USbfK/V0QA8sVqAsCe1XgsKj4A/mScplM
wFpZ2agpV3MiDSHVg6aiwlEVx1v/YvlRo90afaXqRRqpUp8ES3HQPDDHarU0
ufNb23/x+Re//vXnW+WKPjDKrWSKV1UqFaiKIBpouSkXRadRbrQVIEtrFvxz
ymFJlFmmfJAbhr2BNL6T2WS8OlnHRjfqBUXH5gaxj2xgcCZIrE0hZeW4aoGK
3zuaTo81mgkiV3wiGtJDPqAUGfUBfISHQy4tZdULqR5qiULZz1PQUi7BYwXS
5X8Bk0es/ARBhoLRTb9fgBFRQPWU5eUEYtLwqmX6oHbCBKpWaNARLuglqHKV
AY8OTYZsbpe3K8PlPMsAPhlz/wE/AgCuoHfFD5IyLZvPF9N0Ak74QFoy6fpH
ljZarvLz08PTTT4ZxY7lxeu375/m08Xj908WY4mkySJqdkar8+e3ty+kR8xO
ro5n04PHP//p5btvv39/c5JRwk76KNamJjQqXCmA4V6mO6F8/LPHmRQFnSAc
5Tfv/8Pfv7m+/fHf/ce32XKZXv7z/3rjQzaj/cVOS+/mP33/4Zv7a1uqBQg0
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
nTexMmfgYjIFi3ThB5IQVuXco0e5V8dbkGWHKQ4b24JbCORugsG8/E+aM0Mm
mcxlnn0WocNJh1A2qbhiKYYsrzqE2yiuewyucsLdpJB71DBC5VXg0RRvNfLs
7Eun/xGlyQPvbEEoE6MhZDgio7AepUokLpow+lCk3Z2Uwes/uvHdqk3JLRtO
KslQpFhlfTegfzQVABKkj16wt+zUF+vrzdXN+XxYVk3RegvOhy1GVMj3JpIS
A94RLh//lHnuhc9zq0K+wQWw3UEZ5dUrwvOJhUcoUqDxAxa5C8EF13Z4vwHD
qCYMccCE4s0hoL9ezYcUA9ILnHHoq1og1bZ9q1LX9XxKrXsmJmWdsirbZa8V
HNzeXyxWQZVu6YJk+Ofr1frq9HR9ff/ND4taZ75aTh3ZDubNQbsyePjh+fn6
/uGrbzaH6+Cg2litl+OD5aTfrNQni8PVkZ8NJTV4KFZqrd5o3Np78bBYLfdG
09OplSvVLLtuH8yaw/Or6+d31/Qj7i78HGxdsqmUko1Ei0Z+98kOHaGC4bV8
V9WyhZJR9ig8dAPIQQPqlMVCyc5TXQ3J8ryclUpCZF/HTaNjy4sdeRbEUboy
ea+L0X2BTerRiDN6pADAEKyLWeIEAu5C2kcYUtG3oXfvsqFzZJfxJTsCcxUO
iejArIr/A+81TH5ZRBHLdmZCiTEtuo6o6NL53AvLWXawRVaBeRRCJs17wQRL
77IyHFRK2PcG512Y1ma2nsQAfwVEHyeeUwE2HkUGyVC+yEBWmsst6Ll8lI8E
SJHVKDCSy2SQRPOs/MMmtBL7lgt3LV6S8+JHYZkfmTMKZuVaCaBNVZe2niZK
uipTgrDp/OuUO9L5Gr1kWynqn9nLHKok2Klbbr3XC+anE9/yB4vT06OgUm41
XLNkPlp6QFfBEtsT+osukLuYW2HGS10Kiy8Ig4PKI4qXO3LMcZ1qlWdWlUdt
BQ/jK+zNOTkwfpGqMLBqe0G/2wVHqlFt1Br1CoTVPDA9KNFAZAcA4LLj+62g
i92h79l63utWba9ql6peTmvWvE53tNzcnV4uPcp9ul3rnF6vr9ars6vNw7ev
h62966vFtGW0+35t0K1P3vzdm/OXX3z77dcvVpfdcdOfHzSN3moxmPaqo9Vq
2VITT58mqJLS7Uav0+0evfjuN/cDi8KlNQjkgqbYg2Hgt1bvN+ury9Xx6XI4
9PNUceRS2xE1FwvnjEJxZ4v+ZKRMqVHVU7F0TitTcrSAMaUXuaSUNOpksPnO
S3F4FMIgOS8JPXF6tksyj2jziBi6QhX5US5AZicwVaw+MM+HsADL2bCuE1s9
M3hXEZhfrAx2AWTnsNjZFbLt2BJG0atzXKDpCIuePcItCJNBHqVCGXsF/i3r
+MRibJbGrQgwJxDvSbA1Lcxu6GNQeWd3AtGzS6ykC/W3jEiGuWRUBtceNpxS
gT0BhR2Tjjtb11gXMptnrbhsmtVLWMYEpossr/o4poMUBeuw82PHfBtPnsrN
CLQslDyAuYW88kgSACVQ44Eg/YzYs6yJJI6ha80vR3cyEWWvntuO2PUythio
reDBrBmm2+wMJoezZcui1qkDBfVg2HTYutbghXiZl+Umw9xNBieyADV9wBB6
DJhYAWWFca3DcVJlZekqhQK15wgVLP+qDeHPWfHYIa3WqDFlym/2R9ODg9k+
FfmYIWBk5bNPbQ2Y3xrj2SnT1OpUlfmtPi9IyrKuyTVXM+o1q2C1q067GQxG
e/tn1yfLabdMYex2luvNZnN5cnb14vWro/n04M13y+O2fXZZD1qHXvD29z+c
/eQXP3z3/sVm03NrrSAwi97M0/rL0fTyZFxJbz3bDcfyisqoysH63Q8/TAFu
0ItG15HiqdreoOJ2Ht6vzq4vl7PJpDdqY02RiYYSDop/KmxzTz7d2s3lwinV
MvKZREwxqtT7AJInZVVLNVSpVJCg1JcOJ5NSLp5OYnILOUtZYmFpNk2lVA+J
MsglswU31JweVxvML9QeXQkx32TLPRl1NI9gWMAM1TlTz3cBZYeOInPRQ+zn
DBV2tpGKYinI6qOIjzCj1Tk84skY40l45BtLhONszMkaP9y1MxMEanAxlmqH
VGIml2TZ6TRkd+FIC823XFpwaSlk8jrlUGh6KkxdQiHiwiiG+i7dNLG8KWRy
mkzNeibJLHoh0cBaPxLCguGZAvMLWizeLuYfaWE6c/+4s2ekSQG+dWxmxxjF
j89qHlx+NgEsexUjEXn6pBR4kZ3SsMHQW2bU8obc9rrBaDldLt2S6oCY5/Tn
vTp4EAaXUrwGZPlQjhK2VDP5LYysLFaLY3tN7MoxurKxMWepREa3Y2LlIldQ
qw1ZK4HYhQKDDyU4+F0eHFObcH1xfnp0MBn0wf0AppfdzhuNZqsFU3QHcosQ
ZWj51UrLV1LZTLGsprOK5ZWMvZ6ZtzujwXT/5PxoRN2E67TObu9e3Nw9X69v
H75+f7082m8vf3I4CdzDRSeYrmqti7/+/eb7v/7V9189f/cy8AZ7HQ9oLkWb
rE/ON9OqnN7dCu1GUvlS2aUEdrA6Xy+NnBRLK5mE2qhkoorXcuzuF/eUPhZB
o9Pxe81iKrYVSZpty67ZBUkrZz/fCiXiUiiU1jyzEI8WSlW/VipiImyUbeiK
UdgkC+DQpXH15+jCS9GxYRVOiO3zCL6kUznFImesty+EedncAOW3Iia+wti2
KGpvhQEqwlGH7Q00KpuYbb69tb21tc1aWMy0BeQKU10GljxOtVjCPRyPMbqd
gVYJViWJ8h4xzkY4CaZMia0htNoxwkLyYBPOTDYjCiwKEZbtyaUhyp7inqJI
/1csZhQZgiSQuaVqpOr5zSbooVTbOFz952NRuv9ZfxclJroKufA4+QW3XGEd
OZaOxFI9L0QmmTnGoFwACPIcTGwkqEJwFVvcgtBlZ3oHBHa1kl12qkp0N/Zs
VzbVcH4QVFAhQaidybGqWfY7g+l8fj4qV6h9NuqBfzhu0t8AEoK7B0v0ww8K
nAid3raNj3rUBkcP5BDZeNZl6ofDQeJAvqTC6qA2b07xGZ4oqgBrp14dSm/U
TgSz5cXFyfJ4Plms12eH+9PJmE1u6lCEq3sMNUEuonzjge4HAaBG3UhnioZr
6YmdjO+3J81sJFFqNEf7x0fTAAoP7RV21qvLzcuH99/97GZaazbtyuuHgDqt
6XS/O+75q9/+4+bnf//7X7x8/vV5pzG9GJRNyhNOcLZenZ/6aiISj+zGMmmp
hD3laHW2OvW1ZPjprpRK502/oktU2lX9q7vnt8tBG+jiQVOGuZK8t2fSU5EO
ZZTE091EJknNeqRUkalvzal137Go7MkWDRs6GiWrpEhFmJRT95BJFSD2C/JD
Pp9kfyNw/W1TL7F/CwTLWLlBFOnUnkrskgAdH/brZrYcKxAwZpt1CYQygRJi
Q2eOiy3WitsF94NVr2LApT8K8US57uK9B7NmOTuARgtHA6HcwIzaxCOkNyEC
BS16jJIIO5xTaRVnCjqKK1DJmeyUhbc5qiNe2hSgUgJfWdY9d+vNdj8Iuk2/
7Ql2s5rZ+hzEXmpFUjkGCRQguv7o5oFKku07QLXP87SbrXx5uc5oaWBE2GWT
GVGa8LTReG5bBHQdMiaPuuuQTiiEtxPhEPx7auOqVgCInc07TKqyyvVWb/9o
cnbo1+zeoqd35u3jwG/WyxZWgZQiGEXCpEH7Y+vBVlKm9TjphTaJx8gRIBBZ
laEshrhl1vbhN5hACF3dBiv7UDdS98Em7+9Nl2en86AT9LqDxerm9oKa6GG3
02pi5QENOF/4rtVqPjTbeh3wo2p6mc5PqeookbDaCfq1Wk5K2tPpYr4/HXWp
Y/EnR0fT/mSfEsrt/f2BqaTy1BXvf3uwtzy+WF+1mt3Wxd/+8u63f/79h8uH
V9NpZ/nNPnAKpj1aLJf7HTOfTSS3nkWSmQJFTaW52ry8Guj5XCaRLaBH0Esl
lInV+pTSypjqQr/qD9uFVEpS6ntdz3TLqVDBTkfiUJmNpDOSpeaioWjeabhl
XZPSGRDc8hJ0SCtVM2ebTlAKp6V0Ii2BQJdNxdPUcQCSCpIItu1w7mY7Qkyl
kDHQehYfCVJi8CP4o8Wi6FSKj9omjFIMsScOy4tSI4JeHQ5SUXZy5jVHPIL4
4PoqxiqjHxXjqMhKJ5g+K1ylgERk9nmMW5AEbwuTWIqA8cFm1vFHUXd4qbEq
NS9AQJJlpWkgJyU03gqWR47rVWrUp9L9pdoONhA111LTW5/sJhmZRdXY45Ln
sf/AQAqRwsCAHG9AmQAAB0a2/YU0idDpLrIqqQpGDX2IUjN1FIzaobITnucY
4tIZdqUkNWSpQjytND1FReHEvjYlk5JbjSr6yWy6aldctbo+Lk8X3WkQ9HzX
MstCxQp3GCB1AmlS/qgO93GNDsQhaB5ulee19BhhmQZQooM661FglD3PgTiE
9Hq9UYX/Wb3eDMbLo0Nqiul3mOzPjpbrl89vzubTMYosSjG8MKyjX6c2hJ5H
3w/abQ9sLSuVSal1kCXa06Dldky3WJlvrleL0SyoYSA3HgyoFKvXPXooZiGb
NFw1672+nKy++avv7leXx8vnX71++Of/8v3m/Yfb1bB3/GGpKdRHKt4gaDV8
Q1bT6fB2LJWzvd6gtfjwwzdTPR1NyoapSLF8Q8nKXgOidcGkB/mV6ajTmvj5
rF72Z/1uo9LAFN3IZGDqUsiE41SGR59+Hs5UfM/RitlUpIgZEzT7qAvJJ3XN
UDNZtZhIw2IyzsaW9AoabJWt0Y2kYR8MtqeQzaSjJQThUFxJ7HbBNEPh2g3N
pyKTQXiXCIvPHWSPsMga0DKhf8X+Azv0GEVJPEzhyxGAHBKKs80tjHISQron
gWhhpjngJ1RvsYlBXLgcCLuPj6D2x05d2BvAixZdSSYF+hdo5oUsprNSRmKQ
oAU3FernM9lieDeeLZQ79GraRiEZxVA2x0bpXE0WhcKIJHQhUTdxb15ks808
S9yzbzzboumMr8nlkUZV5mMqWo4ebEkTLEEMuAz2+KAEUnHiu08ikpqNFUwz
lbJqNmvAgadgl2sNlkbYH9sVSx4c97yDRX0a7AV1mxPB4wDX0B/tOcuPuw7e
lgu4lY3tBlbesIMq87a86jDpg5KHJUghDs+sBJ+8ihluA56wjVZ3slydnS+C
4dHpbDzem0wP1+sXD+vD+YTSSROUc6pKm1AuqXrNmmn7/aANhq7npLKFpFzr
dXqj2aKp+cs9J2UP7tfr4+lif9Bvt/oU4lU29qRiplhIqr6bjWvBZHD05vf/
8tsfvlivrq433//9zx8233y9mvdG59++rWWSmWKt67v1YNr3SsV8MlUoWv5k
c9TZ/OmPaytDP1NTyoact23NrPoeqstqs25a1cbk+GCwV9PKo8uzY2qXKGuX
tWJeMmvdbsMrJbZC8dju9mfhhO2XS9m0lMImEHsuiLBlIhF4w4QyRSo7pFiU
F2Uye7JgC6WjBMFLXILgD5XTBZ7wszQ/o64YhkfVuhAclWQh6oCJP7ZpRfBr
ZaCv2LyZV4C73JmHwYxluXbeG8aEbEmUcYe8HqF3CLcbnvXGBCiFQiWFCiuZ
RtQIBd5EiuIlg0oMfQfQiRnUWelYPJXFjBehw5abkLjKsKlBOs3YY9MqSon4
p5/sfPpZeCucTmRUu9MHPR9ZANAruN8CuFtghn0RVRmLKWDvgcYNo908ehpJ
iH4hWVLD9UiGQfZgxRetpGYzubgE5rLG7xMOdoCkV4xkbGc7kkix/GPCqlkG
YO3ce8OsjMKjO/YpZNRZ1/YP+8E4GLfRTkMCl7X9Meql+oplppmW/T83H9g+
1OCdBjxJDcOrCpubwwQHXAh8iSmGW+zLjOacqib2G/TrzcHBYnW5P9789a8e
TpaHw/HhNBic/+zrFxezQSDmVDXm1DYohTS9cq0TBJ1mq+HWXEmu1hR7uVwc
TDqqFPRaakEbD5uLq7PV4cGgB6s2S4epkClFs3I+bvm2JPtNt//m+4cf/vC7
r1+sDq++/7/+/otXr79fTfu9xeLhg081ZyXQc1aHaqz9hgDCtKZXL/v25l+/
qGQzRQ3CktQO0A3Q7HbQo9HhrVG5WWvPx0G70T3ZbOaBU9JSEtQdqs3RdDZq
WlUtsxuO6Q0zFTc7nqkDZJ3PFtVcuphO0YlG90u9qwxfmCSdwByshEE7zQOQ
ZbHbqcpTXdb+QXkHVDjz5ACMzxceMeFc3hdkAWGVhWdIgclTj3BEwNnxX/Y9
D3HfAVoIMIvAXWExDoW4WJixi1GupYSxcxwVWEToU4NmC2USlkjk4W+UU4fY
k+C7pKlbR1IBaSXJmlhgyvK/WZRdsAMpwLJXzUQSydBn//nHf/GfdmKpZCgs
Jex+v1MpmdQ00aHHRJgaF8G7V3h7yDA0trGhp4kesMpYeS654AKlCEQWJSdW
R1IEEpfyc5HVEKEfikaE7VWK9DEGTTl2ejcW3glHooVyxUZNy7TAMvSn/M5w
1mvXy9VuUPfs4cqf7I1GLV9gyqGkwDUUz3B5Dgc1RIoQQ4RJGSrr1GfYLk6L
zUIMLtSwKowkYZgvvoPtApDlYlFIAYJFILXg3cn8aH0w+9Ofv12fL3/zu5k/
Ohp3Ji/ur+/vZkFAqQJyV4glcEB8r1pv90Z0DKkt9spOzY3lpkcTr5hPy92K
ZE0HTUutXr64XS2W816nicRN1wCdHk2J7uQrltMNGmbw8I//8OHNw8u7+4df
/Nc/vL66/fDFvNsZHc8ubtuNit0w00q137E7B0Ov47cHwf757armzdc9OZ+R
bQujeoeKNn+wmNbr84mlaE7Dsqg87NWqzcH+sFwyDFnO6brVnkzHAWXAKuUM
oxhLtUZtW64OPLqY6FrLUCWdyGkw31Hp1fUp5ejFJJ2qTCqpFBKxLHbnOQrJ
xz2sXiwypBdrQZm3w3lelUCUIc91Fq/J6BTl2fmAlwhYFHAHovNqHMo+u1h7
hLZDEbgNxliEIcKoEkjrMkdQrENgaivgJYzFTTLlFgIMyDaUOwQfhHIDg3RF
wCQeheOSYqMOGhX7OFMJxjCsFAsxpJhTnpUUihQpuxU21Wc//su/+N//MpmL
RNGsFMv1oF0tG2xJA+BuLlfgkQT2PXlGZmEwJbO0F/dbrDCX/4hnlriiVFSW
Q4SsicJCJCoPytlCEEtCdOpAA8O0xna9Rtkwwk+3KIdXysxlZ14gOH5esxN0
XD+Yzm82k+HsaFFfTKdTuqZxZ6Pu5+EtNuLMm0UNBQSJIJ0jwqpM+ICMaLGI
2dVjQ8Lj3TIa9nIFEQVcictAEaCsGg3uPvYPzi6H//e/vT3aO9n/8388VOvz
5Wx/NmnvPV9PBkEbbgZsqoy+vkGZh+qrbrNW8XG5a/lYrOpIqYRc8n1Dat5+
eVW3Ry+/uLtYr1eTLiWoWqWUNyxFL2TiacNWjGrTtxv9b/77//jHn37zyx/+
8Ofvzy/O1jfz/WbranN0uwlqJbNhFezm2I6lOj1/1Ovs78+mQbvkDX3bkJNF
m5KU7Tb7FLurL5+3G7Ojmqrbfrdquc2aUtBMLZvIQTdDsb3+dNjynXym3PDt
bI5aG6fRsDJG36N0nMtqGVmJbiWzVIWnstSkBJWibqvRJN2GxbxajEUlKr5T
iSydeNYbsgy5aBrQqGHeEx98SOvCeJAZICz8jjU0HSl0rIwTL2KphgZd4fTB
QyzqvLH5iAFHQlUT5NupOdkBCAsSiHFh0BkVO/SI6MdjjENkYUXqWnY/TQh1
3SRWHDzEYsdzQQThyW6WoSUwp2VX2xjM0wF1z2Djl07HsQqhZJFMPgllrPwn
P/rx//YXn6Rymbwm5xLpguEPmjUDOHRWqs8mJaGhwBvxjMSpE3sfxL6Clh0E
kUwOfYgkszaFguzBYLUioLpFkI1lnlQAlAu5E/a/Q4zpmmXBc7zeMMPbkWyZ
dXmoObe497arjVbfNzQ3WJ7evLl/eP98Gqxn8wX1m20oH/i1KjjlplKqYDaN
FSACo1IW0rrQtapwR+6Uq3RdU7+BIVYd7TpEgViqHYmEvsS1QTCBrg+1H9x7
d/Zmy83il//j7bDbnwVf/dvPus3l8/v1xdW8vXd1MKInCV7NkMsCwqTeaFF9
1Wv51ORDt00zc4VMJKPbDrR4e9Prb3710/fvfv7Vy1cvn1/Me01kHZvHnbm0
apRNyieNKhUrwa/+4z/+33/5+7/5+Wp2+WJ9MJkfr68367u/+vWiXGyOPMNu
9vVoysLcqt7u+FWzkFfsxjgoRVJ0hVv1/uLs8ujg/uuDoO30m45pto6mRZjD
JDWrmEwXDTqZ5eF40HQty5AK1HjZisTGEnomWqAmAjJoOp3g0GcJVoeiRjJT
jOwkKZlkVNB82MKc+gkwHwoqkrJD+YP7cyg26HA0QL9alIXXs3B3pQ+lM7nH
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
u/VesKQC//RotT8dt1GE1Zh8iLqs5jXbdbNC2YDaH4uKNyry6r39o/P9Ztmp
NuqOpRl+MGwXEmbn4Yvnd6txj675bjDss5huo+FPNl+8Xm5erw/nx763PPDa
+/OG409Ws+Og0jz46jfP+83l2wt6JYbd4GS9HKqJz7ZCuYJWafdbWjG+HdFP
3tyeLYdtOCqUvGbdbvYbrtm7e3+3nIwOfMV79er+i9PG179ayAmqX54ls9Fo
yv/Jn//4q4eplU7mtNbm5Z6ezmQMk6615G7a8Qx+rUpFKrGk/kRPZpRikr6I
TmnoyadPwnEGYtFlVoMOF3UmqCryLEoinG0Zuysuz4KkotCmo4sJV4EZhjqE
2aDlKYRLMMNiiZ9wAmCRCLfacUBJOKWAZhsRSBLAEnkzHhfED7bbjAn1abyb
KefchyO/xJg/xTAsdOCMIaFKileEMMlhhG8mRZWfpnqeVferFd+kakuKJ4wK
dO19x85ms1tbn30ejnwuJ7bCT545el6Hmm6uaOhWazYb9b0qnT9o0kMTWil+
lLcSqi3oNwT2X5c1YRvEPpxFETNs38iioyKvUlwwHAHmaJCcZnyhKGCxG8kX
LbfRm56s5nUpmem8Ws2XlECOj3ueaditadmiEsvWC0Z/Oe41HK6kHAt6sab1
KF/yKGnyMXCwOaS7Ho2Jy+YFYAbCas0rQ90K5xyjKB77erDsoOKoMzk52hvQ
/T3d3xsN2vX2UUANwfr25uTo9nQ+oMreY/l2F8IndWojuhCwblF8wPPQqdN3
CCaDTrdRpQKq41ET5FcazWJKb99/+3qzGgestDgeAorVaNa9YHlyuf7mpz9Z
H5zu+4NFMNy/Per3jy4mB9Wyf/Du7+66zdHV86O21+mfHVt+xypJoYwpZ0tW
NhoLxaK7qebm/pzqNh8Zkpoarznu2N7p8/XMy6U1KV+/f/flu8nezx5q0PHc
iUSoStImL++Xvp4Doilmrn++qQOcJ+kjP5y0fZlK7WI2r7Emv13Rsol0IhxN
h8PxBJqDZ5/vRlIp0EXMeqsCWV5NL6SSbGwgU7fCyrVFQJGAu8LNWpKT8Qzf
lezviWG/ZZckeScslK9C0IaLhLahN0r5IoEpLjM+QlxvQbIkIXJBig3NMZKK
8mocDYaQcWcF3kdUO5R+Isw0FDNchEEuC0edVIa1S6iywgoxCuJxQS+ZCj0I
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
NWFouZA6IFFBMZEJZXnfIX/k0nKLwTAsuqag2gN5Y/VRBotlSDU2ijc5OODY
jPgolV2vuzdfLZpNRa9Avm7w7vZms1oux91ms7c3anvV6dvf/82H/YpZCYbt
VrdO8UEvAkTfylBiZ1cbFy7IjLmCgChQicBE1USOsMv1BlAmmISi+aihtAL9
HEJxzUeN3Ybf648XWNudHV6uTpYHo8mAuulhr92kbgPsxQYSCAhS2LlX6s0W
4PhWxQ9Wh3apu/n6zfnB4ub5eHlydHJ+vto8rNpUU9mGaszevb7o9Yf9Xr8H
HjvwiVSquXYlODg8WR/YxYJbHd2+fzg7bumWr6drq/PT07PF5Gzd1SrzQd1W
clQFl836/O3DrOtXdNdvDNa3pxO36FLv0WyODieWloukmJsjOXtDla7n7Ui+
KNuDtpqOFcqOM5n3kb2owgv6rf0TKxqKh59+suO/WFjUmLUmdA7qduizH/3o
iSSlCkqmaLv+nlfMJrIoqLPhZ7vYBeaghaNpxXwB9o+24Va1xPbWrtSZzvf3
p13TyEdz0NBgfgMvjdkFRCyMC6yEbcRYmTqahKBIFh3/41Y8IeRFYW3Aag0Y
RbExSJThWKx3hYzDKw0s0FFVZYCp4q0gw3vBMs+wOjVm0YCNpaEMl0Etlsjm
03CnVWQQ60O70cSzv/zk008/+dGnObvdsNS0aqp0F6TzBcWs6hm1vhh3PN8f
r84Pzw72OqOhGo1KOnXqNUOJURtSqg26ng1moUHNhganRtZiYFVEKYvw0GSm
TOpwotUV4R2vM+JQNwRNisMHsyy+kmAmVeJ6TZURINjxOY3edHl8OuhIStWk
+mrvy5trio/FcjEb7R1MDybTzbebliFp9vggoMNacdj2xmaurIOdBzjmFjNs
XddCi453Y9GBPXmVKiqnLhIJlSKVSr0CSAmakUaNqYMgPFE11mg0+3vTxeHJ
6nS9vrw8nU+n46DfbNX9egsKi01IMwD+W4PDM054vdMOqrXm5GSvpNuD9Wr/
9JvffRivn5+vzi+ub188DOhL6XfTjOlm1fCCRosVSynMmpQFW61mM9hfHq6P
9VhKrm0+fPjJy/1+GSNwZ7xPvf5iub72S/64WaGXjQ6WXQ0unm9eXfSrpl2f
ba5Op+OeqVrUfQQHi5ouZbd2s4W87TVWX5yUQrupHHDVeq0J9xLPs2uT8+v1
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
EWWH0qptmIRzu+ko73eAtWQ9v77b3m7nWeorPeWwriu9URzpdNXrFnMvVwUQ
gzWsXrm6VKvxRye1ekUcPb778PHjq9XAZw9QZX38eSM+/rZD2d7xu5FvSbWW
aM12ry4n0PUJfDhJWOVsNogjNMUxgQJDMWSj9CCioxJhea+bh+wSEEVNosqV
Iqk/2X749tPb97//F4Lmm4vT2WI2Pju9GGnycNzpDfPi/vXVajrMUpCnelDm
7XUiAHS2qF6qiIJvVRpGMVOPLlpZ/QwYnR5DIZIrVcJNZlHk00EP+kDYPWd+
hHBbA0E265ZeIgkzkxoOi9N54KNjFtIZTxTepED3HLgBri83Q9+28svt+eYi
6+SDxarYrJZvX2/Phmlvtrp9ekMJ5/2uB+YvBUnox0m+evzt5+3Z9fZye381
LLYP93fX9w+r+azIYwAp38z6qihYvSTJU1Xqhroay8cnjQphVUX38/VmPs06
pmB21neP769cQ1SLp7hRE5W6HHhKvWWmmw+PN7Me/JghpBvHfXQX0TiEaKp2
VMHNbrC9QFPH2M/QcQIs+n/KH7Jd9nEJwbom4V6ZjidlFwc40kBdRWdMN+jS
NaEYRZeqhTaCh30i+tvCHkZTMbnn+y1Zs5SjwxY8P0VdkeFgXq81Tvaf7x3s
H9QkXQaFqiRWlZ5PMMMRQeeis45xJXpTQDcQ0tH2fyHFLkgvCArKYjIGI5QO
ZHATy3E6hBOZ5QG6xo1WvcEd0kddb1UabH2Ra/KNBq9aUQDp9ag7H6SDZNjR
2iLFojV5+zDOssRzlGqlxhuS32duMy67W8AZoGwI0fsgTG3huEbfXDzZP1Au
f/vTT989FqHMU0lnUWW7e+22h3e+nsRyQ2hrScTXZSssXr3cYLgdOA4rspg3
AgMfocuU4DFJB3U3YEzFLh2+frGaeJImSzVeEsGubrVUZ/L4X//t//vpd3//
elMMB7P52eLucTXpqt54QuHRnz08bLEGQr9leuygmUDoJk2AvWGWBs2TNAYN
izBIAmVE0A5RNhEYh+l53k/AIMpn0+k4Z5JwGBtCmgGbgikuccxQohROF7AG
GYzmm7ETMIZwQC+ASorYt0OCybP1dLNZptBCWG7Pd1s635PltJgWp2evd2tK
DaPp7ix0ei8/F2ybJHJBZbl7882XL3cXjx/uri5PB5vt+Xb35ulp9/Jxt8yn
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
gVnS1AwCNyrPLtZ0f0a8YM4eO1GUcjhAtBflFsAchN5TUUpl3N2lf6OM18Pg
c4oCKxY83gpBUYpFzQLVVj5la81mxhQQ9JvEhI9+C78P9JjuvELoui3QAoaj
LmvvzuCdhhoK6AWq7RwXd9OQxQyb7Nz2wty9ZbUHVutlK526ZDORmmcfCBLG
54vNti4K6NanKaDRcrPdEcR2s/V+0e6vnz07nW3bSdmWV08qWXaPX7w4C8Lq
9t3N5clqvdlfne2vY2lwJOXP3r7/8Isv37z78rNXr7dpurw839ZgtUGeIhz2
HFghVoRN0EjFWAOOAmywArEZnE90qsRyoGFrIORamBejvjaYxY5JuG4JUgmk
SGzH9KiioIdP5Y8+efDgaKD5kcdjRIwJxzKuV4/Pzt0IhNIKFkg9XHg+GEsQ
rvbQHcPPNGKZJt7Wqdrtft+6vYODI8mQZTtZrELC2b2D7mBklbF6eO9+T5HM
05e7HJ2ZEdN0+2Lng8Ez3d1IIRBOxC+YGVJkSFgBwVagbL771e3ZZDaPs+lz
Sp8mYdo6dbPZtEzVwZE6LWO6MzTwLeHapjvQwcvypkoSRlioLyEXB8Yy27ex
WovlTCKNvtYA5sF2tKFafoStVriK6mPIvJlKH0wXQjCQIu58fBS5w879Lr0C
LRgN+5RndUIijmxt98vm8mRmKerAI/D+8CFBGiwDTPL2+mJFVyrDjlTwdOlp
sT03xiFsUhXebUrB4TnhTQWolQqVH+5o3c0HM+ANChJo8ZQ1mCZTqr9YZ7QW
/PXqjptbMmeXh4LAH6Cio8ifwiyQaYkQF62FfO+0EtbP2M+tWTOLZxkNDzuQ
LQomzM+XS2YlQg8CCASdLvqqho2d61m7RHd4vlk1ENaOmSJWzxfr5aqJAnNS
7bZnl7v9q+OkLPO0mZ5ez20nfvz7r1rXSW7evXp2tdusdo+uXz6dWFRIWO37
n3/31efv3r+7vXm5XxRnj3ardRPRDzOdzayBlRPiqXJMBVHHQJ4HWBlu0D5E
bV3weNCrMllYHYuBNujquAYNriQoPHx2L6cIAnKn4w6vWjehUunBR/ceDk3o
R3vQpuVVEDY7YCMZR9hyclfYRsqhOsANOB+5cIaB+54b4s4DWyjBj2x5spt6
0uDgJ5/0DMuJ6jbXeXeWTrgVJ3rvsDums3b6+VMqeZcLzMpZTHQojRhmYOTB
qACONyOZqj8JJF4F7SvDcfTeaP3t7ZP9Z7e5sbi9aSPTSibT1F+1TZuNu1S5
tQmWzxFOMnzVsKkSoDdapTHeNFh+qvCKM5mvacFHlC6QILalsPSpzBtS9GB9
hDIU/Ew569CnqkNbGRKmJ1QuodWhyGlqKKP+6OHhkVZPlK7uO76rmpRntotF
fXU2pe+vZJHtmxRAupZQObTY7XdtwYtZTE6MMOYQw/GIRXuxrIBIIYyRp1N2
POfqim0HmZCV8JIUwZA4y0CmLWDFMcWBx04i1l9zXpACWsizkldlmfCB41yB
88HjEUo29RQ4osFS03TGyAWTkppBB1RLmNiO9DFbUIUG1Z+S1ehYfJHFSbHr
wSuLBc/qEVkly3S085IXBjeLkjABBOgpdJv1ZtkuphOTu3zX++Xpy+MKmtF1
++y6UHXr8q9vU0Mvfvr+87dXu/lscfz40a501X5fct98+NlPv/3mPbxxLo/r
druYNxARyutlqahJmVIGpGsEtWnI2SNAxsC/LhaYWYIBwj3AH8ZdPaShVIdp
Kwi3woEzhOYPnwrX9j15rKudex/fPxqZLnYP6TFYiQEbsTCMtrn7CwQCEMN7
IOgCwPEZHWTHEywVSKWFLoA7lqezvFptK08ZjMf37/VU243SRBl2qVbH7DtI
XK13/8Eh3e31V++vzo9PTljBHctQYFxB8ApgQ+E0IvF4kOWvEB4ohuhcj3rB
9btX19eXu7w5ebWZh0ba5MHk/PJ4l/YOx1oy9c3Qo7thLA+h7UbPIXQjqk1A
5IvACYApIRpZtoeUiw0ZJh8oeuz1uoNxn8JKVkzPs6MUotqGCgEXiz5Cz8GM
fEMdSWNDMoLclfqSblDuUwqnpyhaT45MM/DS6Xax3TWFpg30Io4NXt1PqtVi
3S6Wy1kGRJ6KtQ4kiiRKIVyC2SALmGDrjLIHBwdMQBOWb2fZqzy7yyG8ZgsN
E9RKrC0KKi+FjTB+ooO9wHWPbMC8xdlsgTKLZasKoWFVszgoa1lhbAJeSA12
yfzOn7ARRHimsOOzsXkFoTW4QDdVWC15lHg3RwH8r0XLiwV6hej1aruaJsyq
xP5Wu1qt1osiosgvd/Pd5ZP12YZeRZVm12+WNhUXLz5cGop++uOHn352vYYA
/aPLq6vUUemajB+9++WvfvnLn//syzfPn+6K9WaBXUgwWxIlZGnVLOLw8Nnf
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
0sIxV2NffbuKqBhz2Zk3pXPP8At2iO5TlWQO7itKaitansyXiJxLUhZUiUiG
0bK6TZ1kIU+3TFcrO5oqjawzmk2y5dsffnPMIjvnPcZTeV5vfvXTQ7u8+fAm
GmbaeqDsoyHWyFUUpcBLExIM+yEyKkN22FkiwdwhPonsyMdQm+KY/AIBMApk
7kN5iPEgY2MyCA1IftaRsOJ4xw00mVkbUBW6NiJ6faq3UaQF52wagmNPWWbU
hRuhQE+baKQIw4m6rHALU/Y+0xaMybQ5D7W0JhQhGrkZoLn4pilrWVQsNMFq
9Ne540YY8MrxwFEkmAfaMYDIsdofb7jzj2KNn26OrsbGfFa4W/yllxsAhWs5
qPkpPRw3+4+T360qIsoyVz/cysCZvfiNKimX4ZWAlSyb92dAon3yJCgjTbuG
vgeald3KqzZZQFudZ/XU0gUj7AfyIZoeBY1IhGxWQLYct6BJ1iv6K5oSZB/h
2todVRyf3r17czu1Mzm/+f3fvm1G3GzW2VVIvEZZM7GCIUub9z/9uA+SOTKc
LRaQjV1eAGJV3lK/IF1S5gwnVSyUUT8rx5pv4t05qfKPlA2lhkKMKEKB2Wzu
rBAlkLNKNeh2TwO5BBJhPhVS6uW7YxGfkKTOxtpKUjUlowGocSInSjURU4iw
nXd3dPfQyEtpFlh8pHVRLxp7BT48zuKwT/dhkT9f7j/8H//xrm0fv9p27YOZ
uEd9SYsOXSGOTh30Ff/zfywClBwYQ9n/jYbqkLzd5u+hQgZtCuYUAYKMwH+9
+mJglxfOPFovWGBYETPViNzHDjFK7sy8xuOiaef95117ePk0MxlzSwjt+fKy
0V2UxgUQNviYxUStOUNG6l7xpEr9hyUis11hTGqNc9n91cKqI1cigw+aDlY4
TePqo+1c+/J6tbdi6frh7uHx9ev7h+Px5ubm2n3+6NJXktvxPZ27yrJ6WO+4
nWEDAnffSzKaOdfataPd0FZWONfXN/jfsPtQ9HDQsWDz8LCOWTYFB280bu4f
727t+ywyyFIimqub2SCZKvhku1IRtVL0LIQuWbrhoZutSWsIy5LNwhLVwrWD
0YOsm9P718e2zOrN/duvTml/lDWWcWdFPVttJkk0nafDJBoMxzB8lmsJ6S9n
E7n20UdM5P9R1Q6Hq3K99urfM9nS5ElvME5kOCiOtlvaiIvLkJf5pjAZArrH
vt4gdM6yPSKag6CgBWGZgduN/V2bYXpyzfjhgliTPrIKhAorcY9PNf6Mhc5D
IheQK5yoZRGSWDRP2qo4vnu3zEbDAbY89WJ1ePz1//n//s+3M6uv8s7Afqle
p9cXHtH+X86cox5JBTKInXDrw32NztAgRHPIzjLrDAC9KrwijW6HATK6oYyb
Y3s0qjIt2hM6IXsGjWzSppx0a6ebUpMv6sWMZxBKejK2XF1n3YthEI3tT6Wb
ZjlAjcRdUu1Stdqrrcij5BKOpAF8VcE+4N0qJpWWscKSEiCVnG+VLJabdlK3
EqZx3ixwTo29pJW4YAGNVTo6CXc31w+vborp+7e3lj1OZxUEuua1Q6Y2muXi
e2O1Dr2BCzCI1yRGxgFE4xrWxnqnLuQgffaT5Y/royN72fsBmOehZeHA5w87
50XZN929urt+uD9t9zL9lCDdIrfem4WEkxvxWWAYRhLaieuLEpFjuiRqjcSp
xEtEsLW+nD5k287twJeL929bOzf7rz58eDMe1bcP1zePj7er9fLw+Hoxnm2q
gHekFyaT7c3ewmo+y2YN7Bzt0O1NohkBD8qcvRb3slF4cFNnRfzy5ZV1rzFT
LXfQZNLpiF3mswxEx77DyLx0OmOYKLpiqgc+JscCHI7l3CocksZgWi5QNyWF
vF7LTAKM6VnIATKWFi1jn5tR2+WNEtykFhmvKurHD9ellWZJuxyHyWx+evft
n//rz7er2s6y9QlFNbAA6XVZDPaR44EbNeqq1mJ4FdKFhNjksDVnPCUsLxZQ
oZp1KiMhtAgPqiT7uhHbmzBQ+67MZp0bVLPZxFJJUQJPsHaOnBwlvjehEhuD
dMuLsHtld04+bacVjieRmMljp1qJdaOZxdh+SqqtX101/kbVdGDEy3QmEoIG
36AYUYdg/IvFx/Zwc71lLyiZUWsyvLyy1n4+mQJBXEped21X7fF4u9+0s+Cq
P3t8vLl2bRAubW0+aI4XsiygPwBBtdp4n3CgP9hDwD0el3QkBxVKktrBHhC6
6/WtWhpvtvdQ1eFWqdOgntu6IgN08tPD4zSs7u9QNtnhZCUxCGa22EsvReby
IRgVF9T1NVGAL+fmdPN4a783iWwNIB8+Iaazi+X+YBGKvNd8tr1vi6p9YN8x
KZ6+ur+9vb9/fP3m7en+w9sDBdyxTYcjQL0P++3CXuQBL7h2hLWm8ECwrF61
6ne6WGPFVAkeVzpKanR1afGRAHjAvgKChzU1wz7DTiySInSX6SoErXL7G/1N
aFgygVaBOWxbKSLyF1k5y/UY8lHqqUW8KPr31DV8dbTYmrjCVma3KTaddWEV
1nRSxGh5Ztni8dUUx5NZW0ej1BLkene8vT29m3d7o6uLq3or/XbplwAiGZ2X
6UBKyBOqr4aCKQK/tAIq1Idd3h3EiUWI6FS+WbSICgMlUJ6wNSdh4hjOiQbR
sMOFniqkqec6lBhBAP/PqqnlheHVVW84zttZ7fZc3APMPkjX3ChkDy9iLQas
tiJFeDwA1ZLfLdQE4ZxLlWXMvyw+pGi1ad+tb6cVsqNsCDkgVl2J8AOmXe3H
kkERp31TJ9k0fPbicnp3d7pRS8wod0UJZnGEjMlaojrqkJU3aMVxJXCZajvo
GxdccP9ZC7GTVWpHDam06uDbNr68ALG+P6syEFEbJl/H48NtfNFZ3DOhgu4r
qrsFqdvkLsVp1ESX2oquhEkzYGOLy9vH+4e393K5XbeEjX27iiTE469vFs10
sZzNV4tJs7t79f67Hybrb17f3L66v3t4uH/16u7m7ZfXm/Z4bW1KPn/z9vH+
uF9NkmQAJLoRCQQoj/0ldwOp6Xr2sl/MG9/Zligm2r+Ci1gDI3qOJJcMNTer
pNyT8/HVikyTKQ271LAL8gsahK/V/pmCW2JXQvEqQ8mqLfOlOa0N/X8isUZ3
p7IHcAsSK/es/KL5sK+lohiP2ZDl43o9K5vN3f1uYhX+dJ3Gs0VTz47v55fP
Xjx/0ZvMZc+pEgtubTCyP/atpgJUEqluiix9BFGCH2DwbJSNfBWCA4LyRxQM
xcsdokgaoHzSj4U1tuuBEXEgWAGvlHsAp8BGOOzIwbFltKpoUuNcywQqDXuX
HdzW1fkxDUyZFtLqFWrYEviLBZTySmK+CjnQDnQp1rFZBmKapckg7TzvFasR
OnCcaqd/X7fwqhBTbKQ7ioVt45Tbhft+ijuBelvSuxqNOoNeqbKHvAEFnAGR
CLZbwaj28lED974VWJylN1sRGR2c8OtUuy6mq53/szkUuFwJ6QrJtRZwBVVS
UWsZ7VKdyRL9mHd67QnUl1VNTA+AcC2UctZSA0YsBZN1Z6QDL0ae24q12+kw
21/v1Ny3HtiMfxHa1s86i1JYlXl89erdd2+zzZu76/vHx8dXb18/vXn9ePvq
/YEKrp7Pb798vL3Hv7Gx4uoMN6inlTQpNVzEQGoy/PSzy0JdiJMBqfiTUO9M
lieaIpElwkioCUr2CAEQDKD0qdSdP6ioxzK3YVAViXTo8osuWaIuXGvATPo4
WjaSP87mU3x3cTb+HJ9Nesro+VVMkil0eGoscJppmbIKWL15ulvm45ndZFna
5pfDullXs+jy6rJfTDDH6fUHXfdBF3tQ/pxgSXACAW/FCh0McveLfs6a0ANk
NLIc2es6+hcmVUBRFvY7g1Eolm048IjheMP6PsvgAx5UsI+BAQNlt4rI4rm1
rJcGnaseQjBnxBt8GdSTCmUSmJk8CB7CcM4hqp8niEQgnV9l/0BJgXJWUmsC
wi/l3AzhYTKxiKiqVlMClIAbGew0In1QdDnjfInh4O56E39hwRqGc5wIZLTJ
7YyA+1LaVlJZ2H/kKW29/7ZAQSCX3cNqwfBLlPW97JoPx+vzikN+5zT8rBol
JYpTIStA5lN0EsC2iJUTrt0UcmzBV1Jk2Mo1dyVKieYDWlW6OtCOnML8qt3c
jC8u03xye20POimt81hL+ZGOhS/dS3SiKZp2df36cVEVw+pg6e3h9u7u1dNX
X797em/t136KQ+r6q7d3D7fH9ZxXsRZPCjVj0geu5+BArQccfv7ZRUJRK/EQ
+RmAGuRos/xSM4H/5AjUlW8FfDWQuRCWwItMZJK0kHBcnDrLKRZmSxNLYVxF
tEjl2pZrtosAPPTTTIsT9RmWK1SKy9HQQim47FGGpQIJW2k2RmqWpU1WLqz8
rKPycJq3k/lmEk0WkzKLri4JjBDnQZHOu4BK6EACxlnUSY7k1XBKER9eXQQp
XbqcCQPfpF8EksdFkxTRE+vM+91OH/epkZRKLZniQ4sGGyeTloAuKzvnRGni
zmY5xiRNYRXZVS+M6jxr7KCfdfUsJppa4DMAv6Bomon2gTMhEOGG5T5Cl6IM
JJ0SsD/f5ViDytcvdtPVc7sOAbrj16Gxrkw4p9qiW8DMUOGkcFltMdGY9oIi
SZaHjTQKN2KyWqvBLnqlimg7U3yAt2JgdBClXMnCQmFjF/nqcFQckUMOh9O1
pruEBmtA1VbSxwKsuD8Ll5BFgKNDN8FE5/r6GisEMQVRYljtpaKyFMwLZZO1
jN5QiRfwl6+BIbjYtr2LwXB5Ai7f5jUzrIVkvph6WXysNdKrq9nCfpmkcxm2
6/3pBKj+9PD2/ZdPXz6d7q8Xy8P15uHrh7ub4xbDoLo5G56TO7SWQlKUUWH2
+acX6RSnA854fIawZ/LYhI9RarmR+HkSuJAVATevq1/JTAd0explkgsajz/W
Wi7kCYU9AKARjuWVIFSsC/bKhE1jHO9DCjU8skNPJZmdRjHYeRpZajI7gRNt
iQsr36b2SwedbhgPxvV0OV/utvkoSfp4EnReIOfzkR7lZdWwP5D34FCo3aG1
3LjV2tMJRklqHTjtx5ChLxKi5AeNcsFqCepr/+46UIUwugrTbILswdSJfFmc
VYUvjKRkXE21vy7GEw6yBWE/oGS04lae7ygZjZkj4lOaw4ycuKZCw8pjqulU
7qw0xUdWioVWFYK5Y0NRAnvAUrURiKudoXRi9bMVV+CyJpNJe5alliTQfMb4
E/VBiSTsdsv5bHXcirWqEoZtmygY0Is22/lORECOrGj/EiRhvX68ObTbddss
d1pHsPvZO4/jJL+Co3Tc6bqB/7L/E3Hw4JokW0DlB0FEjpLs3WtY5q4hGib7
5lw6XLTqMBE3UslyPyurEy0FTu212Fo47mQYstTEa6nnawXkfjOVcMVkNm+m
y+YyO8qXSkug7fXj26/evnuyjHhrHczDo3VNa5fTAzcnusxEXCmohHITKPNR
L68bu5nAd1h3Aewi9hOeRbmaBowKWBYIQRKfFRtiYbcz0aZirQl129GY5FqL
O8yvkBpvFLtTQMqOI5XwbqGBTR47QZfvqzT9UQGWJyJBKFHoA5kAHexwkAmc
N+MwzON+PqtTRq528KbtYVvYg1V271+87HfdHMejRGsL+X949gikxGsBgKwF
KqD06RLnZSUYKvgj8XCTYNSX6jsZo99lFxnydXGh9rgu3Cu+QL+oIvepvrSO
e1wB+7SXSOPA4bA3hHJWNtwIY/n65gxEHGnFwFZUv8YBZxChBCzwTsV3tEgd
FRB0JfwDoBNJGbUbkiJxNi12nLO5OHFWlM/cWg3Jdk4QMFgGU6fbm4PmUcfD
VlYezqIF9s6FjWAODCf8//joUeQoUIs7bDpkOi0y1AJi7VE6CwfheA+ypYUI
ZQ+1IyosRYF03x0gzRIvkjaR4ok0Gg7O6thIoX2l7SMlHUqJ2r+ckY7Iufvc
lz0HQlhwFyF8WObQ1M359CJ/tWWJhgW6etO81+7wyLKQriezdn28f/P46su7
5fZ493h/C4yLzS746EoDcyA/wjVMCtcD0Dadt66E/OqzKZoF5lGJBkraRgTi
lqcUVokMChA/jPRZZNAox3wyK0O1fOyi7mdvzrFM+kg/WE8x32IbYlkEfLvy
y7mOsHCVQZkU5NXMSqiBNST3bT2d1dyQdpPUg25nwPp7UltRP7H7c7FbZv0g
ruJB9+VwDGkQeXS3dMZXpyfhXO0/QJwQMkyhYugcI7JbMNQCHZo560DfFeob
+rjehkmv05OOL5IkXPdRVKr20UxCwpIwADI2o+Cc0fEeZ9YtpNRqHbRTq1q1
KMgzNPS4AcR4AqrcOAWK0QlVWOrSYBCmSq1hqT0l0CeNDYG0tOht3Jp5LnkS
eg2roK1n1xBI7lCtu5u3Wh/Ypb47nm5u17u70/W1ZNHVRWNYu5dC20EWgjIU
FHFwLzb5ZrmxoJFdWls1s52F117UQ20Ikb3aEURo7hx8DLwCXLV2/R6sPdeI
YyFX5RWchr7XN3cnkULYixychOIcXmDE9hhwpbbS7T2sXLdLEnJLyUjALdRa
Xa4d9uRl5WA11rxAlHcxncyWRQZReokaHlmiXW1v7l+/OxSthQf5awnq2ctb
qWOUasqZFIrRLB1Ry/X8fy65dcCCUKDO9hxpokAQ6luj3IDwgPmTUAA4PoPU
EEe+BNHqI9cafCzhOElSE1Ws4bTWoHNHBFc+6u53SAklAUXZLQjwRZXi4GJF
zBijDfeJWVqeXwQXncteJ8nn83Jcr29PdmU1Fqx2y1p8F6lMCLDqIHEw3z0r
X0U4E0iLd6QiKmaE5c43IG61SOePHjoBVJERXw2U0Vr0PkvCUQ6QuMrkRWqd
fMUKB8eGwUgj7kSrTV6MIgUsZU/cfgGEk1DDEECncAVVj5BGmWOGiBxdet0g
wserqcGecIsM8CwonYU+h5nAIh64IkTHuRPO53iwTWUNISN11RuU7B+9aTcI
X1njyyLvJIlosLmyElQRJbc0oLmUSyp+OKHMYPUHlKd9hCvPD0lNW/Ox37h0
j2R/mGFRL2m6KwAwGBPnXNmj7NWzbIjS/fH29uHh/v4oQzbc1cC4r9YOs9+T
QlbbhaDAErFeuRoqC0RcETYuFs8TkNLEXKlTcObNerpBPAsxOZIpaUXxw+x7
ubt7PFTVTtrYizn0GA04IDu7jmiJcnshaKJEfCS+J9yQVr944cSuTeLcwUhr
Py57h1AJZ8iKGPitVRS6aDXmFTtQW+8kc746WBNnC6IaqNIMEEluV6rsEcZO
Tlc4pUoZtCNaUrKszMDi6/csp/aWi0A/wa3jdDO3m/3ixVU0XUTDYHr7+Op6
WdnFbrkwqbNqCqsWxBVgK4C3/TMMi9luf0TVJHA7OUUodPboUKWIhBB9Q045
uEVJOgSqvAZdpB4wTbNK1S4Hi6Zu59NPv4go9kKWKAq21NdCmaOQ5QRiP2eA
ALGd9ETAEtDItRK4VETRZ2ekCL6hQpBMzo9q4tmwQzLmqrAW3Wovq6NKAf7z
vC7lGiVI+2yBzsBELgiuQc2pwOQG182F70CktSuRQ1H4NtKD22Lpx0hqJZuP
vZCL2oprDrXZOHScL8Nx8+b++iD2IKxYGm5iZeOoq91xe5AKFloKGxlRiQi7
as96ihJBITys2Lp5vG3Kw6P9HmQyHgqU8Lp1BxCBhtcaNu+th165UuoUBR9U
R2lUtCIhDJZyxAbJYL22Pad2zlyBEGllaSIbHevZUaBcHdfldLO3l2S7ZDpe
CaygUiUTTVCzxVzqVKAEEYmRTkaWum3H2K0zpeFMXaSaweV8orF/kbjjkRwJ
U9AX/EMGkRKWJrrag8d+ncp50D1wFXqUJInEPcbu05nKu0y1Vq4RkPThJH7q
jCkrP7h4ZkJY1lW7Ojzup1k2wk4hG/ZG1eZ4c9wz3pSMdrO5GXpABCJFDbHp
JFYGqq6EyQrVgQ+ULkRyGvERIgKa+nmMjdVUKJ0T++UB/mpnIr/dJLSKLbr8
9JPng2D4rIek+1jeisCt7LIRuMolJ1Jw8tAoNaqrRO0vJCIzkS06iUDFlUjp
ruGqIZ+uBrmzsB1BQgN6VS3tIZQrBJRnyzudizI/l0DizJ1CLF401J0rgcis
VgpsMxzPmQhJsFNHkNuYMgmk7QZ78pOE4dTIo5goJV1R/cgedyffkpM0jicJ
l8it8CDZOOceflSLEy8R0O1S2jxSJJFM78EC8nA7C7rN3fXx5loKVqqp5Ekl
/K/WK5p2gUKxEsnSI/iZOXGxWyn8fftB5YWjyRk9YBEzX9KjrO2DiM2jUs91
QZNmGXTWbLf8fY4uK/Mq7ZtEAUSxvdTIiNGrHKK4hGQemUn6TTPYmAmTE+Vg
MDB0spqZYkpqzuIHRb3QTgn5hYMUJaPIFUmEo0rESSVxOCJLPIrI81IiCbok
k1lbalklcNB8lDi8+7xnZxAqcROQV9W0naSZxNAmWTVvd6f7w6yIBkEvSoOY
xULbHh/u3756vNmtT2/vb10z0aos2FHCpWucNXLEosZR2gDKEp2FeKjh7mjk
RreBMgbowmgkTAqU9UDq1rTi6RgJk4svXj6/7LwchReXHdHGEKOO47xp9ZL7
y82O3LLqiBVSKZMVPUXt2hmyS6hSKia153K7w8ZZLFKO1PNrfLVAXBML0qEG
iS0gr0IKFC84LFIIQrIz36Gr0kAU0c3P4RjS2cpvcCHiOT4Ba5eARn0BkAiN
x3F/pvuJWm6nWZURtT6Nu9Dsxxv8m+UfxdBWmqD8cTJTh+1dhPi1VFp7Bzra
Md64CS7aofIs3NSW7NfIj5wjjlEWNKr99iDl31ZaDHq4tZyXsWzQE5MO1oqZ
w5beYyG7rI+eJrieiLoCtBfPZucV4yOvSsytrvHvQ94FWm3tYj0p9UquDWCq
8GAkUkukz95LV2ujzuEdFDoikjuaRi5S200jodJ174eSVkxEP5XrjWv5C88r
z1pmYJHjDZHxcLpIrHX8WEtAUbodiiJPqkxyJi5kkp6h83wT3VH04mLAjowW
pLEUfHu7a+2ODkP7kB3I9vD6yzcPbz98+e7m5nTzeC07HFdmGGjCC7S97/83
DAXHUmdh9RZq1SgZShJLHwaZpf5cdocw10Ox1HGgYgVYRIG1It3nnz7vhPFo
1OuF1JWBdLzjfGYXlZW1oECQYekFZJaQT4/TCmKlBnOla6zDv4ThAfGpysoU
fTqNdUFzsl4/e9iCHyjFrq0lzQBcsaymE4nL8R5Lf5daYkG4WK0xm4rxgckm
pEG3PF98TCWg/8D9rcgeu61KLiu6SAPMa3c+joI2rrJIgHUqoMPpen99vHbg
rpiyki2BH7tbL1sNwba+pj+4vTn8cYqspWwN5QqCb9rJfszcUl+zuD6dbm7B
Ltq37kWZQiZoIzWSjfYulGq02ILrA0Xk3C+d8mW5ZKEeS0YNIGta68IkR2G5
dI2Zyfwf6XONPPF0Ij2MqdSSyLWArmQfUGCsqj5Ya79MKYW7iH69kOvgWXok
+2jzwQEV64m6IcO+OclctEZ4qSQDqciclyIlSSTNIG4Vwiecdl8hKnMgHWr1
mSY+cjSwukN20cyzqN8TL7pRlpPqexJrhWi/Znz5yed93a81jCBwdtf3pw0e
xojYWFV98/T6eLh5/WrbLvanzUrZA67HAEC7tOA0qO27qg+fG0WQboeyfaYt
GVizoWHXwMe/TLLIH4GSzMA1rdkJBfEw6Fxefvp5dzgUN7dz2QnH1qGTgcvp
0smulKzwKaPIGhZLhlaXFdIvSlMk2kscc3wMoV2h26/AdCm1QhTSgBmVNBJV
gvFFTFeYR04m+UQypJULjAqni6CTlueNlEoWH80+FpgVWnislt6VLLYCBNI7
r4WkoprZa2AqSRL+czozmsCYwGKSpgOWaEdXGdlKTYE/iYgodshKJBLFy4EB
8dmClqEu+Mgzmktl3ElMxXraNpvD6eYOAjvM3oMPtzZnsRRpu7P6QPdq0Qqc
vJBENTK8MlBEguists20TqYNczdc5AljPiofRiF/V1IAmzZi8Jd6bQFxShcO
niDqSzIZRDCATS/1L6ZGwN4dCaV9HjhFLAfGzpt1XK18zZPQEYmxECWZV066
6GXz7Ars7klIDMHqOJur0Zkqb6EqV2hoqY/LwJK5QOp4diBYWW7f6ysA/a3I
e1ejCu6dbMWseljt93f3lkLwVmrm7ebu4bisi6xZtXm2sHeqpzpJIqJDacJ5
VSWJaiUV1Kal9zOQnAnjLmosRRKdi+9DmWQF0hYdiJQrzMxo2O13Pv/0ny7V
m/TG6ejZp+jfFWmMt+6K5VSF+ArPil5Fk4gkzAVJFAWwlFRG5i/5WGKVheVm
CQEIcYLMN50Jtmm+FZEokGuLTmaSGZ1VEsWsxLsFcIQHbSvcruPe3WdwIZ9B
earpplXTu/ZRL+DYrdRGXKkNoSuJLABKPKr92HGzIyiyl6ENYm9kAQXV4XS6
VjwRBO1mfUYXrldY0wp6td64Spb1CyuadjYlu5MU4+wh6KaPxxMkFGUblEpw
mJb/CINckFkgemVZopGcT3lXZ8DVynW8FufP6cvcQs7dHISJ159WijDQnPTk
7ppCPoYd0GgPCOKzkA+ai1mlaSVPDru8Cs8sVFEapWbsupRk0DvM3NUjdV3p
VBofofSqGfvKQszRVk4q1EPnWp6IW67Q0EZQiEMUCKjLc5/sqg5zxQMIV5nT
BtmAuCQWv4VA8fjHoIwzo2acztZ7SmF6cuvZNo8fHhd11nsxAD5jL9FC2EI6
cwuDUTTqDcgCA3boXX2KiZJ2IUoO+uKh8sjIs8cIOnrgHxFscaCmJIBRPhxc
vOxa6xHJq7Q7ysLuIA5HURHGwB0WGNRg2FbljrvRPYBCXqRXhkaCWTUvb5H7
lcCFlI6dM8ViKBHwOc+YO9ZcC43EdhvpKLoIFoGCysPZ7MPCA08yKCCIDZz3
5r72EK5q7kXGYiltXSWEvVpsemvUE47So6Yr18BVbrQeNTId54LfuTDo1m0z
+c/1UdI9Fh/Llg23/HUQJ7G+eu0CuxYgq/V+5UYfe/bm1o8fZGu7JpKON2ez
HAFINm7Uozm0liH4vZEGaDksEjSSooQTKtldRj+efp6oXwszdxLyiwGAP0yR
s73DfOo05dICJZ2IyK/+opY+A3N0xz2lsokC+CYnV4jpY58jZT4/UlUVIvQj
/rWUbiQtGkUiNMnE48wWPNdbmbQZHLZIyxJl7E3SyF1ABUJMXUqUjTlVRxbL
7zaVfIP2z6mEuSoRE6VyUgqMwSy6lvsL1XotlxTeGSsqF4enb4+WGi0JpBhh
NHWhCsqywssOtI5Bbzg4I6l6A5eG8/0HZZSygAZcNB9044MRyJMwdC+d4cie
/6jfH6KGkdorMBz0ruyBx+Ph1SCLrp6PE5+PRZahp/Y2zdw8RQYr2WDA1jSR
jjE1KtZojpQeK0Wo3pSwETeIgMq8HmNZQHKBoREn1WR5I0xJHJX8DaDEoaJc
lVP7h8qc4yDqoDhS8lI7d61S0qQNWSzot2UsgKTVTiwjfDWPJAmKLCji6/Xe
BQ8B2+JOc/D2WcXXDkTtRmIM6L7xZewGZSCyEBlwo53KDsFPp3vs6SIYzMoQ
mm+SWBaBpCh0PpaGz9AOHTbPBoYto359UoYajBZNeKLBntJ6Xlu1RJu1dI79
2hLGORAaQJmzxfnZb7zoZWoBdYwJIKZ0VSGdJEvPRenbc8AJXkdJTcfHh4qO
Qhf6uQEoBBtlPJvFgVoEO7+YFcvXIJK0W6yNSEBPH8ulVZMpdf+FF1qJC/lk
2hsSFUXhYifQHTJftfPtieuna/1O1FZnZ9lcByvV75irYp/6zdk0BbvQxVLM
aStb77ZTK0wsz+VF3SQWUbQRvd6ge8GYinGutRdDjXf7WK8FWoSoDbcOQ1/R
l547YYT0D1t0kPBUWLTqQpUAfh9HUZ9H7o/i0ee/+Hx0OWQb2UvTcBiF9XSx
3c5Hz3rhpEym9fDK2o9RqkXfOJIiCgEAt8MV9ZhwZ0JB+5Jco+2s8G25LFML
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
k0PGX/Tn4ucyI3YpLCFJNmfYJLILuB7SIlgSQVRug5ntYiVqhwXcUsxaPHM3
TnUU25FtpAAl2noyt54LHkB4zJpZLbA/2RM+oCQoy7M0ST2l1xB/ooI1S6PL
lcUgdLXcn7Zri6xaYrtFJvgfs5LcWYDjME40tGVnx2YidEIEp0SGOGNUnQQT
sYwSCLmbSORJBs+U2IK35+ruY8ApqqK4+MvxRRcDHtTgM08iDMzsmnZOiWSy
KNJcfo17FVVG4f4UTa4Wh4mlmtVKoBmYE8DW7LW/f3N/d3taT9KYbAH7HM9B
yidfcKiCYo8hqzRIKQGmgrQdUojDTmpkzxlYZFUguRt+HPQiAhSi5FpZMrSv
Li1GhsV8dwyuOt24czkaH+7e3LdV+OLZs5ejF7/8p08uey9eDCdNPq6awrpz
0jRPnZMtWIkD2KVLWaiBB6wLZr3K2Zej0gBuTviGRpZpdQP6fYozOtolss5D
QrERKWRSN7SgxBA5Y9lqp8zAB1otBrRLHNOEeMVRWcLpShXbTbtWQ4KaIvhb
0LcHOBk7eQzy/2BANNGVCO+K/fpa7oDeXBxcOsuCTsCSNXz2Lb5n9p2KrzVE
kK07o7NWWYtPvhCncamdCZsNwCpLcXCXG5lxbrBp035zCU1wLRtPsag0zZ19
zJTnQbZAWPKYq9GqYFPKP7X9uS4lX1yr/HBNDYF0pbirwKmsQl3cvLpppcMn
REnhFzJYxUxbvSQErR5KNXAsaU2txyLo2VRYfC5yAXcIHUEceB5JfPdxlrFS
jyJ7mDhypwTvK9KrAX0H1oOOOlGZhvgUvf6Zk4Wbp/0WrmHqS8nU2x5JcTFR
yCeltVE4PblQKi/GAv+I0+70+Obh9jS31nhw1i1x/yjk4VhtgHgnCAJt/jSl
Ep5EPjcRyQPqYjkeRg0VKCRDsXDhUCWax2rkXVXZMBj89H8/rONunFp/k60f
3j5ux4P+i8/+2y+e/eK//W+/fDnqX2LKULiDdi53kyx1ZyKyhIu0sg8RWkHv
QuEQUu41YO/04qXwP+os5lr2NLWbNzf8HbIg4159+MytAl+wZLaJkEmLneBS
Ws4rOZcDFQT/IToGuz0U0lHMBTxye812UPtrnWjIT3IMPO4ON2o1ZIW22QlY
JR0fpHRBi+yFRlxJ01c2Og5Mp71BrGq5duOcozaQgCOXxAi/jFqJFZoMyg10
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
GjB0sPUbV6OTTFTxLfIZ+Oqoy3pScKUsMtFyyhUnScyJF6p9itK47VPjGbHS
Gs6Y+JtB/xpXejlAj++++mqykM+w3PQpE+dppxbruRg4BajS/FmSRcx6POyW
B1uQbbk7Trvzgaa9dOv7Y1rwUheZikNMFJCpCvPRzyRz/bm2BqWcohDjKX5O
luyRuJykabo+L6UPOKxf/+3//d//ctlefv+f//M/f/v85VVew/2ynjXbZ9SK
TqM4FHslxM8eD2yJp9udy6YcPNccnA5O3PmZWo4/+3jJZv2Ib7CciNWWWQMl
VkVOs/eQQl1O/zHyfl0egUhiH1+ul5v9/Gmx2xpiPiSJs1OREDr+whnHYMNN
kTsEgEbt41Rz0WeM6PgxnCu7k6rw451NMBQ7lHlHehP1cun5FZhnnx1AYBxy
Kn5Nt3VaFfn7zC539DRrKiDR0ZUT0Ij1JvXty8eGd7E8xnxa7//242y14Zlo
UsUlQiBVGo3PaKpHPviDMS4/sJ8UPtO45xva8T7I3lJUJUVjHrutQvgp6c1+
Ik1ahVklTZh/1nM9aBJUSOVM6knmaNxR44iunG2Nkkg6IRJo8sbCm0Y1YEGL
4mpaN3yGocZFkOEdOVKZ5pLVM+8fHv/23UhLG30GUxEGLvykwS2xCnfziYF0
bDZvTexOebfOwWN+RHESZosrezuhcGcX19fz/mieJqFnL2bGAqeGX/jy4jKc
xR0NCeNgGhUDc+5Ofwk+YN396cuv//7/3ZaP79r9/X/+7//49ZdPhJmX3+vQ
DVtOHutwhlhYT8q/7XtK+VY+sJfbKzMw6SQGGBz38FhevvxyWd3gWYMXtfsw
ibOcjn0EWRyOvRArGD7o+XkxbET7gCZZq2CfSyqB1dA2u335qYME4/JdX3QK
3CK5WglMSvWaWCTHmdMm8gt/VrhKsqVYvblH8NvWRGUopYZud4E6sTXKsPzS
RedzxFtzEtxtYjLf5OeU8lP6e/Gzxi1VmW8ze2qjibSBRwQ7JtNDxi8/paec
Q08x361pIKaxeEMunNREwsSqaQWOUip4KkJpDKqZ6YJq02g4OAp8wW3QwKlp
s1AIQb2CfKfTGt3GNdh3jw+MbkeTp0coJbPE8lBOPWGlHZe2XF3Jkx9fnTsk
uJbK6snA3PJVDcHO4fU8l7YrS8X2ROW4tzVToTfMajEvp7Vc20NV0YGnduLl
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
V5KSMZfYYlDb2SYRYpTG2QRVmROWV04S1tmJ8yydpE53WiUDbkeKZAutfWFd
OyMr1gOStyNTklhJpQn3ilzngG91d2w0djoqsvmyk492d7m8fPvxLBXuFo07
Oo8dSbXQrSSq8mN/gLfLtHePaN3saWHfduhBLAGGsIjXI/weWwFK4ZXoB+A2
slCP0pdlpAWzz3RuAVmDHBBSYNcMcZFXCZCo0VU4DNL9yDoLjaQPVfaMEEeY
k7SOmnxovBt6lJp8vca8Y9Op22ksWVGy59zQOjEwRfO8sc1J3KfcZOkyBnF6
zOW9OTKJTNu1cMy8/q1YqueRR51gmdBgJkkdQFl4u1Y4NskPRvhBFR5ZmsTs
HAu/2Onp6qptzcpgp+v3rxncqJM3FFrq4apfD20yuXt7e/eYzA7b1awvnx4e
8pnKytyn8HfoyYQaLosYa+Md+TgJ3/CtysXBtRgvUNy8kPMqWy0bx17WraiR
yeP7324epl2uAOdH0UafcKVnttVmcNxHGvVmQmNZCMa0sEA3QN47akP8TPMp
luZKuaici4YOSRSkJi+sxMcyhY2aURuZFTolUz4uBCSGMmsuSlGi+kR1uvC7
ysiZhUdKOwdNkLbEj0skK3C0ojhlUdJ1cPn68ixcidqKw34fkSXqHzS0ks9J
rbYae0nN9TPYjMtermBnqdq3cS4bCrRwNSnyUw2KxsOH0L9LyUUclJfye2Qm
m6hO3DrqZmlN8coDLAsqlenBtShH1IIMdC09MAS29N8CNchFqHXQFf0iQgGu
0UZDrvCbdKyMrFCFVNM0vkBiECeT25I7vcEupZCkUEfpRzxP4vuYWmtb8C7H
qOpwF3boss4iltcZqdK4qQZ3AnKXdXHp8EIWgXp3AgKCp5tAe0tQtYPEcmyt
+GmcJT2mhfeCSW5zhpyH2rIAEtL4LbwaJ8nDzcfH+6dyKXnP7PEh6WaIBmBK
pFbqOwz02v0rrKF0/CFjM1RRlXUbNjHhEC+8SuRTrZgTux+QRKEP12ST37y9
/fC5DWclEa9kNAolVhyvEZuTxnhOR3WKHacrtkajqG9a6cq10vHQvd9rHdMQ
Ji9RrtAxsX2sYkxJzSpYrYZC8joyciRm7GEshy41XQ1YtW1KZXW+VLYzuUqa
Z8ksMZAzvifcY4tsQwhePbyQp3Zw4CTiParP2IjBu9tZZrs7GpPIRlC78IMp
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
JXWbtujakk+Z5KpNp5yYE2GwmG12J5pcpWOoFCEKIByU2dLSEh58Xtc6Klpz
h779fDpAyKXR1o9yhhhQHQmrmYnBcD5ZYLXTsUIMLwKDNLtQr4a1hlR7+TRE
RbwcuZHYB26gMnJE9ih5t5BCtzZGReuJx85oVYBaoYMhI+S43e/7Tw/pKtxe
OGoBFvEZzmSY1HJwRjsW6k1hCbX8UAfSMdswCI4gznArNFzRDBm1KuoMYqgY
rtBqU+UW8ErsocuqfBJ1cwnx42nsgxmH2uygWyk05+VoUrfTBYT9HMSsvuFE
I0XoG4+67dqVKQaWeXlTmD3pJ2hUO049/w1HJjEORxp38nBSz77EgTIGC5pb
5v6YzFwtGvWLQ0/zkJogklX6ReOHT9WXf1x8evvm/dv3N+3y/vWvt2n6ePvx
of32l+dBE75QkSzqh4equPt4ryz3Kk9IsK6i2bs0kaGyyVhDNqZU8K3quCdP
9WYv4z5evzQnSpYSsGx6eWvSslmevlwuL0OnyVPmrToVrXv00p59teeSupCP
Vjsd19JIrWxbFlUqxfQqnDo5TzMYwAIkRc0ce08ttZ6VxfJykphKBYr0u1p+
YPuYEhvu7R1ZAX6n7/fDtN6GamhHoAGLO28IhWjgSWYsdXCeB408D7vMfoTP
HjVw1e4dvq4wvIp6Bo7I3FfdhW0jGomJf+VgKMQoUVUi5WL0nagYI6lEoyr1
9JfL+fm4H+rRY6mWR17zJUwvbRIVBCXlQIeefSp4yXxm/Zm+MrpuaQ8gejCA
8VwXm7536bUXIs4c4KC0oHeVNpumrnBN2Vfik/Ws2GjdC2AJrNrw7ZxM8jq7
T4t+MVcz6+BB3E64J/JKB0y78DSiyTM0rDm1CT/McCsZ6bF/Cr2I+vKx4wDs
MdQ/J77JdC0liDwSPOdSOomaoNMeCSSydoXGqYJ6F6rHtqyTUVr8/Pftw82b
d6/fvc3Wkw83n4v84ebzKB1+ft3OVWyGIr18SKbN481DUudXypfGY+ERtdL8
ivYp2Kw6cxAfmQVTmomX5Gdbaat25NooSJHeh98nLVqK/ONh3pWpIfcKlNfa
H5m7M0V0gzcMPlhXknnlAC8dAf0RpXVzGlZONdgnH2w6ZRMMr13FVg/DY71e
JPfjdphpub2BebPkRWyas3DnCzFE17J0aJ66pXRZlcvwNEcPxh4424YQD2Xm
2DU+bNSkhEZAzy8cdv0untiKQX2wep1jsNdNo24ehckGnzmdBhv47XDc08WL
JbR2zshqFdGhVv5uzQFWcXW8nL98+fHnv/7p52k9r8bdAYmluSwqsUKHIRFJ
R/sV7hJ86AvSzmlLppbmxpbC7oHGBrNQa2uBLiwZdwydJ8SmhljHOq9gMjPb
BM6uLtqGIZYdcZaaszGr86fH8eipn45CPTNTyVahLRHPjZ0gAbfWoDOWjRTq
fPLwOHpMvQxkZ8Y+XRt0wQUTksdyWOdQGJ4m/2kscsJZEumfZnIVquKrSFUh
KTOVNL8oPeypwh9/+dfTw+3r0F/cluf5w+f7NL2/fZxk5fay1cCq7uarcBPP
ZuGiUzeTWjJMPEFrsGH+O1PdOFElrBfphL4hhs5xH5d5jIgAJ6niTCgU2ohw
JCoJa8P5mNY0G8Lb17ljeIurF5NcXcYNtjyDRuKyquz2qFqn2JZtDO7W86Cb
oyOqonGNMFvE4mmdPX38mM0vlx1ZS/EKCQ+8QOiWjQ92mmP11pR3f1hPl3vp
acMTvydUjed8cJDNJqpyd6gLQXxSMCELUQV2sjNEW47wqA9kbp5lLSQBStZC
VWsbJMHn08mqlK3Xguiz/v+mzoTJjeQ8ov/UobBXS4o7B4C+LzTQQONqHDPD
IUeUVgrLIUfY/9KVLwuU1w5ql8eQM+zq+o7Ml4RIj/GYsJk/ojQJBd7167dv
7x9///uff4QDclw36yNXy3Y9ODtqs4FFsXIE9ib0I234coZvyXx3LGclgpVj
C3BdVoD19OKpPNvS7lDiXQVEOHheX9eWv5/MZnTNDNl/hNdjSRRGxjstj2jX
LBQxi9k8LVb1U5prLJZXxnPMF6Sc6+kEjp5Ey7qtd1WVPv06Sx7TGJ6GugrJ
b2qXRPjVc2qrlLRCGvnEbKyCysNxgUQcZLYV2QiJiF6cxySrmlCAC4yoVig8
TOd/XJ5/+fdfZ9ni9N9/6eZP88eHp6fwwfv9YbsMn3a9MhOmC1+2EukkhEYQ
7RCL8jq9p9TYOKgWQIk8JqoiQSBGRJUnOTlxo2FiXhEb+GY9rJbDeUfSozxa
irCaK40hN+c+L6NuuCQ1qhbBvXK8oUUL+nvEtSaBj1Q/nSRF4aW4qHuCoto6
SrZVdAzjPjzr1exPn54GEQuVyzcMdytejATQYHSHvFzHIByU9chCA47hniJr
h06EtXj4KSfIoMdRMWk7ugOe+L2lh8oZxIrOtm88EIZwQqKlG0yQrL30XfAZ
pn03Xi5koh/2NCUEIniYtgMfejS5QbfRbn++vrz++PH+4/d9lR4/bidHkujM
DyvFcipwtO8VpTdsQ1e5Cd+zTj89LULdJe/gUh5be8tqm59bwM3Rb6BXDiN1
GfkrD2D4OwkXdispitV2Ah00VljYLeS1tpXqLI7hOCwPy1TEvuwhdCFsB2tC
YMTQTMn2c+ZU4oF+Sscczkwo8jOKkyRGfkM3Dw8RyIZIXYDknjm+U8lSMR3T
yt+ULRqveJQm6rRUsRNM45TAKgJsn2ZJeBEc/3HKPv/6ED706X/+91Q/Zl2b
J89Ps2rcapoU/uRySwxDb2BoFvmoHh77QVfDXrIwqs1lIAy3NpQ7VkbI2pha
kewp9VZt5igJJuEPEir+zX5ay3STJ7MZTK1Ye7qJYnrhULq6cn3WGGpS//Ts
oIMnQbrqnF8Rro8kXfcEFLMc08Z43Yen5RRK9U325Y+f0uk2ud3lQETTkUsw
rS6ODsBUI96MoRZyoEA4JjoRW7bpe5KZyeA8GnUl7YmGw0poFu/tcIToczqe
D8ZcccfYa6tn/8iQGNOU+CeH6bTNagyHtD7hz3HWtNgx0XtMI2JZGwSvP+fl
/XrYhttjClXB+PF6u06QSEH/YPga1rLBkCTVC+0Tbsj8OU3WW2CJGm4pdxDK
FZnlcbSheryOS0H1d208AKUjZ7WpZV9c+Cks0fPworqzzZOClgJOOUekacZt
uMtD/fCY5LqHRJpV/oswgfj+LATJClJZqaBS0QSfEyfH4CKUjSM1mNr3hw5J
zHXOFrnnaQh18wgXNQ9BDUji+0dveRGaTWKUTL1ILdZowPaEP/n+nx/L2WO4
NB6S2z/fw0vsch7q+cNjvd1gSQov65Zdq1q26N9KESaqJS68uMsMsicJMJee
hN0RVDytKEsHiXJViCKde/+eadKMN17pouELtj1swl2bCuu+mLM3JR7KGhx9
ZE8P2aVUJjXRpMca2JWyNiLqINWNO1OtSep+zXFZtmsZsFfhhRre9edrOI6P
v/wyG296xrfRpqoTopZ2QDy4h75grdNxrLZ+L3M3mJbAYQEyqpmTBlXK8TB8
x/qto5HTYlOHHv2iNToqLo6HTwdN/HQghe0MBuWEMWqChKJvyF477i1O1NEL
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
    "], {{0, 600}, {800, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Primary image", "ImageWidth" -> 800, 
        "ImageLength" -> 600, "BitsPerSample" -> 8, "Compression" -> 
        "Uncompressed", "PhotometricInterpretation" -> "Black Is Zero", 
        "StripOffsets" -> {8, 16008, 32008, 48008, 64008, 80008, 96008, 
         112008, 128008, 144008, 160008, 176008, 192008, 208008, 224008, 
         240008, 256008, 272008, 288008, 304008, 320008, 336008, 352008, 
         368008, 384008, 400008, 416008, 432008, 448008, 464008}, 
        "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 1, "RowsPerStrip" -> 20, 
        "StripByteCounts" -> {16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 
         16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000, 16000,
          16000, 16000, 16000, 16000}, "PlanarConfiguration" -> 1, "Software" -> 
        "SPOT 4.1", "DateTime" -> DateObject[{2016, 12, 9}, 
          TimeObject[{14, 5, 32.}, TimeZone -> -5.], TimeZone -> -5.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{800, 600},
  PlotRange->{{0, 800}, {0, 600}}]], "Output",
 CellChangeTimes->{{3.713554022531111*^9, 3.713554073771894*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tabs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cellDensities", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"allfiles", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "allfiles"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7135539648040686`*^9, 3.7135539999380455`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "allfiles"}]], "Input",
 CellChangeTimes->{{3.7135576244064684`*^9, 3.7135576280957046`*^9}}],

Cell[BoxData["165"], "Output",
 CellChangeTimes->{
  3.7135576285169053`*^9, {3.7135577445718946`*^9, 3.7135577595174327`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "cellDensities"}]], "Input",
 CellChangeTimes->{{3.7135576302485085`*^9, 3.7135576341847153`*^9}}],

Cell[BoxData["165"], "Output",
 CellChangeTimes->{3.713557634496716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<cellDensitiesList.xls\>\"", ",", "tabs"}], "]"}]], "Input",
 CellChangeTimes->{{3.7135542692877345`*^9, 3.7135542918436995`*^9}}],

Cell[BoxData["\<\"cellDensitiesList.xls\"\>"], "Output",
 CellChangeTimes->{3.713554295746707*^9, 3.7135577676268964`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "tabs"}]], "Input",
 CellChangeTimes->{{3.713554002522193*^9, 3.713554004474305*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.9947916666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\C1 1.tif\"\>"},
    {"0.9895833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\C1 2.tif\"\>"},
    {"0.9895833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\C2 1.tif\"\>"},
    {"1.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 8 2016\\\\C2 2.tif\"\>"},
    {"1.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 8 2016\\\\MLL-1 1.tif\"\>"},
    {"0.9947916666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\MLL-1 2.tif\"\>"},
    {"0.7604166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\MLL-2 1.tif\"\>"},
    {"0.984375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 8 2016\\\\MLL-2 2.tif\"\>"},
    {"0.8333333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\P1 1.tif\"\>"},
    {"0.7760416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 8 \
2016\\\\P2 1.tif\"\>"},
    {"1.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 8 2016\\\\P2 2.tif\"\>"},
    {"0.23958333333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 A Boys picture 1.tif\"\>"},
    {"0.27604166666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 A Boys picture 2.tif\"\>"},
    {"0.375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 9 2016\\\\C1 A Girls picture 1.tif\"\>"},
    {"0.44791666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 A Girls picture 2.tif\"\>"},
    {"0.125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 9 2016\\\\C1 A VC picture 1.tif\"\>"},
    {"0.13541666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 A VC picture 2.tif\"\>"},
    {"0.6770833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 B Boys picture 1.tif\"\>"},
    {"0.421875`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\C1 B Boys picture 2.tif\"\>"},
    {"0.5052083333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C1 B Girls picture 1.tif\"\>"},
    {"0.484375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\C1 B Girls picture 2.tif\"\>"},
    {"0.328125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\C1 B VC picture 1.tif\"\>"},
    {"0.34375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 9 2016\\\\C1 B VC picture 2.tif\"\>"},
    {"0.4270833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C2 A Girls picture 1.tif\"\>"},
    {"0.33854166666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C2 A Girls picture 2.tif\"\>"},
    {"0.3802083333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C2 B Girls picture 1.tif\"\>"},
    {"0.23958333333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\C2 B Girls picture 2.tif\"\>"},
    {"0.32291666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 1A Boys picture 1.tif\"\>"},
    {"0.24479166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 1A Boys picture 2.tif\"\>"},
    {"0.09895833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 1B Boys picture 1.tif\"\>"},
    {"0.09895833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 1B Boys picture 2.tif\"\>"},
    {"0.171875`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\MLL 2A Boys picture 1.tif\"\>"},
    {"0.06770833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2A Boys picture 2.tif\"\>"},
    {"0.125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 9 2016\\\\MLL 2A Girls picture 1.tif\"\>"},
    {"0.16666666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2A Girls picture 2.tif\"\>"},
    {"0.4270833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2A VC picture 1.tif\"\>"},
    {"0.9375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\
\\December 9 2016\\\\MLL 2A VC picture 2.tif\"\>"},
    {"0.14583333333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2B Boys picture 1.tif\"\>"},
    {"0.16666666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2B Boys picture 2.tif\"\>"},
    {"0.08854166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2B Girls picture 1.tif\"\>"},
    {"0.078125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\MLL 2B Girls picture 2.tif\"\>"},
    {"0.21354166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2B VC picture 1.tif\"\>"},
    {"0.36979166666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\MLL 2B VC picture 2.tif\"\>"},
    {"0.08854166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 A Boys picture 1.tif\"\>"},
    {"0.13020833333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 A Boys picture 2.tif\"\>"},
    {"0.24479166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 A Girls picture 1.tif\"\>"},
    {"0.203125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\P1 A Girls picture 2.tif\"\>"},
    {"0.16666666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 B Boys picture 1.tif\"\>"},
    {"0.35416666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 B Boys picture 2.tif\"\>"},
    {"0.171875`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 9 2016\\\\P1 B Girls picture 1.tif\"\>"},
    {"0.15104166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 9 \
2016\\\\P1 B Girls picture 2.tif\"\>"},
    {"0.7760416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\C cells\\\\Boys C1 A Picture 1.tif\"\>"},
    {"0.84375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Boys group\\\\C cells\\\\Boys C1 A Picture \
2.tif\"\>"},
    {"0.7760416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\C cells\\\\Boys C1 B picture1.tif\"\>"},
    {"0.46354166666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\C cells\\\\Boys C1 B Picture 2.tif\"\>"},
    {"0.15104166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\MLL cells\\\\Boys MLL1 A Picture 1.tif\"\>"},
    {"0.234375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 10 2016\\\\Boys group\\\\MLL cells\\\\Boys MLL1 A Picture \
2.tif\"\>"},
    {"0.026041666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\MLL cells\\\\Boys MLL1 B Picture 1.tif\"\>"},
    {"0.08333333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\MLL cells\\\\Boys MLL1 B Picture 2.tif\"\>"},
    {"0.057291666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\MLL cells\\\\Boys MLL2 A Picture 1.tif\"\>"},
    {"0.078125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 10 2016\\\\Boys group\\\\MLL cells\\\\Boys MLL2 A Picture \
2.tif\"\>"},
    {"0.09375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Boys group\\\\MLL cells\\\\Boys MLL2 B Picture \
1.tif\"\>"},
    {"0.10416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\MLL cells\\\\Boys MLL2 B Picture 2.tif\"\>"},
    {"0.08854166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\P cells\\\\Boys P1 A Picture 1.tif\"\>"},
    {"0.09895833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\P cells\\\\Boys P1 A Picture 2.tif\"\>"},
    {"0.078125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 10 2016\\\\Boys group\\\\P cells\\\\Boys P1 B Picture 1.tif\"\>"},
    {"0.07291666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Boys group\\\\P cells\\\\Boys P1 B Picture 2.tif\"\>"},
    {"0.41666666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\C cells\\\\VC C1 A Picture 1.tif\"\>"},
    {"0.35416666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\C cells\\\\VC C1 A Picture 2.tif\"\>"},
    {"0.07291666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\C cells\\\\VC C1 B Picture 1.tif\"\>"},
    {"0.35416666666666663`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\C cells\\\\VC C1 B Picture 2.tif\"\>"},
    {"0.11979166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\MLL cells\\\\VC MLL2 A Picture 1.tif\"\>"},
    {"0.11979166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\MLL cells\\\\VC MLL2 A Picture 2.tif\"\>"},
    {"0.23958333333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\MLL cells\\\\VC MLL2 B Picture 1.tif\"\>"},
    {"0.19791666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Dr. Chinwalla\\\\MLL cells\\\\VC MLL2 B Picture 2.tif\"\>"},
    {"0.5885416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\C cells\\\\Girls C1 A Picture 1.tif\"\>"},
    {"0.65625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Girls group\\\\C cells\\\\Girls C1 A Picture \
2.tif\"\>"},
    {"0.8177083333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\C cells\\\\Girls C1 B Picture 1.tif\"\>"},
    {"0.8385416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\C cells\\\\Girls C1 B Picture 2.tif\"\>"},
    {"0.5885416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\C cells\\\\Girls C2 A Picture 1.tif\"\>"},
    {"0.53125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Girls group\\\\C cells\\\\Girls C2 A Picture \
2.tif\"\>"},
    {"0.625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Girls group\\\\C cells\\\\Girls C2 B Picture \
1.tif\"\>"},
    {"0.5729166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\C cells\\\\Girls C2 B Picture 2.tif\"\>"},
    {"0.16145833333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\MLL cells\\\\Girls MLL2 A Picture 1.tif\"\>"},
    {"0.09375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Girls group\\\\MLL cells\\\\Girls MLL2 A Picture \
2.tif\"\>"},
    {"0.11979166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\MLL cells\\\\Girls MLL2 B Picture 1.tif\"\>"},
    {"0.08333333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\MLL cells\\\\Girls MLL2 B Picture 2.tif\"\>"},
    {"0.06770833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\P cells\\\\Girls P1 A Picture 1.tif\"\>"},
    {"0.125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 10 2016\\\\Girls group\\\\P cells\\\\Girls P1 A Picture \
2.tif\"\>"},
    {"0.19791666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\P cells\\\\Girls P1 B Picture 1.tif\"\>"},
    {"0.18229166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 10 \
2016\\\\Girls group\\\\P cells\\\\Girls P1 B Picture 2.tif\"\>"},
    {"0.9375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\
\\December 12 2016\\\\Boys\\\\C1 Cells\\\\Boys C1 A 1.tif\"\>"},
    {"0.9635416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\C1 Cells\\\\Boys C1 A 2.tif\"\>"},
    {"0.9635416666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\C1 Cells\\\\Boys C1 B 1.tif\"\>"},
    {"0.90625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\C1 Cells\\\\Boys C1 B 2.tif\"\>"},
    {"0.03645833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\MLL1 Cells\\\\Boys MLL1 A 1.tif\"\>"},
    {"0.03645833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\MLL1 Cells\\\\Boys MLL1 A 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\MLL1 Cells\\\\Boys MLL1 B 1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\MLL1 Cells\\\\Boys MLL1 B 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\MLL2 Cells\\\\Boys MLL2 A 1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\MLL2 Cells\\\\Boys MLL2 A 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\MLL2 Cells\\\\Boys MLL2 B 1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\MLL2 Cells\\\\Boys MLL2 B 2.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\P1 Cells\\\\Boys P1 A 1.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Boys\\\\P1 Cells\\\\Boys P1 A 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\P1 Cells\\\\Boys P1 B 1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Boys\\\\P1 Cells\\\\Boys P1 B 2.tif\"\>"},
    {"0.7604166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Dr Chinwalla\\\\C1 Cells\\\\VC C1 A 1.tif\"\>"},
    {"0.7708333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Dr Chinwalla\\\\C1 Cells\\\\VC C1 A 2.tif\"\>"},
    {"0.515625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 12 2016\\\\Dr Chinwalla\\\\C1 Cells\\\\VC C1 B 1.tif\"\>"},
    {"0.59375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Dr Chinwalla\\\\C1 Cells\\\\VC C1 B 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Dr Chinwalla\\\\MLL2 Cells\\\\VC MLL2 A \
1.tif\"\>"},
    {"0.03125`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Dr Chinwalla\\\\MLL2 Cells\\\\VC MLL2 A \
2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Dr Chinwalla\\\\MLL2 Cells\\\\VC MLL2 B \
1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Dr Chinwalla\\\\MLL2 Cells\\\\VC MLL2 B 2.tif\"\>"},
    {"0.20833333333333331`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Girls\\\\C cells\\\\Girls C1 A pic.tif\"\>"},
    {"0.015625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 12 2016\\\\Girls\\\\C cells\\\\Girls C1 B pic.tif\"\>"},
    {"0.041666666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Girls\\\\C cells\\\\Girls C2 A pic.tif\"\>"},
    {"0.03645833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Girls\\\\C cells\\\\Girls C2 B pic.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 12 \
2016\\\\Girls\\\\MLL2\\\\Girls MLL2 A pic.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Girls\\\\MLL2\\\\Girls MLL2 B pic.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Girls\\\\P1\\\\Girls P1 A pic.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 12 2016\\\\Girls\\\\P1\\\\Girls P1 B pic.tif\"\>"},
    {"0.9322916666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\C group\\\\Boys C1 A Picture 1.tif\"\>"},
    {"0.8958333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\C group\\\\Boys C1 A Picture 2.tif\"\>"},
    {"1.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\C group\\\\Boys C1 B Picture \
1.tif\"\>"},
    {"0.984375`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 14 2016\\\\Boys Group\\\\C group\\\\Boys C1 B Picture 2.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL1 A Picture 1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL1 A Picture \
2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL1 B Picture \
1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL1 B Picture \
2.tif\"\>"},
    {"0.020833333333333332`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL1 B Picture 3.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL2 A Picture \
1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL2 A Picture 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL2 B Picture \
1.tif\"\>"},
    {"0.015625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 14 2016\\\\Boys Group\\\\MLL Group\\\\Boys MLL2 B Picture \
2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\P group\\\\Boys P1 A Picture \
1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\P group\\\\Boys P1 A Picture 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Boys Group\\\\P group\\\\Boys P1 B Picture \
1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Boys Group\\\\P group\\\\Boys P1 B Picture 2.tif\"\>"},
    {"0.875`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Dr. Chinwalla\\\\C group\\\\VC C1 A Picture 1.tif\
\"\>"},
    {"0.4583333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Dr. Chinwalla\\\\C group\\\\VC C1 A Picture 2.tif\"\>"},
    {"0.9739583333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Dr. Chinwalla\\\\C group\\\\VC C1 B Picture 1.tif\"\>"},
    {"0.6979166666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Dr. Chinwalla\\\\C group\\\\VC C1 B Picture 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Dr. Chinwalla\\\\MLL Group\\\\VC MLL2 A Picture \
1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Dr. Chinwalla\\\\MLL Group\\\\VC MLL2 A Picture \
2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Dr. Chinwalla\\\\MLL Group\\\\VC MLL2 B Picture \
1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Dr. Chinwalla\\\\MLL Group\\\\VC MLL2 B Picture \
2.tif\"\>"},
    {"0.041666666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C1 A Picture 1 Anomaly.tif\"\>"},
    {"0.03645833333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C1 A Picture 2.tif\"\>"},
    {"0.057291666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C1 A Picture 3.tif\"\>"},
    {"0.015625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 14 2016\\\\Girls Group\\\\C group\\\\Girls C1 B Picture \
1.tif\"\>"},
    {"0.057291666666666664`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C1 B Picture 2.tif\"\>"},
    {"0.020833333333333332`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C2 A Picture 1.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\C group\\\\Girls C2 A Picture 2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Girls Group\\\\C group\\\\Girls C2 B Picture \
1.tif\"\>"},
    {"0.015625`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\
\\\\December 14 2016\\\\Girls Group\\\\C group\\\\Girls C2 B Picture \
2.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\MLL Group\\\\Girls MLL2 A Picture 1.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\MLL Group\\\\Girls MLL2 A Picture 2.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\MLL Group\\\\Girls MLL2 B Picture1.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Girls Group\\\\MLL Group\\\\Girls MLL2 B \
Picture2.tif\"\>"},
    {"0.`", "\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\\\\December 14 2016\\\\Girls Group\\\\P group\\\\Girls P1 A Picture \
1.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\P group\\\\Girls P1 A Picture 2.tif\"\>"},
    {"0.010416666666666666`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\P group\\\\Girls P1 B Picture 1.tif\"\>"},
    {"0.005208333333333333`", \
"\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio Pics\\\\December 14 \
2016\\\\Girls Group\\\\P group\\\\Girls P1 B Picture 2.tif\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.713554041290229*^9, 3.7135577690979805`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saved CNN", "Subsection",
 CellChangeTimes->{{3.713551003575384*^9, 3.713551004821589*^9}, {
  3.713551062239786*^9, 3.713551065950999*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7135508756659813`*^9, 3.7135508846317987`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\student\\\\Documents\\\\Cancer Bio \
Pics\"\>"], "Output",
 CellChangeTimes->{3.7135508850861993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<LiveDeadCell.wlnet\>\"", ",", "trainedNet"}], "]"}]], "Input",
 CellChangeTimes->{{3.713550793750448*^9, 3.7135507959615746`*^9}, {
  3.713550890942512*^9, 3.713550907111437*^9}}],

Cell[BoxData["\<\"LiveDeadCell.wlnet\"\>"], "Output",
 CellChangeTimes->{3.713550908477907*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ImageDimensions"->{
  Cell[149837, 3232, 547, 13, 30, "Input",
   CellTags->{"ImageDimensions", "ColorSpace"}],
  Cell[150387, 3247, 7026, 152, 137, "Output",
   CellTags->{"ImageDimensions", "ColorSpace"}]},
 "ColorSpace"->{
  Cell[149837, 3232, 547, 13, 30, "Input",
   CellTags->{"ImageDimensions", "ColorSpace"}],
  Cell[150387, 3247, 7026, 152, 137, "Output",
   CellTags->{"ImageDimensions", "ColorSpace"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ImageDimensions", 637216, 11941},
 {"ColorSpace", 637422, 11946}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 2, 72, "Chapter"],
Cell[741, 26, 872, 20, 66, "Input",
 InitializationCell->True],
Cell[1616, 48, 795, 19, 66, "Input",
 InitializationCell->True],
Cell[2414, 69, 826, 19, 66, "Input",
 InitializationCell->True],
Cell[3243, 90, 907, 20, 66, "Input",
 InitializationCell->True],
Cell[4153, 112, 873, 20, 66, "Input",
 InitializationCell->True],
Cell[5029, 134, 877, 20, 66, "Input",
 InitializationCell->True],
Cell[5909, 156, 1055, 26, 69, "Input"],
Cell[6967, 184, 2411, 62, 85, "Input",
 InitializationCell->True],
Cell[9381, 248, 242, 5, 30, "Input"],
Cell[9626, 255, 490, 12, 46, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[10153, 272, 114, 1, 72, "Chapter"],
Cell[CellGroupData[{
Cell[10292, 277, 841, 19, 30, "Input"],
Cell[11136, 298, 1862, 38, 126, "Output"],
Cell[13001, 338, 341, 7, 21, "Message"],
Cell[13345, 347, 340, 7, 21, "Message"],
Cell[13688, 356, 338, 7, 21, "Message"],
Cell[14029, 365, 526, 10, 21, "Message"],
Cell[14558, 377, 343, 7, 21, "Message"],
Cell[14904, 386, 343, 7, 21, "Message"],
Cell[15250, 395, 340, 7, 21, "Message"],
Cell[15593, 404, 524, 10, 21, "Message"],
Cell[16120, 416, 345, 7, 21, "Message"],
Cell[16468, 425, 342, 7, 21, "Message"],
Cell[16813, 434, 526, 10, 21, "Message"],
Cell[17342, 446, 341, 7, 21, "Message"],
Cell[17686, 455, 343, 7, 21, "Message"],
Cell[18032, 464, 338, 7, 21, "Message"],
Cell[18373, 473, 524, 10, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18934, 488, 901, 21, 30, "Input"],
Cell[19838, 511, 1719, 35, 126, "Output"],
Cell[21560, 548, 342, 7, 21, "Message"],
Cell[21905, 557, 341, 7, 21, "Message"],
Cell[22249, 566, 532, 10, 21, "Message"],
Cell[22784, 578, 342, 7, 21, "Message"],
Cell[23129, 587, 339, 7, 21, "Message"],
Cell[23471, 596, 532, 10, 21, "Message"],
Cell[24006, 608, 344, 7, 21, "Message"],
Cell[24353, 617, 343, 7, 21, "Message"],
Cell[24699, 626, 532, 10, 21, "Message"],
Cell[25234, 638, 341, 7, 21, "Message"],
Cell[25578, 647, 339, 7, 21, "Message"],
Cell[25920, 656, 528, 10, 21, "Message"]
}, Open  ]],
Cell[26463, 669, 941, 24, 69, "Input"],
Cell[CellGroupData[{
Cell[27429, 697, 2057, 52, 69, "Input"],
Cell[29489, 751, 39496, 645, 615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69022, 1401, 2126, 49, 69, "Input"],
Cell[71151, 1452, 2290, 46, 200, "Output"],
Cell[73444, 1500, 342, 7, 21, "Message"],
Cell[73789, 1509, 339, 7, 21, "Message"],
Cell[74131, 1518, 526, 10, 21, "Message"],
Cell[74660, 1530, 611, 11, 21, "Message"],
Cell[75274, 1543, 609, 11, 21, "Message"],
Cell[75886, 1556, 1021, 17, 39, "Message"],
Cell[76910, 1575, 433, 9, 21, "Message"],
Cell[77346, 1586, 449, 9, 21, "Message"],
Cell[77798, 1597, 358, 7, 21, "Message"],
Cell[78159, 1606, 770, 14, 100, "Message"],
Cell[78932, 1622, 770, 14, 100, "Message"],
Cell[79705, 1638, 340, 7, 21, "Message"],
Cell[80048, 1647, 339, 7, 21, "Message"],
Cell[80390, 1656, 524, 10, 21, "Message"],
Cell[80917, 1668, 608, 11, 21, "Message"],
Cell[81528, 1681, 609, 11, 21, "Message"],
Cell[82140, 1694, 1021, 17, 39, "Message"],
Cell[83164, 1713, 431, 9, 21, "Message"],
Cell[83598, 1724, 449, 9, 21, "Message"],
Cell[84050, 1735, 358, 7, 21, "Message"],
Cell[84411, 1744, 768, 14, 100, "Message"],
Cell[85182, 1760, 768, 14, 100, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85987, 1779, 2277, 55, 88, "Input"],
Cell[88267, 1836, 20228, 327, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108532, 2168, 757, 22, 30, "Input"],
Cell[109292, 2192, 312, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109641, 2206, 878, 28, 30, "Input"],
Cell[110522, 2236, 229, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110788, 2248, 148, 3, 30, "Input"],
Cell[110939, 2253, 360, 9, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111348, 2268, 107, 1, 101, "Title"],
Cell[111458, 2271, 2100, 52, 50, "Input"],
Cell[113561, 2325, 1567, 44, 50, "Input"],
Cell[115131, 2371, 423, 12, 30, "Input"],
Cell[115557, 2385, 421, 12, 30, "Input"],
Cell[115981, 2399, 763, 23, 69, "Input"],
Cell[CellGroupData[{
Cell[116769, 2426, 293, 7, 30, "Input"],
Cell[117065, 2435, 8709, 177, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125811, 2617, 193, 4, 30, "Input"],
Cell[126007, 2623, 6813, 140, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132857, 2768, 147, 2, 30, "Input"],
Cell[133007, 2772, 9247, 240, 318, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142303, 3018, 112, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[142440, 3023, 519, 15, 30, "Input"],
Cell[142962, 3040, 227, 5, 30, "Output"]
}, Open  ]],
Cell[143204, 3048, 2445, 58, 69, "Input"],
Cell[145652, 3108, 1862, 49, 69, "Input"],
Cell[147517, 3159, 480, 13, 30, "Input"],
Cell[148000, 3174, 476, 13, 30, "Input"],
Cell[148479, 3189, 821, 24, 69, "Input"],
Cell[CellGroupData[{
Cell[149325, 3217, 272, 4, 70, "Section"],
Cell[CellGroupData[{
Cell[149622, 3225, 190, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[149837, 3232, 547, 13, 30, "Input",
 CellTags->{"ImageDimensions", "ColorSpace"}],
Cell[150387, 3247, 7026, 152, 137, "Output",
 CellTags->{"ImageDimensions", "ColorSpace"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[157450, 3404, 355, 9, 30, "Input"],
Cell[157808, 3415, 4738, 103, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162583, 3523, 1038, 23, 88, "Input",
 CellID->948101753],
Cell[163624, 3548, 5637, 140, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169298, 3693, 356, 7, 30, "Input"],
Cell[169657, 3702, 4533, 124, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174227, 3831, 167, 3, 30, "Input"],
Cell[174397, 3836, 182, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174616, 3844, 188, 4, 30, "Input"],
Cell[174807, 3850, 151, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174995, 3857, 265, 4, 30, "Input"],
Cell[175263, 3863, 20386, 411, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195686, 4279, 209, 4, 30, "Input"],
Cell[195898, 4285, 6866, 141, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202801, 4431, 150, 2, 30, "Input"],
Cell[202954, 4435, 9601, 250, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212592, 4690, 165, 3, 30, "Input"],
Cell[212760, 4695, 135, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212932, 4702, 10209, 255, 320, "Input"],
Cell[223144, 4959, 118, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223299, 4965, 195, 3, 30, "Input"],
Cell[223497, 4970, 271, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223805, 4981, 260, 6, 30, "Input"],
Cell[224068, 4989, 156, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224261, 4996, 276, 6, 30, "Input"],
Cell[224540, 5004, 3796, 66, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228373, 5075, 207, 4, 30, "Input"],
Cell[228583, 5081, 4458, 77, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233078, 5163, 170, 3, 30, "Input"],
Cell[233251, 5168, 222, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233510, 5179, 172, 4, 30, "Input"],
Cell[233685, 5185, 72, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233818, 5193, 133, 1, 72, "Chapter"],
Cell[CellGroupData[{
Cell[233976, 5198, 1164, 30, 30, "Input"],
Cell[235143, 5230, 264, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235444, 5240, 180, 4, 30, "Input"],
Cell[235627, 5246, 347, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236011, 5258, 292, 7, 30, "Input"],
Cell[236306, 5267, 372029, 6102, 615, "Output"]
}, Open  ]],
Cell[608350, 11372, 500, 15, 30, "Input"],
Cell[CellGroupData[{
Cell[608875, 11391, 131, 2, 30, "Input"],
Cell[609009, 11395, 127, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609173, 11402, 136, 2, 30, "Input"],
Cell[609312, 11406, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609421, 11412, 183, 3, 30, "Input"],
Cell[609607, 11417, 122, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609766, 11423, 121, 2, 30, "Input"],
Cell[609890, 11427, 26081, 468, 2817, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636008, 11900, 146, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[636179, 11906, 174, 3, 30, "Input"],
Cell[636356, 11911, 135, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636528, 11918, 233, 4, 30, "Input"],
Cell[636764, 11924, 95, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

